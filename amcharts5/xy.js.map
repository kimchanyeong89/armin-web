{"version":3,"file":"xy.js","mappings":"sNAuQO,MAAeA,UAAqC,IAA3D,c,oBAWC,sC,gDAAgD,KAEhD,yC,iDAA6B,IAK7B,6C,gDAAqE,KAOrE,8C,gDAA6CC,KAAKC,SAASC,KAAK,IAAUC,IAAIH,KAAKI,MAAO,CAAC,MAO3F,4C,gDAA2C,IAAUD,IAAIH,KAAKI,MAAO,CAAEC,MAAO,KAAMC,OAAQ,SAO5F,+C,gDAA8C,IAAUH,IAAIH,KAAKI,MAAO,CAAEC,MAAO,KAAMC,OAAQ,SAO/F,+C,gDAA8CN,KAAKC,SAASC,KAAK,IAAUC,IAAIH,KAAKI,MAAO,CAAEG,YAAY,EAAOF,MAAO,KAAMC,OAAQ,KAAME,SAAU,gBAKrJ,oC,yDAEA,2C,iDAAkC,IAElC,wC,gDAA2B,IAC3B,sC,gDAAyB,IAEzB,0C,yDACA,0C,yDAEA,wC,iDAA4B,IAQ5B,yC,gDAAwE,IAAI,OAE5E,gD,gDAAuE,KAQvE,yC,yDAEA,8C,iDAAqC,IAErC,4C,yDAEA,iD,iDAA4B,IAE5B,2C,iDAAsB,IAStB,yC,gDAA+BR,KAAKC,SAASC,KAAK,IAAUC,IAAIH,KAAKI,MAAO,CAC3EK,UAAW,CAAC,OAAQ,UACpBD,SAAU,WACVE,WAAY,IAAUP,IAAIH,KAAKI,MAAO,CACrCK,UAAW,CAAC,SAAU,cACtBE,KAAMX,KAAKI,MAAMQ,gBAAgBC,IAAI,qBAIvC,uC,gDAAmD,CAAC,GA03BrD,CAx3BW,QAAAC,GAETd,KAAKe,cAAcC,UACnBhB,KAAKiB,iBAAiBD,UACtBhB,KAAKkB,iBAAiBF,UACtBhB,KAAKmB,gBAAgBH,UACrBhB,KAAKoB,WAAWJ,UAChBK,MAAMP,UACP,CAEU,SAAAQ,GACTD,MAAMC,YAENtB,KAAKuB,WAAW,mBAAmB,GAEnCvB,KAAKwB,WAAWtB,KAAKF,KAAKyB,WAAWC,OAAOC,OAAOC,IAClD,GAAoB,UAAhBA,EAAOC,KACV,OAAYD,EAAOE,WAAYC,IAC9BA,EAASf,SAAS,SAEb,GAAoB,SAAhBY,EAAOC,KACjB7B,KAAKgC,kBAAkBJ,EAAOK,SAAU,CAAC,eACnC,GAAoB,aAAhBL,EAAOC,KACjB7B,KAAKgC,kBAAkBJ,EAAOK,SAAU,CAAC,eACnC,GAAoB,gBAAhBL,EAAOC,KACjB7B,KAAKgC,kBAAkBJ,EAAOK,SAAU,CAAC,eACnC,GAAoB,gBAAhBL,EAAOC,KACjB7B,KAAKkC,gBAAgBN,EAAOO,cACtB,IAAoB,cAAhBP,EAAOC,KAGjB,MAAM,IAAIO,MAAM,6BAFhBpC,KAAKgC,kBAAkBJ,EAAOS,MAAO,CAAC,S,MAMxC,MAAMC,EAAWtC,KAAKa,IAAI,YACtByB,IACHA,EAASC,KAAOvC,KAChBsC,EAASE,eAEVxC,KAAKC,SAASC,KAAKoC,GACnBtC,KAAKyC,WAAaH,EAASI,UAAU,IAAI,IAAS1C,UAAM2C,EAAW,CAAC,GAAI,IACxE3C,KAAKyC,WAAWG,SAASC,QAAQ,QACjC7C,KAAKyC,WAAWK,OAAO,CAAEC,QAAS,EAAGC,iBAAaL,EAAWM,iBAAaN,EAAWO,aAAa,IAClGlD,KAAKyC,WAAWf,OAAOmB,SACxB,CAEU,aAAAM,CAAcC,EAAgBC,GAExC,CAYO,IAAAC,CAAKC,EAAeC,EAAaC,EAAmBC,GAC1D,GAAG1D,KAAKa,IAAI,YAAY,GAGvB,GAFAb,KAAKmD,cAAcI,EAAOC,GAEtBxD,KAAKa,IAAI,WAAa0C,GAASvD,KAAKa,IAAI,QAAU2C,EAAK,CAC1D,IAAIG,EAAa3D,KAAK4D,YAClBC,EAAa7D,KAAK8D,YAElBC,EAAe/D,KAAKa,IAAI,eAAgB,IAAOmD,KAAKC,IAAI,EAAIT,EAAMD,GAElEA,GAAUQ,IACbR,GAASQ,GAGNP,EAAM,EAAIO,IACbP,EAAM,EAAIO,GAGPR,EAAQC,KACVD,EAAOC,GAAO,CAACA,EAAKD,IAGjB,WAAeE,KACnBA,EAAWzD,KAAKa,IAAI,wBAAyB,IAGzC6C,IACJA,EAAW,OAGZ,IAAIQ,EAAgBlE,KAAKmE,WAAW,gBAAiBnE,KAAKa,IAAI,gBAAiB,MAC3EuD,EAAoBF,EAEZ,IAARV,GAAuB,IAAVD,IAEfG,EADGH,EAAQvD,KAAKa,IAAI,QAAS,GAClB,QAGA,OAIC,IAAV0C,GAAuB,IAARC,IAEjBE,EADGF,EAAMxD,KAAKa,IAAI,MAAO,GACd,MAGA,SAIb,IAAIwD,EAAerE,KAAKa,IAAI,eAAgB,GACxCyD,EAAetE,KAAKa,IAAI,eAAgB0D,KAExC,WAAeF,KAClBH,EAAgBE,EAAoBC,GAGrC,IAAIG,EAAwB,EAoD5B,GAlDI,WAAeF,KAClBE,EAAgBJ,EAAoBE,GAIpB,UAAbZ,GACCY,EAAe,GAEd,GAAKd,EAAMD,GAASiB,IACvBhB,EAAMD,EAAQ,EAAIiB,GAKhB,GAAKhB,EAAMD,GAASW,IACvBV,EAAMD,EAAQ,EAAIW,GAGfV,EAAM,GAAKA,EAAMD,EAAQ,EAAIW,IAEhCX,EAAQC,EAAM,EAAIU,KAKfI,EAAe,GAEd,GAAKd,EAAMD,GAASiB,IACvBjB,EAAQC,EAAM,EAAIgB,GAKhB,GAAKhB,EAAMD,GAASW,IACvBX,EAAQC,EAAM,EAAIU,GAEfX,EAAQ,GAAKC,EAAMD,EAAQ,EAAIW,IAElCV,EAAMD,EAAQ,EAAIW,IAIhB,GAAKV,EAAMD,GAASW,IACvBV,EAAMD,EAAQ,EAAIW,GAGf,GAAKV,EAAMD,GAASW,IACvBX,EAAQC,EAAM,EAAIU,GAGC,MAAhBI,GAAwC,MAAhBD,GAAyBd,GAASvD,KAAKa,IAAI,UAAY2C,GAAOxD,KAAKa,IAAI,OAAS,CAC3G,MAAM4D,EAAQzE,KAAKyE,MACfA,GACHA,EAAMC,qBAAqB1E,MAAM,E,CAInC,IAAM2D,GAAcA,EAAWgB,SAAWhB,EAAWiB,IAAMrB,GAAUvD,KAAKa,IAAI,UAAY0C,KAAYM,GAAcA,EAAWc,SAAWd,EAAWe,IAAMpB,GAAQxD,KAAKa,IAAI,QAAU2C,GACrL,OAID,GAAIC,EAAW,EAAG,CACjB,IACIE,EAAYE,EADZgB,EAAS7E,KAAKa,IAAI,uBAYtB,GAVIb,KAAKa,IAAI,UAAY0C,IACxBI,EAAa3D,KAAK8E,QAAQ,CAAEC,IAAK,QAASH,GAAIrB,EAAOE,SAAUA,EAAUoB,OAAQA,KAE9E7E,KAAKa,IAAI,QAAU2C,IACtBK,EAAa7D,KAAK8E,QAAQ,CAAEC,IAAK,MAAOH,GAAIpB,EAAKC,SAAUA,EAAUoB,OAAQA,KAG9E7E,KAAK4D,YAAcD,EACnB3D,KAAK8D,YAAcD,EAEfF,EACH,OAAOA,EAEH,GAAIE,EACR,OAAOA,C,MAIR7D,KAAKgF,IAAI,QAASzB,GAClBvD,KAAKgF,IAAI,MAAOxB,E,MAIbxD,KAAK4D,aACR5D,KAAK4D,YAAYqB,OAEdjF,KAAK8D,aACR9D,KAAK8D,YAAYmB,MAIrB,CAOA,UAAWC,GACV,OAAOlF,KAAKmF,OACb,CAGO,iBAAAnD,CAAkBD,EAA+CtB,GACvEsB,EAASqD,OAAO,WAAW,GAC3BpF,KAAKqF,cAActD,EAAUtB,GAC7BT,KAAKsF,cAAe,EACpBtF,KAAKuF,iBAAiBxD,GAEtB,MAAMyD,EAAQzD,EAASlB,IAAI,SACrB4E,EAAYzF,KAAKiB,iBAEjByE,EAAO3D,EAASlB,IAAI,QACtB2E,GAASE,GACZD,EAAUxF,SAAS0F,UAAUD,GAG9B,MAAM/E,EAAOoB,EAASlB,IAAI,YACtB2E,GAAS7E,GACZ8E,EAAUxF,SAAS0F,UAAUhF,EAE/B,CAEO,gBAAA4E,CAAiBK,EAAgDC,GAAmB,CAmCpF,iBAAAC,GACP,CAKO,0BAAAC,GACP,CAEO,gBAAAC,GACP,CAEU,iBAAAC,GACTjG,KAAKkG,SAAW,CAAC,EACjBlG,KAAKyB,WAAW0E,MAAMC,IACrBpG,KAAKuF,iBAAiBa,EAAU,IAGjC,OAAYpG,KAAKqG,mBAAoBD,IACpCpG,KAAKuF,iBAAiBa,EAAU,GAElC,CAOO,gBAAAE,GAUN,GATAjF,MAAMiF,mBAEFtG,KAAKa,IAAI,eACZb,KAAKyC,WAAWuC,IAAI,WAAW,GAG/BhF,KAAKyC,WAAWuC,IAAI,WAAW,GAG5BhF,KAAKuG,QAAQ,UAAYvG,KAAKuG,QAAQ,OAAQ,CACjD,MAAM9B,EAAQzE,KAAKyE,MACfA,GACHA,EAAM+B,gBAGP,IAAIjD,EAAQvD,KAAKa,IAAI,QAAS,GAC1B2C,EAAMxD,KAAKa,IAAI,MAAO,GAEtBkD,EAAe/D,KAAKa,IAAI,eAAgB,IAAOmD,KAAKC,IAAI,EAAIT,EAAMD,GAEtE,GAAIA,GAASQ,EAAc,CAC1B,IAAI0C,EAAQlD,EAAQQ,EACpBR,GAASQ,EACT/D,KAAKoF,OAAO,QAAS7B,GACjBvD,KAAKuG,QAAQ,QAChBvG,KAAKoF,OAAO,MAAO5B,EAAMiD,E,CAG3B,GAAIjD,EAAM,EAAIO,EAAc,CAC3B,IAAI0C,EAAQjD,EAAM,EAAIO,EACtBP,EAAM,EAAIO,EACV/D,KAAKoF,OAAO,MAAO5B,GAEfxD,KAAKuG,QAAQ,UAChBvG,KAAKoF,OAAO,QAAS7B,EAAQkD,E,EAMhC,MAAMnE,EAAWtC,KAAKa,IAAI,YAO1B,GANAyB,EAASc,OAASpD,KAAKa,IAAI,SAC3ByB,EAASe,KAAOrD,KAAKa,IAAI,OACzByB,EAASoE,UAAYpE,EAASzB,IAAI,YAAY,GAC9CyB,EAASqE,YAAcrE,EAASsE,cAAgBtE,EAASe,KAAOf,EAASc,QACzEd,EAASuE,YAEL7G,KAAKuG,QAAQ,WAAY,CAC5B,MAAMO,EAAU9G,KAAKa,IAAI,WACzB,GAAIiG,EAAS,CACZ,MAAMC,EAAezE,EAASzB,IAAI,aAClCiG,EAAQE,OAAO,QACfF,EAAQE,OAAOhH,KAAKiH,UAAUC,eAC9BJ,EAAQK,eAEJJ,IACHD,EAAQ9B,IAAI,YAAa,YAAiB8B,EAAQjG,IAAI,aAAckG,IACpED,EAAQM,MAAMD,e,EAIlB,CAEO,oBAAAE,GACN,MAAMP,EAAU9G,KAAKa,IAAI,WACrBiG,GACH9G,KAAKa,IAAI,YAAYyG,oBAAoBR,EAE3C,CAEO,aAAAS,GACNlG,MAAMkG,gBACNvH,KAAKqH,sBACN,CAKO,YAAAG,CAAa/C,GACnBzE,KAAKyE,MAAQA,EACIzE,KAAKa,IAAI,YAEjB4D,MAAQA,EACjBA,EAAM1D,cAAcd,SAASC,KAAKF,KAAKe,eACvC0D,EAAMxD,iBAAiBhB,SAASC,KAAKF,KAAKiB,kBAE1CwD,EAAMgD,qBAAqBxH,SAASC,KAAKF,KAAKoB,YAE9CpB,KAAK0H,GAAG,SAAS,KAChBjD,EAAMC,qBAAqB1E,KAAK,IAEjCA,KAAK0H,GAAG,OAAO,KACdjD,EAAMC,qBAAqB1E,KAAK,IAGjCyE,EAAMkD,cAAcC,UAAU,SAAS,KACtC5H,KAAK6H,eAAe,IAErBpD,EAAMkD,cAAcC,UAAU,UAAU,KACvC5H,KAAK6H,eAAe,IAGrBpD,EAAMjC,YAAYxC,KACnB,CAKO,YAAA8H,CAAa/F,GAEnB,OADA/B,KAAK+H,kBAAkBhG,GAAU,GAC1BV,MAAMyG,aAAa/F,EAC3B,CAKO,YAAAiG,CAAajG,GAEnB,OADA/B,KAAK+H,kBAAkBhG,GAAU,GAC1BV,MAAM2G,aAAajG,EAC3B,CAEO,iBAAAgG,CAAkBhG,EAAmCkG,GAC3D,MAAMC,EAAK,cACLd,EAAQrF,EAASlB,IAAI,SACvBuG,GACHA,EAAMpC,IAAIkD,EAAID,GAEf,MAAMvC,EAAO3D,EAASlB,IAAI,QACtB6E,GACHA,EAAKV,IAAIkD,EAAID,GAEd,MAAME,EAAOpG,EAASlB,IAAI,QACtBsH,GACHA,EAAKnD,IAAIkD,EAAID,GAEd,MAAMG,EAAWrG,EAASlB,IAAI,YAC1BuH,GACHA,EAASpD,IAAIkD,EAAID,GAGlB,MAAMI,EAAStG,EAASlB,IAAI,UAC5B,GAAIwH,EAAQ,CACX,MAAMC,EAASD,EAAOxH,IAAI,UACtByH,GACHA,EAAOtD,IAAIkD,EAAID,E,CAGlB,CAGO,eAAAM,CAAgBxG,EAAmCyG,GACzD,MAAMpB,EAAQrF,EAASlB,IAAI,SACrB4H,EAAI,UACNrB,GACHA,EAAM7F,WAAWkH,EAAGD,GAErB,MAAM9C,EAAO3D,EAASlB,IAAI,QACtB6E,GACHA,EAAKnE,WAAWkH,EAAGD,GAEpB,MAAML,EAAOpG,EAASlB,IAAI,QACtBsH,GACHA,EAAK5G,WAAWkH,EAAGD,GAEpB,MAAMJ,EAAWrG,EAASlB,IAAI,YAC1BuH,GACHA,EAAS7G,WAAWkH,EAAGD,GAGxB,MAAMH,EAAStG,EAASlB,IAAI,UAC5B,GAAIwH,EAAQ,CACX,MAAMC,EAASD,EAAOxH,IAAI,UACtByH,GACHA,EAAO/G,WAAWkH,EAAGD,E,CAGxB,CAOO,aAAAnD,CAActD,EAA+C2G,EAAqBC,G,UACxF,MAAMrG,EAAWtC,KAAKa,IAAI,YAC1B,IAAI+H,EAAI,QAER,MAAMxB,EAAQrF,EAASlB,IAAI,SAC3B,GAAKuG,EAGA,CACJ,IAAI3G,EAAY2G,EAAMvG,IAAI,aACtBgI,GAAS,EACTF,GAC2B,IAA1BlI,aAAS,EAATA,EAAWqI,QAAQF,MACtBC,GAAS,IAIoB,IAA1BpI,aAAS,EAATA,EAAWqI,QAAQF,MACtBC,GAAS,GAIPA,IACS,QAAZ,EAAAzB,EAAM2B,cAAM,SAAE9I,SAAS+I,YAAY5B,GACnC9E,EAASI,UAAUX,EAAU2G,GAC7BtB,EAAMpG,UACNsB,EAAS2G,OAAOD,YAAY5B,G,MApB7B9E,EAASI,UAAUX,EAAU2G,GAwB9B,MAAMhD,EAAO3D,EAASlB,IAAI,QAE1B,GAAK6E,EAGA,CACJ,IAAIjF,EAAYiF,EAAK7E,IAAI,aACrBgI,GAAS,EACTF,GAC2B,IAA1BlI,aAAS,EAATA,EAAWqI,QAAQF,MACtBC,GAAS,IAIoB,IAA1BpI,aAAS,EAATA,EAAWqI,QAAQF,MACtBC,GAAS,GAIPA,IACQ,QAAX,EAAAnD,EAAKqD,cAAM,SAAE9I,SAAS+I,YAAYtD,GAClCpD,EAAS4G,SAASnH,EAAU2G,GAC5BhD,EAAK1E,UACLsB,EAASoD,KAAKsD,YAAYtD,G,MApB3BpD,EAAS4G,SAASnH,EAAU2G,GAwB7B,MAAMP,EAAOpG,EAASlB,IAAI,QAC1B,GAAKsH,EAGA,CACJ,IAAIU,GAAS,EACTpI,EAAY0H,EAAKtH,IAAI,aACrB8H,GAC2B,IAA1BlI,aAAS,EAATA,EAAWqI,QAAQF,MACtBC,GAAS,IAIoB,IAA1BpI,aAAS,EAATA,EAAWqI,QAAQF,MACtBC,GAAS,GAGPA,IACQ,QAAX,EAAAV,EAAKY,cAAM,SAAE9I,SAAS+I,YAAYb,GAClC7F,EAAS6G,SAASpH,EAAU2G,GAC5BP,EAAKnH,UACLsB,EAAS8G,MAAMJ,YAAYb,G,MAnB5B7F,EAAS6G,SAASpH,EAAU2G,GAuBxBC,GAAU5G,EAASlB,IAAI,aAC3ByB,EAAS+G,aAAatH,EAAU2G,GAGjC1I,KAAKsJ,eAAevH,EACrB,CAEU,cAAAuH,CAAevH,GACxB,IAAIsG,EAAStG,EAASlB,IAAI,UACtB0I,EAAavJ,KAAKa,IAAI,UAM1B,GAJKwH,IAAUkB,GAAexH,EAASlB,IAAI,aAC1CwH,EAASkB,EAAWvJ,KAAKI,MAAOJ,KAAM+B,IAGnCsG,EAAQ,CACXA,EAAO9F,KAAOvC,KACd,MAAMsI,EAASD,EAAOxH,IAAI,UAEtByH,IACHA,EAAOkB,aAAazH,GACpBA,EAASqD,OAAO,SAAUiD,GACrBC,EAAOS,QACX/I,KAAKkB,iBAAiBjB,SAASC,KAAKoI,G,CAIxC,CAEO,aAAAmB,GACNpI,MAAMoI,gBAEN,MAAMhF,EAAQzE,KAAKyE,MACfA,IACHA,EAAMiF,qBACNjF,EAAMgD,qBAAqBI,iBAG5B7H,KAAKa,IAAI,YAAY8I,mBAErB3J,KAAK4J,cAAe,CACrB,CAKO,eAAA1H,CAAgBH,GACtBV,MAAMa,gBAAgBH,GACtB,MAAMO,EAAWtC,KAAKa,IAAI,YACpBuG,EAAQrF,EAASlB,IAAI,SACvBuG,IACH9E,EAAS2G,OAAOD,YAAY5B,GAC5BA,EAAMpG,WAEP,MAAMmH,EAAOpG,EAASlB,IAAI,QACtBsH,IACH7F,EAAS8G,MAAMJ,YAAYb,GAC3BA,EAAKnH,WAEN,MAAM0E,EAAO3D,EAASlB,IAAI,QACtB6E,IACHpD,EAASoD,KAAKsD,YAAYtD,GAC1BA,EAAK1E,WAEN,MAAMoH,EAAWrG,EAASlB,IAAI,YAC1BuH,IACH9F,EAASuH,UAAUb,YAAYZ,GAC/BA,EAASpH,WAEV,MAAMqH,EAAStG,EAASlB,IAAI,UAExBwH,GACHA,EAAOrH,SAET,CAEU,YAAA8I,GACT9J,KAAKuB,WAAW,YAAavB,KAAK+J,uBAAyB/J,KAAKa,IAAI,YAAY+F,cAChF,MAAMnE,EAAazC,KAAKyC,WACxB,IAAKA,EAAWuH,WAAY,CAC3B,MAAMC,EAASxH,EAAWyH,cACpBC,EAASnG,KAAKoG,KAAKH,EAAOI,MAAQJ,EAAOK,MAC/C,IAAIC,EAAO9H,EAAW5B,IAAI,QAC1B,OAAYb,KAAKwK,WAAYzI,IAC5B,MAAMqF,EAAQrF,EAASlB,IAAI,SAC3B,GAAIuG,IAAUA,EAAM4C,WAAY,CAC/B,MAAMC,EAAS7C,EAAM8C,cACXlG,KAAKoG,KAAKH,EAAOI,MAAQJ,EAAOK,MAElCH,IACPI,EAAOnD,EAAMmD,KAAKE,W,KAIrBhI,EAAWuC,IAAI,OAAQuF,E,CAExB,IAAIhH,EAAQvD,KAAKa,IAAI,QAAS,GAC1B2C,EAAMxD,KAAKa,IAAI,MAAO,GAC1Bb,KAAKa,IAAI,YAAY6J,YAAYjI,EAAYc,EAAwB,IAAfC,EAAMD,GAC7D,CAEO,qBAAAoH,CAAsBnK,EAAkBoK,GAE9CpK,EADiBR,KAAKa,IAAI,YACNgK,eAAerK,GAEnCR,KAAK8K,gBAAkBtK,EACvBR,KAAK+K,cAAgBH,EAErB5K,KAAKgL,eACN,CAMO,aAAAA,GACN,MAAMJ,EAAe5K,KAAK+K,cAC1B,IAAIvK,EAAWR,KAAK8K,gBACpB,MAAMhE,EAAU9G,KAAKa,IAAI,WACnByB,EAAWtC,KAAKa,IAAI,YAEtB,WAAeL,KAElB,OAAYR,KAAKkF,QAASA,IACzB,GAAIA,EAAOrE,IAAI,cAAgBb,KAAM,CACpC,MAAM+B,EAAW/B,KAAKiL,cAAc/F,EAAQ1E,EAAWR,KAAKa,IAAI,oBAE5D+J,IAAiD,GAAjCA,EAAa9B,QAAQ5D,IACxCA,EAAOgG,mBAAmBnJ,GAC1BmD,EAAOiG,kBAAkBpJ,GACzBmD,EAAOkG,UAAUC,gBAAkBtJ,IAGnCmD,EAAOoG,oBAAoBvJ,GAC3BmD,EAAOE,OAAO,kBAAmBrD,G,KAKhC/B,KAAKa,IAAI,iBACZL,EAAWR,KAAKuL,kBAAkB/K,EAAUR,KAAKa,IAAI,kBAAmB,MAGzEb,KAAKwL,cAAc,kBAAmBhL,GAElCsG,IACHxE,EAASgF,oBAAoBR,GAExB,QAAYtG,GAYhBsG,EAAQ2E,KAAK,IAXbzL,KAAK0L,mBAAmB5E,EAAStG,GACjC8B,EAASqJ,gBAAgB7E,EAAStG,GAE9BA,EAAWR,KAAKa,IAAI,QAAS,IAAML,EAAWR,KAAKa,IAAI,MAAO,GACjEiG,EAAQ2E,KAAK,GAGb3E,EAAQ8E,KAAK,KAQlB,CAEU,kBAAAF,CAAmB5E,EAAkBtG,GAC9CsG,EAAQM,MAAMpC,IAAI,OAAQhF,KAAK6L,eAAerL,GAC/C,CAcO,iBAAA+K,CAAkB/K,EAAkBsL,GAC1C,OAAOtL,CACR,CAEO,oBAAAuL,GACP,CAKO,gBAAAC,GACN,IAAIlF,EAAU9G,KAAKa,IAAI,WACnBiG,GACHA,EAAQ8E,MAEV,CAKO,gBAAAK,GACN,IAAInF,EAAU9G,KAAKa,IAAI,WACnBiG,GACHA,EAAQ2E,MAEV,CAKO,qBAAAS,CAAsBtG,EAAwCuG,GAErE,CAEO,WAAAC,GACN/K,MAAM+K,cACNpM,KAAKqM,YAAa,EAClBrM,KAAKsF,cAAe,CACrB,CAQO,oBAAAgH,CAAqBC,GAC3B,MAAMjK,EAAWtC,KAAKa,IAAI,YAC1B,OAAOyB,EAASuI,eAAe0B,EAAajK,EAASsE,aACtD,CASO,cAAAiE,CAAerK,GACrB,OAAOR,KAAKa,IAAI,YAAYgK,eAAerK,EAC5C,CAUO,gBAAAgM,CAAiBhM,GACvB,OAAOR,KAAKa,IAAI,YAAY2L,iBAAiBhM,EAC9C,CAOO,WAAAiM,CAAYjM,GAClB,OAAOR,KAAKa,IAAI,YAAY4L,YAAYjM,EACzC,CAcO,SAAAkM,CAAU9G,EAAwC+G,EAAwCC,EAAuBC,GACvH,OAAO,CACR,CASO,eAAAC,CAAgBC,GACtB,OAAO/M,KAAKyB,WAAWvB,KAAK6M,EAC7B,CAKO,gBAAAC,CAAiB7H,GAAqB,CAOtC,oBAAA4E,GACN,MAAO,GACR,EA59BA,qC,gDAAkC,SAClC,sC,gDAA0C,IAAUkD,WAAWC,OAAO,CAACnN,EAAKkH,a,8EChOtE,MAAMkG,UAAmB,KAAhC,c,oBAKC,mC,wDAwCD,CAhCQ,cAAAC,GACN/L,MAAM+L,iBAEN,MAAM9E,EAAStI,KAAKa,IAAI,UASxB,GAPIb,KAAKuG,QAAQ,WACZ+B,IACHA,EAAOxF,OAAO,CAAEtC,SAAU,WAAY6M,KAAM,WAC5CrN,KAAKwB,WAAWtB,KAAKoI,IAInBtI,KAAKuG,QAAQ,YAAa,CAC7B,MAAMxE,EAAWuG,EAAOvG,SACpB/B,KAAKuC,MAAQ+F,GAAUvG,GAC1B/B,KAAKuC,KAAKgD,iBAAiBxD,E,CAG9B,CAEU,QAAAjB,GACT,MAAMyB,EAAOvC,KAAKuC,KACdA,GACH,OAAaA,EAAK2D,UAAU,CAACnB,EAAKsD,KAC7BA,EAAOiF,KAAOtN,KAAKsN,YACf/K,EAAK2D,SAASnB,E,IAKxB1D,MAAMP,UACP,EAlCA,qC,gDAAkC,eAClC,sC,gDAA0C,KAAOmM,WAAWC,OAAO,CAACC,EAAWlG,a,6GCPzE,MAAMsG,UAAsB,IAAnC,c,oBAUC,oC,gDAA0B,IAAUpN,IAAIH,KAAKI,MAAO,CAAEC,MAAO,KAAME,YAAY,EAAOE,UAAW,CAAC,OAAQ,IAAK,YAidhH,CA/cQ,SAAAa,GACNtB,KAAKoL,UAAU3K,UAAY,YAAiBT,KAAKoL,UAAU3K,UAAW,CAAC,WAAY,MAEnFY,MAAMC,YACNtB,KAAKwL,cAAc,SAAU,KAE7B,MAAMgC,EAAexN,KAAK0F,KAAK+H,SAC/BD,EAAaxI,IAAI,SAAU,MAC3BwI,EAAaxI,IAAI,QAAS,GAC1BwI,EAAaxI,IAAI,QAAQ,CAAC0I,EAASC,KAClCD,EAAQE,OAAO,EAAG,GAClBF,EAAQG,OAAO,EAAGF,EAASrN,SAAS,IAGrCN,KAAKgF,IAAI,QAAQ,CAAC0I,EAASC,KAC1BD,EAAQE,OAAO,EAAG,GAClBF,EAAQG,OAAOF,EAAStN,QAAS,EAAE,GAErC,CAEO,QAAAyN,GACNzM,MAAMyM,WAEN,MAAMvL,EAAOvC,KAAKuC,KAClBA,EAAKE,WAAWlB,WAAW,WAAYvB,KAAKa,IAAI,WAChD0B,EAAKE,WAAWuC,IAAI,KAAM,KAE1B,MAAM+I,EAAW,WACXC,EAAS,SAEf,GAAIhO,KAAKuG,QAAQwH,IAAa/N,KAAKuG,QAAQyH,GAAS,CACnD,MAAMvJ,EAAQzE,KAAKyE,MACbwJ,EAAe1L,EAAKtC,SAS1B,GAPID,KAAKa,IAAImN,GACZzL,EAAKyE,OAAOgH,GAGZzL,EAAK2L,UAAUF,GAGZvJ,EAAO,CACV,GAAIzE,KAAKa,IAAIkN,GAAW,CACvB,MAAM9N,EAAWwE,EAAM0J,iBAAiBlO,UACT,GAA3BA,EAAS6I,QAAQvG,IACpBtC,EAASmO,YAAY,EAAG7L,GAEzBA,EAAKyE,OAAO+G,GACZE,EAAatI,UAAU3F,K,KAGnB,CACJ,MAAMC,EAAWwE,EAAM4J,oBAAoBpO,UACZ,GAA3BA,EAAS6I,QAAQvG,IACpBtC,EAAS0F,UAAUpD,GAEpBA,EAAK2L,UAAUH,GAEfE,EAAatI,UAAU3F,KAAM,E,CAI9BuC,EAAKE,WAAW0E,eAChBnH,KAAKiJ,OAAO9C,MAAMiB,IACjBA,EAAMD,cAAc,IAErBnH,KAAKsO,KAAKC,kB,CAEXhM,EAAKsF,e,CAGN7H,KAAKwO,MAAMjN,WAAW,SAAUgB,EAAKpB,gBAAgBb,SACtD,CAGU,OAAAmO,CAAQC,EAAgBC,GACjC,OAAQA,EAAOC,EAAIF,EAAOE,GAAK5O,KAAKK,OACrC,CAKO,cAAAwK,CAAerK,GACrB,MAAM+C,EAAQvD,KAAKoD,QAAU,EACvBI,EAAMxD,KAAKqD,MAAQ,EAYzB,OARA7C,GAFAA,GAAYR,KAAK6O,MAEMrL,EAAMD,GAASvD,KAAK8O,IACtC9O,KAAKa,IAAI,YAIF2C,EAAMhD,EAHN+C,EAAQ/C,CAOrB,CAKO,gBAAAgM,CAAiBhM,GACvB,MAAM+C,EAAQvD,KAAKoD,QAAU,EACvBI,EAAMxD,KAAKqD,MAAQ,EAazB,OAXKrD,KAAKa,IAAI,YAIbL,EAAWgD,EAAMhD,EAHjBA,GAAsB+C,GAMvB/C,EAAWA,GAAYgD,EAAMD,GAASvD,KAAK8O,KAE/B9O,KAAK6O,GAGlB,CAKO,SAAAhI,GACN,MAAMtE,EAAOvC,KAAKuC,KACZwG,EAASxG,EAAKwG,OACpB,GAAIA,EAAQ,CACX,MAAMgG,EAAIhG,EAAOiG,aACjBhP,KAAK8O,IAAM9O,KAAK4G,aAAemI,EAC/B/O,KAAK6O,KAAOtM,EAAKqM,IAAM7F,EAAOlI,IAAI,cAAe,IAAMkO,C,CAEzD,CAKO,gBAAApF,GACN,MAAMpH,EAAOvC,KAAKuC,KACZqM,EAAIrM,EAAKqM,IAAM,kBAAuBrM,EAAK1B,IAAI,UAAW,GAAI0B,EAAKlC,SAAWkC,EAAKwG,OAAQlI,IAAI,cAAe,GACpH0B,EAAKxB,cAAciE,IAAI,IAAK4J,GAC5BrM,EAAKtB,iBAAiB+D,IAAI,IAAK4J,GAC/BrM,EAAKrB,iBAAiB8D,IAAI,IAAKhF,KAAKiP,KAEpC,MAAMxK,EAAQlC,EAAKkC,MACnB,GAAIA,EAAO,CACV,MAAMkD,EAAgBlD,EAAMkD,cACtBvG,EAAamB,EAAKnB,WACxB,IAAIf,EAAQkC,EAAK1B,IAAI,aAAc,GAE/B+N,EAAIrM,EAAKqM,IAAMvO,EAEnB,MAAM0I,EAASxG,EAAKwG,OAChBA,IACH6F,GAAK7F,EAAOlI,IAAI,cAAe,IAG5BO,EAAWnB,SAASiP,OAAS,GAChC7O,EAAQkC,EAAKnB,WAAWf,QACxBkC,EAAKyC,IAAI,aAAc3E,EAAQ,IAG/Be,EAAW4D,IAAI,QAAS3E,GAEzBe,EAAW0B,OAAO,CAAE8L,EAAGA,EAAGK,GAAI,EAAG3O,OAAQqH,EAAcrH,SAAW,G,CAEpE,CAKO,WAAAkC,GACNnB,MAAMmB,cACN,MAAMD,EAAOvC,KAAKuC,KACO,MAArBA,EAAK1B,IAAI,UACZ0B,EAAKyC,IAAI,QAAS,MAEnB,MAAMmK,EAAiBnP,KAAKI,MAAM+O,eAClC5M,EAAKyC,IAAI,SAAUmK,GACnB5M,EAAKpB,gBAAgB6D,IAAI,QAAS,MAClCzC,EAAKnB,WAAW0B,OAAO,CAAEsM,OAAQD,GAClC,CAKO,UAAAvI,GACN,OAAO5G,KAAKuC,KAAKlC,OAClB,CAQO,eAAAgP,CAAgB7O,GACtB,MAAO,CAAEoO,EAAG5O,KAAKsP,qBAAqB9O,GAAWyO,EAAG,EACrD,CAKO,UAAAM,CAAWpH,EAAiB3H,EAAmBgP,EAAsBC,GAC3E,GAAItH,EAAM,CACJ,WAAe3H,KACnBA,EAAW,GAGZ,IAAIkP,EAAW,GAEdA,EADG,WAAeD,IAAUA,EAAQ,EACzBtH,EAAKtH,IAAI,gBAAiB6O,GAG1BvH,EAAKtH,IAAI,WAAY6O,GAG7B,WAAeF,IAAgBA,GAAehP,IACjDA,IAAuBgP,EAAchP,GAAYkP,GAGlDvH,EAAKnD,IAAI,IAAKhF,KAAKsP,qBAAqB9O,IAExC,IAAI0O,EAAS/G,EAAKtH,IAAI,SAAU,GAChC,MAAMmN,EAAS7F,EAAKtH,IAAI,SAAUb,KAAKa,IAAI,UAAU,IAEjDb,KAAKa,IAAI,aACZsH,EAAKnD,IAAI,IAAK,MACTgJ,IACJkB,IAAW,KAIZ/G,EAAKnD,IAAI,IAAK,GACVgJ,IACHkB,IAAW,IAGb/G,EAAKnD,IAAI,QAAS0I,IACjBA,EAAQE,OAAO,EAAG,GAClBF,EAAQG,OAAO,EAAGqB,EAAO,IAG1BlP,KAAK2P,iBAAiBxH,EAAM3H,EAAU2H,EAAKtH,IAAI,cAAe,GAAIsH,EAAKtH,IAAI,cAAe,G,CAE5F,CAKO,WAAA6J,CAAYtD,EAAmB5G,EAAmBgP,EAAsBC,GAC9E,GAAIrI,EAAO,CACV,IAAIsI,EAAW,GAEdA,EADG,WAAeD,IAAUA,EAAQ,EACzBrI,EAAMvG,IAAI,gBAAiB6O,GAG3BtI,EAAMvG,IAAI,WAAY6O,GAG7B,WAAelP,KACnBA,EAAW,GAGZ,MAAMwN,EAAS5G,EAAMvG,IAAI,SAAUb,KAAKa,IAAI,UAAU,IAErCb,KAAKa,IAAI,YAEpBmN,GAKJ5G,EAAMpC,IAAI,WAAY,YACtBoC,EAAMpC,IAAI,IAAK,KALfoC,EAAMpC,IAAI,WAAY,YACtBoC,EAAMpC,IAAI,IAAK,OAQXgJ,GAKJ5G,EAAMpC,IAAI,IAAK,GACfoC,EAAMpC,IAAI,WAAY,cALtBoC,EAAMpC,IAAI,SAAKrC,GACfyE,EAAMpC,IAAI,WAAY,aAQpB,WAAewK,IAAgBA,GAAehP,IACjDA,IAAuBgP,EAAchP,GAAYkP,GAGlDtI,EAAMpC,IAAI,IAAKhF,KAAKsP,qBAAqB9O,IACzCR,KAAK2P,iBAAiBvI,EAAO5G,EAAU4G,EAAMvG,IAAI,cAAe,GAAIuG,EAAMvG,IAAI,cAAe,G,CAE/F,CAKO,UAAA+O,CAAWlK,EAAalF,EAAmBgP,GACjD,GAAI9J,EAAM,CACJ,WAAelF,KACnBA,EAAW,GAGZ,IAAIkP,EAAWhK,EAAK7E,IAAI,WAAY,IAChC,WAAe2O,IAAgBA,GAAehP,IACjDA,IAAuBgP,EAAchP,GAAYkP,GAGlDhK,EAAKV,IAAI,IAAKhF,KAAKsP,qBAAqB9O,IAExCR,KAAK2P,iBAAiBjK,EAAMlF,EAAU,EAAG,E,CAE3C,CAKO,YAAAqP,CAAaxH,EAAqB7H,EAAmBgP,GAC3D,GAAInH,EAAQ,CAEX,MAAMC,EAASD,EAAOxH,IAAI,UAC1B,GAAIyH,EAAQ,CACN,WAAe9H,KACnBA,EAAW,GAGZ,IAAIkP,EAAWrH,EAAOxH,IAAI,WAAY,IAElC,WAAe2O,IAAgBA,GAAehP,IACjDA,IAAuBgP,EAAchP,GAAYkP,GAGlD,IAAII,EAAiB9P,KAAKuC,KAAKgJ,kBAAkB/K,EAAUkP,GACvDK,EAAiB/P,KAAKuC,KAAK2D,SAAS4J,GACpCE,GAAK,EAKT,GAJIhQ,KAAKa,IAAI,cACZmP,EAAI,GAGD3H,EAAOxH,IAAI,WACd,GAAIkP,EAAgB,CACnB,IAAIE,EAAiBF,EAAelP,IAAI,UACpCoP,GACH3H,EAAOtD,IAAI,IAAKiL,EAAehB,IAAMgB,EAAe3P,SAAW0P,E,MAIhE1H,EAAOtD,IAAI,IAAK,GAIlBhF,KAAKuC,KAAK2D,SAAS4J,GAAkBzH,EACrCC,EAAOtD,IAAI,IAAKhF,KAAKsP,qBAAqB9O,IAC1CR,KAAK2P,iBAAiBrH,EAAQ9H,EAAU,EAAG,E,EAG9C,CAKO,UAAA0P,CAAWvP,EAAiBH,EAAmBgP,GACrD,GAAI7O,EAAM,CACJ,WAAeH,KACnBA,EAAW,GAEP,WAAegP,KACnBA,EAAc,GAGf,IAAIW,EAAKnQ,KAAKsP,qBAAqB9O,GAC/B4P,EAAKpQ,KAAKsP,qBAAqBE,GAEnCxP,KAAKqQ,eAAe1P,EAAMwP,EAAIC,E,CAEhC,CAEU,cAAAC,CAAe1P,EAAgBwP,EAAYC,GACpDzP,EAAKqE,IAAI,QAAS0I,IAGjB,MAAM4C,EAAItQ,KAAKuC,KAAMxB,cAAcT,SAC7ByO,EAAI/O,KAAKK,QAEX+P,EAAKD,KACPC,EAAID,GAAM,CAACA,EAAIC,IAEbD,EAAKpB,GAAKqB,EAAK,IAWnB1C,EAAQE,OAAOuC,EAAI,GACnBzC,EAAQG,OAAOuC,EAAI,GACnB1C,EAAQG,OAAOuC,EAAIE,GACnB5C,EAAQG,OAAOsC,EAAIG,GACnB5C,EAAQG,OAAOsC,EAAI,GAAE,GAEvB,CAKO,eAAAxE,CAAgB7E,EAAkBtG,GACxCR,KAAKuQ,iBAAiBzJ,EAAS,CAAE8H,EAAG5O,KAAKsP,qBAAqB9O,GAAWyO,EAAG,GAC7E,CAKO,mBAAA3H,CAAoBR,GAC1B,MAAMkH,EAAShO,KAAKa,IAAI,UAClB2P,EAAM,IAEZ,IAAIC,EAASzQ,KAAK0Q,SAASC,SAAS,CAAE/B,EAAG,EAAGK,EAAG,IAC3CL,EAAI6B,EAAO7B,EACXK,EAAI,EACJF,EAAI/O,KAAK4G,aACT0J,EAAIE,EAEJI,EAAoC,KAEpC5Q,KAAKa,IAAI,YACRmN,GACH4C,EAAqB,KACrB3B,EAAIwB,EAAOxB,EACXqB,EAAIE,IAGJI,EAAqB,OACrB3B,EAAIwB,EAAOxB,EAAIuB,EACfF,EAAIE,GAIDxC,GACH4C,EAAqB,OACrB3B,EAAIwB,EAAOxB,EAAIuB,EACfF,EAAIE,IAGJI,EAAqB,KACrB3B,EAAIwB,EAAOxB,EACXqB,EAAIE,GAIN,MAAMvG,EAAS,CAAEK,KAAMsE,EAAGvE,MAAOuE,EAAIG,EAAG8B,IAAK5B,EAAG6B,OAAQ7B,EAAIqB,GACtDS,EAAYjK,EAAQjG,IAAI,UAEzB,aAAkBoJ,EAAQ8G,KAC9BjK,EAAQ9B,IAAI,SAAUiF,GACtBnD,EAAQ9B,IAAI,qBAAsB4L,GAEpC,EAxdA,qC,gDAAkC,kBAClC,sC,gDAA0C,IAAa3D,WAAWC,OAAO,CAACK,EAActG,a,6GCLlF,MAAM+J,UAAsB,IAAnC,c,oBAUC,qC,yDAEA,oC,gDAA0B,IAAU7Q,IAAIH,KAAKI,MAAO,CAAEE,OAAQ,KAAMC,YAAY,EAAOE,UAAW,CAAC,OAAQ,IAAK,YA8ejH,CA5eQ,SAAAa,GACNtB,KAAKoL,UAAU3K,UAAY,YAAiBT,KAAKoL,UAAU3K,UAAW,CAAC,WAAY,MAC/ET,KAAKoL,UAAU2C,UAClB/N,KAAKoL,UAAU3K,UAAUP,KAAK,YAG/BmB,MAAMC,YACNtB,KAAKwL,cAAc,SAAU,KAE7B,MAAMgC,EAAexN,KAAK0F,KAAK+H,SAC/BD,EAAaxI,IAAI,QAAS,MAC1BwI,EAAaxI,IAAI,SAAU,GAC3BwI,EAAaxI,IAAI,QAAQ,CAAC0I,EAASC,KAClCD,EAAQE,OAAO,EAAG,GAClBF,EAAQG,OAAOF,EAAStN,QAAS,EAAE,IAGpCL,KAAKgF,IAAI,QAAQ,CAAC0I,EAASpL,KAC1BoL,EAAQE,OAAO,EAAG,GAClBF,EAAQG,OAAO,EAAGvL,EAAShC,SAAS,GAEtC,CAEU,OAAAmO,CAAQC,EAAgBC,GACjC,OAAQD,EAAOO,EAAIN,EAAOM,GAAKjP,KAAKM,QACrC,CAEO,QAAAwN,GACNzM,MAAMyM,WAEN,MAAMvL,EAAOvC,KAAKuC,KAClBA,EAAKE,WAAWlB,WAAW,WAAYvB,KAAKa,IAAI,WAChD0B,EAAKE,WAAWuC,IAAI,KAAM,KAE1B,MAAMwJ,EAAQxO,KAAKwO,MACbT,EAAW,WACXC,EAAS,SACTvJ,EAAQzE,KAAKyE,MAEnB,GAAIzE,KAAKuG,QAAQwH,IAAa/N,KAAKuG,QAAQyH,GAAS,CAEnD,MAAMC,EAAe1L,EAAKtC,SAS1B,GAPID,KAAKa,IAAImN,GACZzL,EAAKyE,OAAOgH,GAGZzL,EAAK2L,UAAUF,GAGZvJ,EAAO,CACV,GAAIzE,KAAKa,IAAIkN,GAAW,CACvB,MAAM9N,EAAWwE,EAAMwM,mBAAmBhR,UACX,GAA3BA,EAAS6I,QAAQvG,IACpBtC,EAAS0F,UAAUpD,EAAM,GAE1BA,EAAKyE,OAAO+G,GACZE,EAAatI,UAAU3F,KAAM,E,KAEzB,CACJ,MAAMC,EAAWwE,EAAMyM,kBAAkBjR,UACV,GAA3BA,EAAS6I,QAAQvG,IACpBtC,EAAS0F,UAAUpD,GAEpBA,EAAK2L,UAAUH,GAEfE,EAAatI,UAAU3F,K,CAGxBuC,EAAKE,WAAW0E,eAChBnH,KAAKiJ,OAAO9C,MAAMiB,IACjBA,EAAMD,cAAc,IAErBnH,KAAKsO,KAAKC,kB,CAEXhM,EAAKsF,e,CAGN,MAAMkH,EAAIxM,EAAKpB,gBAAgBd,QAE3BoE,IACCzE,KAAKa,IAAIkN,GACZS,EAAMxJ,IAAI,UAAW,GAGrBwJ,EAAMxJ,IAAI,UAAW+J,IAIvBP,EAAMjN,WAAW,QAASwN,EAC3B,CAKO,WAAAvM,GACNnB,MAAMmB,cACN,MAAMD,EAAOvC,KAAKuC,KACQ,MAAtBA,EAAK1B,IAAI,WACZ0B,EAAKyC,IAAI,SAAU,MAEpB,MAAMmM,EAAmBnR,KAAKI,MAAM+Q,iBACpC5O,EAAKyC,IAAI,SAAUmM,GACnB5O,EAAKpB,gBAAgB6D,IAAI,SAAU,MACnCzC,EAAKnB,WAAW4D,IAAI,SAAUmM,EAC/B,CAEO,gBAAAxH,GACN,MAAMpH,EAAOvC,KAAKuC,KACZ0M,EAAI1M,EAAK0M,IAAM,kBAAuB1M,EAAK1B,IAAI,UAAW,GAAI0B,EAAKjC,UACzEiC,EAAKxB,cAAciE,IAAI,IAAKiK,GAC5B1M,EAAKtB,iBAAiB+D,IAAI,IAAKiK,GAC/B1M,EAAKrB,iBAAiB8D,IAAI,IAAKhF,KAAK4O,KAEpC,MAAMnK,EAAQlC,EAAKkC,MACnB,GAAIA,EAAO,CACV,MAAMkD,EAAgBlD,EAAMkD,cACtBvG,EAAamB,EAAKnB,WACxB,IAAId,EAASiC,EAAK1B,IAAI,YAAa,GAE/BO,EAAWnB,SAASiP,OAAS,GAChC5O,EAASiC,EAAKnB,WAAWd,SACzBiC,EAAKyC,IAAI,YAAa1E,EAAS,IAG/Bc,EAAW4D,IAAI,SAAU1E,GAE1Bc,EAAW0B,OAAO,CAAEmM,EAAG1M,EAAK0M,IAAM3O,EAAQsO,GAAI,EAAGvO,MAAOsH,EAActH,QAAU,G,CAElF,CAKO,UAAAuG,GACN,OAAO5G,KAAKuC,KAAK6O,aAClB,CAQO,eAAA/B,CAAgB7O,GACtB,MAAO,CAAEoO,EAAG,EAAGK,EAAGjP,KAAKsP,qBAAqB9O,GAC7C,CAKO,WAAAkK,CAAYtD,EAAmB5G,EAAmBgP,EAAsBC,GAC9E,GAAIrI,EAAO,CACL,WAAe5G,KACnBA,EAAW,GAGZ,IAAIkP,EAAW,GAEdA,EADG,WAAeD,IAAUA,EAAQ,EACzBrI,EAAMvG,IAAI,gBAAiB6O,GAG3BtI,EAAMvG,IAAI,WAAY6O,GAGlC,MAAM3B,EAAW/N,KAAKa,IAAI,YACpBmN,EAAS5G,EAAMvG,IAAI,SAAUb,KAAKa,IAAI,UAAU,IAElDkN,GACH3G,EAAMpC,IAAI,IAAK,GAEXgJ,EACH5G,EAAMpC,IAAI,WAAY,YAGtBoC,EAAMpC,IAAI,WAAY,aAInBgJ,GACH5G,EAAMpC,IAAI,IAAK,GACfoC,EAAMpC,IAAI,WAAY,cAGtBoC,EAAMpC,IAAI,SAAKrC,GACfyE,EAAMpC,IAAI,WAAY,aAIpB,WAAewK,IAAgBA,GAAehP,IACjDA,IAAuBgP,EAAchP,GAAYkP,GAGlDtI,EAAMpC,IAAI,IAAKhF,KAAKsP,qBAAqB9O,IACzCR,KAAK2P,iBAAiBvI,EAAO5G,EAAU4G,EAAMvG,IAAI,cAAe,GAAIuG,EAAMvG,IAAI,cAAe,G,CAE/F,CAKO,UAAA+O,CAAWlK,EAAalF,EAAmBgP,GACjD,GAAI9J,EAAM,CACJ,WAAelF,KACnBA,EAAW,GAGZ,IAAIkP,EAAWhK,EAAK7E,IAAI,WAAY,IAChC,WAAe2O,IAAgBA,GAAehP,IACjDA,IAAuBgP,EAAchP,GAAYkP,GAGlDhK,EAAKV,IAAI,IAAKhF,KAAKsP,qBAAqB9O,IACxCR,KAAK2P,iBAAiBjK,EAAMlF,EAAU,EAAG,E,CAE3C,CAKO,UAAA+O,CAAWpH,EAAiB3H,EAAmBgP,EAAsBC,GAC3E,GAAItH,EAAM,CACJ,WAAe3H,KACnBA,EAAW,GAGZ,IAAIkP,EAAW,GAEdA,EADG,WAAeD,IAAUA,EAAQ,EACzBtH,EAAKtH,IAAI,gBAAiB6O,GAG1BvH,EAAKtH,IAAI,WAAY6O,GAG7B,WAAeF,IAAgBA,GAAehP,IACjDA,IAAuBgP,EAAchP,GAAYkP,GAGlDvH,EAAKnD,IAAI,IAAKhF,KAAKsP,qBAAqB9O,IAExC,IAAI0O,EAAS/G,EAAKtH,IAAI,SAAU,GAChC,MAAMmN,EAAS7F,EAAKtH,IAAI,SAAUb,KAAKa,IAAI,UAAU,IAEjDb,KAAKa,IAAI,aACZsH,EAAKnD,IAAI,IAAK,GACVgJ,IACHkB,IAAW,IAIPlB,IACJkB,IAAW,GAGb/G,EAAKnD,IAAI,QAAS0I,IACjBA,EAAQE,OAAO,EAAG,GAClBF,EAAQG,OAAOqB,EAAQ,EAAE,IAG1BlP,KAAK2P,iBAAiBxH,EAAM3H,EAAU2H,EAAKtH,IAAI,cAAe,GAAIsH,EAAKtH,IAAI,cAAe,G,CAE5F,CAKO,YAAAgP,CAAaxH,EAAqB7H,EAAmBgP,GAC3D,GAAInH,EAAQ,CAEX,MAAMC,EAASD,EAAOxH,IAAI,UAC1B,GAAIyH,EAAQ,CAEN,WAAe9H,KACnBA,EAAW,GAGZ,IAAIkP,EAAWrH,EAAOxH,IAAI,WAAY,IAClC,WAAe2O,IAAgBA,GAAehP,IACjDA,IAAuBgP,EAAchP,GAAYkP,GAIlD,IAAII,EAAiB9P,KAAKuC,KAAKgJ,kBAAkB/K,EAAUkP,GACvDK,EAAiB/P,KAAKuC,KAAK2D,SAAS4J,GACpCE,EAAI,EAKR,GAJIhQ,KAAKa,IAAI,cACZmP,GAAK,GAGF3H,EAAOxH,IAAI,WACd,GAAIkP,EAAgB,CACnB,IAAIE,EAAiBF,EAAelP,IAAI,UACpCoP,GACH3H,EAAOtD,IAAI,IAAKiL,EAAerB,IAAMqB,EAAe5P,QAAU2P,E,MAI/D1H,EAAOtD,IAAI,IAAK,GAIlBhF,KAAKuC,KAAK2D,SAAS4J,GAAkBzH,EAGrCC,EAAOtD,IAAI,IAAKhF,KAAKsP,qBAAqB9O,IAE1CR,KAAK2P,iBAAiBrH,EAAQ9H,EAAU,EAAG,E,EAG9C,CAKO,UAAA0P,CAAWvP,EAAiBH,EAAmBgP,GACrD,GAAI7O,EAAM,CACJ,WAAeH,KACnBA,EAAW,GAEP,WAAegP,KACnBA,EAAc,GAGf,IAAI6B,EAAKrR,KAAKsP,qBAAqB9O,GAC/B8Q,EAAKtR,KAAKsP,qBAAqBE,GAEnCxP,KAAKqQ,eAAe1P,EAAM0Q,EAAIC,E,CAEhC,CAEU,cAAAjB,CAAe1P,EAAgB0Q,EAAYC,GACpD3Q,EAAKqE,IAAI,QAAS0I,IAEjB,MAAMqB,EAAI/O,KAAKuC,KAAMxB,cAAcV,QAC7BiQ,EAAItQ,KAAKM,SAEXgR,EAAKD,KACPC,EAAID,GAAM,CAACA,EAAIC,IAGbD,EAAKf,GAAKgB,EAAK,IAOnB5D,EAAQE,OAAO,EAAGyD,GAClB3D,EAAQG,OAAOkB,EAAGsC,GAClB3D,EAAQG,OAAOkB,EAAGuC,GAClB5D,EAAQG,OAAO,EAAGyD,GAClB5D,EAAQG,OAAO,EAAGwD,GAAG,GAEvB,CAQO,oBAAA/B,CAAqB9O,GAC3B,OAAKR,KAAK0G,WAIDlG,EAAWR,KAAKoD,QAAUpD,KAAK2G,aAH/B3G,KAAKqD,KAAO7C,GAAYR,KAAK2G,WAKvC,CAKO,eAAAgF,CAAgB7E,EAAkBtG,GACxCR,KAAKuQ,iBAAiBzJ,EAAS,CAAE8H,EAAG,EAAGK,EAAGjP,KAAKsP,qBAAqB9O,IACrE,CAKO,mBAAA8G,CAAoBR,GAC1B,MAAMkH,EAAShO,KAAKa,IAAI,UAClB2P,EAAM,IAEZ,IAAIC,EAASzQ,KAAK0Q,SAASC,SAAS,CAAE/B,EAAG,EAAGK,EAAG,IAC3CA,EAAIwB,EAAOxB,EACXL,EAAI,EACJ0B,EAAItQ,KAAK4G,aACTmI,EAAIyB,EAEJI,EAAuC,QAEvC5Q,KAAKa,IAAI,YACRmN,GACH4C,EAAqB,QACrBhC,EAAI6B,EAAO7B,EAAI4B,EACfzB,EAAIyB,IAGJI,EAAqB,OACrBhC,EAAI6B,EAAO7B,EACXG,EAAIyB,GAIDxC,GACH4C,EAAqB,OACrBhC,EAAI6B,EAAO7B,EACXG,EAAIyB,IAGJI,EAAqB,QACrBhC,EAAI6B,EAAO7B,EAAI4B,EACfzB,EAAIyB,GAIN,MAAMvG,EAAS,CAAEK,KAAMsE,EAAGvE,MAAOuE,EAAIG,EAAG8B,IAAK5B,EAAG6B,OAAQ7B,EAAIqB,GACtDS,EAAYjK,EAAQjG,IAAI,UAEzB,aAAkBoJ,EAAQ8G,KAC9BjK,EAAQ9B,IAAI,SAAUiF,GACtBnD,EAAQ9B,IAAI,qBAAsB4L,GAEpC,CAKO,SAAA/J,GACN,MAAMtE,EAAOvC,KAAKuC,KACZwG,EAASxG,EAAKwG,OACpB,GAAIA,EAAQ,CACX,MAAMuH,EAAIvH,EAAOqI,cACjBpR,KAAK8O,IAAM9O,KAAK4G,aAAe0J,EAC/BtQ,KAAK6O,IAAMtM,EAAK0M,IAAMqB,C,CAExB,CAKO,cAAAzF,CAAerK,GACrB,MAAM+C,EAAQvD,KAAKoD,QAAU,EACvBI,EAAMxD,KAAKqD,MAAQ,EAazB,OATA7C,GAFAA,GAAYR,KAAK6O,MAEMrL,EAAMD,GAASvD,KAAK8O,IAEvC9O,KAAKa,IAAI,YACD0C,EAAQ/C,EAGRgD,EAAMhD,CAInB,CAKO,gBAAAgM,CAAiBhM,GACvB,MAAM+C,EAAQvD,KAAKoD,QAAU,EACvBI,EAAMxD,KAAKqD,MAAQ,EAazB,OAXIrD,KAAKa,IAAI,YACZL,GAAsB+C,EAGtB/C,EAAWgD,EAAMhD,GAGlBA,EAAWA,GAAYgD,EAAMD,GAASvD,KAAK8O,KAE/B9O,KAAK6O,GAGlB,CAMO,WAAApC,CAAYjM,GAClB,OAAKR,KAAKa,IAAI,YAGPL,EAFC,EAAIA,CAGb,EAtfA,qC,gDAAkC,kBAClC,sC,gDAA0C,IAAayM,WAAWC,OAAO,CAAC8D,EAAc/J,a,mJCoIlF,MAAMsK,UAAyC,IAAtD,c,oBASC,2C,iDAAkC,IAClC,iD,iDAAwC,IACxC,kD,iDAAyC,IACzC,gD,gDAAsC,IACtC,4C,gDAAkC,IAElC,2C,gDAAsD,CAAC,IACvD,2C,gDAAsD,CAAC,GAimCxD,CA/lCQ,SAAAjQ,GACNtB,KAAKoL,UAAU3K,UAAY,YAAiBT,KAAKoL,UAAU3K,UAAW,CAAC,SACvEY,MAAMC,YACNtB,KAAKwR,iBAAiBxR,KAAKa,IAAI,iBAC/Bb,KAAK0H,GAAG,gBAAgB,KACvB1H,KAAKwR,iBAAiBxR,KAAKa,IAAI,gBAAgB,GAEjD,CAEU,gBAAA2Q,CAAiBC,GAC1BzR,KAAKwL,cAAc,eAAgBiG,GACnCzR,KAAK0R,cAAgB,sBAA0BD,EAChD,CAEU,cAAAE,GACT,MAAMzN,EAAgBlE,KAAKa,IAAI,iBACV,MAAjBqD,GAAyBA,GAAiBK,IAC7CvE,KAAKwL,cAAc,gBAAiBtH,GAGpClE,KAAKwL,cAAc,gBAAiBxH,KAAK4N,OAAO5R,KAAKmE,WAAW,MAAO,GAAKnE,KAAKmE,WAAW,MAAO,IAAMnE,KAAK6R,oBAEhH,CAEU,UAAAC,GACT,MAAM7N,EAAMjE,KAAKmE,WAAW,OACtB4N,EAAM/R,KAAKmE,WAAW,OAE5B,GAAK,WAAeF,IAAQ,WAAe8N,GAAO,CAEjD/R,KAAK2R,iBAEL,MAAMK,EAAgBhS,KAAKmE,WAAW,iBAStC,GARI6N,EACHhS,KAAKwR,iBAAiBQ,GAGtBhS,KAAKwR,iBAAiBxR,KAAKa,IAAI,iBAI5Bb,KAAKuG,QAAQ,iBAAkB,CAClC,IAAIyL,EAAgBhS,KAAKa,IAAI,iBACzBmR,IACHhS,KAAKoF,OAAO,iBAAkB,CAAC4M,IAC/BhS,KAAKiS,qB,CAIP,GAAIjS,KAAKuG,QAAQ,eACXvG,KAAKkS,aAAc,CACvB,GAAIlS,KAAKa,IAAI,aACZ,OAAYb,KAAKkF,QAASA,IACzBlF,KAAKgN,iBAAiB9H,EAAO,IAG9BlF,KAAKiS,yBAED,CACJ,IAAIE,EAAenS,KAAKa,IAAI,gBACxBuR,EAAwBD,EAAaE,SAAWF,EAAa1C,MACjE,OAAYzP,KAAKkF,QAASA,IACzBA,EAAOoN,WAAWF,GAClBlN,EAAOqN,eAAe,IAGvBvS,KAAKwR,iBAAiBW,GACtBnS,KAAKwL,cAAc,qBAAiB7I,GACpC3C,KAAK8F,mB,CAEN9F,KAAKkS,cAAe,C,EAIxB,CAGO,gBAAAlF,CAAiB9H,GACvB,GAAIlF,KAAKa,IAAI,eAAiBqE,EAAOrE,IAAI,qBAAsB,CAC9Db,KAAKkS,cAAe,EAEpBlS,KAAKwS,oBAAqB,EAG1B,IAAIC,EAA6B,GAC7BC,EAAe1S,KAAK6R,mBAEpBc,EAAiB3S,KAAKa,IAAI,kBAE9B,OAAY8R,GAAiBlB,IACL,sBAA0BA,GAC1BiB,GACtBD,EAAUvS,KAAKuR,E,IAIjBvM,EAAO0N,UAAY,CAAC,EAEpB,MAAM7N,EAAM/E,KAAKmE,WAAW,QAAWnE,KAAKa,IAAI,YAAYsD,WAAW,UACvE,IAAI0O,EAEJ,MAAMC,EAAW5N,EAAOrE,IAAI,YAExBqE,EAAOrE,IAAI,WAAaiS,EAC3BD,EAAS3N,EAAO6N,cAER7N,EAAOrE,IAAI,WAAaiS,IAChCD,EAAS3N,EAAO8N,eAGjB,IAAIxI,EAAYtF,EAAO+N,eACnBd,EAAenS,KAAKa,IAAI,gBACxBuR,EAAwBD,EAAaE,SAAWF,EAAa1C,MAEjEvK,EAAO0N,UAAUR,GAAiB5H,EAElC,MAAM0I,EAAgBhO,EAAOrE,IAAI,qBACjC,IAAIsS,EAAiBjO,EAAOrE,IAAI,0BAA0B,GACtDqS,IACHC,GAAiB,GAGlB,OAAYV,GAAYhB,IACvB,IAII2B,EAJAC,GAAe,IACfC,EAAY7B,EAASY,SAAWZ,EAAShC,MAC7CvK,EAAO0N,UAAUU,GAAa,GAI9B,IAAIC,EAAmC,CAAC,EACpC9D,EAAqC,CAAC,EAEtC+D,EAAgD,CAAC,EACjDC,EAA6C,CAAC,EAElD,OAAYZ,GAASa,IACpBH,EAAIG,GAAS,EACbjE,EAAMiE,GAAS,EACfF,EAAiBE,GAASxO,EAAOrE,IAAK6S,EAAQ,WAC9CD,EAAcC,GAASA,EAAQ,SAAS,IAGzC,IAGIC,EAKAC,EARAC,EAAmB,cAAkBpC,EAASY,UAElC7H,EAAU,KAGzBmJ,EAAYnJ,EAAU,GAAG3J,IAAIkE,IAI9B,OAAYyF,GAAYzI,IACvB,IAGI+R,EAHAC,EAAOhS,EAASlB,IAAIkE,GAEpBiP,EAAc,OAAWD,EAAMtC,EAASY,SAAUZ,EAAShC,MAAOzP,KAAKI,MAAOuT,GAG9EN,EAAeW,EAAcH,EAAmB,IACnDC,EAAc,OAAa/R,EAAS+R,aAEpCV,EAAc,IAAI,IAASlO,EAAQ4O,EAAa5O,EAAO+O,cAAcH,IACrEV,EAAYhO,OAAOL,EAAYiP,GAE/B9O,EAAO0N,UAAUU,GAAWpT,KAAKkT,GAEjC,OAAYP,GAASa,IACpB,IAAIrR,EAAQN,EAASlB,IAAI6S,GACrB,WAAerR,IAClB+Q,EAAYhO,OAAOsO,EAAcrR,GACjC+Q,EAAYhO,OAAOqO,EAAcC,GAAerR,GAChDoN,EAAMiE,GAAS,EACfH,EAAIG,GAASrR,IAGbkR,EAAIG,GAAS,EACbjE,EAAMiE,GAAS,E,IAIbP,GACHC,EAAYpO,IAAI,YAAa,CAACjD,IAG3BmR,GAAiBU,GACpBV,EAAcU,EAAiBnC,GAGhCmC,EAAkBR,IAGlB,OAAYP,GAASa,IACpB,IAAIQ,EAAWV,EAAiBE,GAC5BrR,EAAQN,EAASlB,IAAI6S,GAEzB,GAAa,MAATrR,EAAe,CAElB,IAAI8R,EAAef,EAAYvS,IAAI6S,GAEnC,OAAQQ,GACP,IAAK,QACJd,EAAYhO,OAAOsO,EAAcrR,GACjC,MAED,IAAK,MACJ+Q,EAAYhO,OAAOsO,EAAcS,EAAe9R,GAChD,MAED,IAAK,OACJ,MAED,IAAK,MACAA,EAAQ8R,GACXf,EAAYhO,OAAOsO,EAAcrR,GAElC,MAED,IAAK,OACAA,EAAQ8R,GACXf,EAAYhO,OAAOsO,EAAcrR,GAElC,MAED,IAAK,UACJoN,EAAMiE,KACNH,EAAIG,IAAUrR,EACd,IAAI+R,EAAUb,EAAIG,GAASjE,EAAMiE,GACjCN,EAAYhO,OAAOsO,EAAcU,GACjC,MAED,IAAK,UACApQ,KAAKqQ,IAAIhS,GAAS2B,KAAKqQ,IAAIF,IAC9Bf,EAAYhO,OAAOsO,EAAcrR,GAKpC+Q,EAAYhO,OAAOqO,EAAcC,GAAeN,EAAYvS,IAAI6S,IAChE,IAAII,EAAmB,OAAa/R,EAAS+R,aAC7CA,EAAY/O,GAAciP,EAC1BZ,EAAYU,YAAcA,C,KAIxBX,GACHC,EAAYvS,IAAI,aAAcX,KAAK6B,IAGrCsR,EAAeW,CAAW,IAGvBd,GAAiBU,GACpBV,EAAcU,EAAiBnC,E,IAI7BvM,EAAOoP,YACVpP,EAAOoN,WAAWpN,EAAOoP,YAE1BtU,KAAK6H,gBAED7H,KAAK4J,cACR5J,KAAKI,MAAMsB,OAAO6S,KAAK,cAAc,KACpCvU,KAAK6H,eAAe,G,CAIxB,CAEO,WAAAuE,GACN/K,MAAM+K,cACNpM,KAAKwU,qBAAsB,EAC3BxU,KAAKkS,cAAe,CACrB,CAOO,gBAAAuC,CAAiBhR,GACvB,IAAI0O,EAAenS,KAAKa,IAAI,gBACxBmR,EAAgB,iBAAqB,EAAGvO,EAAUzD,KAAKa,IAAI,aAAc0D,KAAWvE,KAAKa,IAAI,mBAIjG,OAHI,sBAA0BmR,GAAiB,sBAA0BG,KACxEH,EAAgB,OAAH,UAAQG,IAEfH,CACR,CAWO,cAAA0C,CAAejD,GACrB,OAAOzR,KAAK2U,aAAalD,EAASY,SAAWZ,EAAShC,MACvD,CAWO,cAAAmF,CAAenD,GACrB,OAAOzR,KAAK6U,aAAapD,EAASY,SAAWZ,EAAShC,MACvD,CAEU,kBAAAwC,GACT5Q,MAAM4Q,qBAEN,IAAI6C,EAAe9Q,KAAK4N,MAAM5R,KAAKmE,WAAW,iBAC1C4Q,EAAe/Q,KAAK4N,MAAM5R,KAAKmE,WAAW,iBAE9C,GAAI,WAAe2Q,IAAiB,WAAeC,GAAe,CAMjE,GAJ+B,GAA3B/U,KAAKa,IAAI,iBACZkU,GAAgB,GAGb/U,KAAKa,IAAI,eAAiBb,KAAKwU,oBAAqB,CACvDxU,KAAKwU,qBAAsB,EAE3B,IAAIxC,EAAgBhS,KAAKa,IAAI,iBACzBmU,EAAUhV,KAAKmE,WAAW,iBAE1B8Q,EAAsBF,EAAeD,GAAiB9U,KAAKa,IAAI,gBAAiB,IAAM,EAAIb,KAAKa,IAAI,cAAe,IAAMb,KAAK0S,gBAEjI,GAAIsC,EAAS,CACZ,IAAIvR,EAAW,sBAA0BuR,GACzCC,EAAqBjR,KAAKoG,KAAK6K,EAAqBxR,GAAYA,C,CAOjE,GAJKuO,IACJA,EAAgBhS,KAAKyU,iBAAiBQ,IAGnCjD,KAAmBgD,GAAYA,EAAQ3C,WAAaL,EAAcK,UAAY2C,EAAQvF,QAAUuC,EAAcvC,OAAUzP,KAAKwS,oBAAqB,CACrJxS,KAAKwS,oBAAqB,EAC1BxS,KAAKwL,cAAc,gBAAiBwG,GACpChS,KAAKwR,iBAAiBQ,GAEtB,IAAIkD,EAAQlD,EAAcK,SAAWL,EAAcvC,MACnD,OAAYzP,KAAKkF,QAASA,IACrBA,EAAOrE,IAAI,cAAgBb,MAC9BkF,EAAOoN,WAAW4C,E,IAIpBlV,KAAK8F,oBAEL9F,KAAKI,MAAMsB,OAAO6S,KAAK,cAAc,KACpCvU,KAAKI,MAAMsB,OAAO6S,KAAK,cAAc,KACpC,MAAM1S,EAAO,uBACT7B,KAAK0B,OAAOyT,UAAUtT,IACzB7B,KAAK0B,OAAO0T,SAASvT,EAAM,CAAEA,KAAMA,EAAMwT,OAAQrV,M,GAEjD,G,EAKL,OAAYA,KAAKkF,QAASA,IACzB,GAAIA,EAAOrE,IAAI,cAAgBb,KAAM,CACpC,IAAIsV,EAAkBtV,KAAKmE,WAAW,QAAWnE,KAAKa,IAAI,YAAYsD,WAAW,UAM7EoR,EAJU,sBAA2BrQ,EAAOsF,WAAYzI,GACpD,KAAeA,EAASlB,IAAIyU,GAAYR,KAGzBU,MAEnBD,EAAa,IAChBA,GAAc,GAGfR,GAAgB/U,KAAK0S,gBAAkB,EAAI1S,KAAKa,IAAI,cAAe,IAMnE,IAAI4U,EAJQ,iBAAsBvQ,EAAOsF,WAAYzI,GAC7C,KAAeA,EAASlB,IAAIyU,GAAYP,KAG7BS,MACfE,EAAYD,EAEZC,EAAY,GACfA,IAGD,MAAMC,EAAgBzQ,EAAOsF,UAAU+K,GACjCK,EAAe1Q,EAAOsF,UAAUkL,GAEtC,IAAIG,EACAC,EACAH,IACHG,EAAYH,EAAc9U,IAAIyU,IAG3BM,IACHC,EAAWD,EAAa/U,IAAIyU,IAG7B,IAAIS,GAAiB,EACL,MAAZF,GAAiC,MAAbC,IACnBD,EAAWf,GAAgBgB,EAAYf,KAC1CgB,GAAiB,GAInB7Q,EAAO3D,WAAW,iBAAkBwU,GACpC7Q,EAAO3D,WAAW,aAAcgU,GAChCrQ,EAAO3D,WAAW,qBAAsB2D,EAAO8Q,kBAAkBT,IACjErQ,EAAO3D,WAAW,WAAYkU,GAC9BzV,KAAKsO,KAAK5M,OAAO6S,KAAK,cAAc,KACnCrP,EAAO+Q,qBAAqB,qBAAqB,G,KAMtD,CAEU,aAAAC,CAAcjS,EAAa8N,EAAaoE,EAAmBC,GACpE,MAAO,CAAEnS,IAAKA,EAAK8N,IAAKA,EAAKsE,MAAOtE,EAAM9N,GAAOkS,EAClD,CAKO,gBAAAtC,GACN,OAAO7T,KAAKsW,iBACb,CAEU,WAAAC,CAAYtS,EAAa8N,GAClC,IAAIC,EAAgBhS,KAAKmE,WAAW,iBAE/B6N,IACJA,EAAgBhS,KAAKa,IAAI,iBAG1B,IAAI2V,EAAKxE,EAAcK,SAAWL,EAAcvC,MAChDzP,KAAK6U,aAAa2B,GAAMvS,EACxBjE,KAAK2U,aAAa6B,GAAMzE,CACzB,CAEU,KAAA0E,CAAMpE,GACf,MAAgB,SAAZA,GAAmC,QAAZA,GAAkC,OAAZA,EACzC,KAED,IACR,CAEU,iBAAAqE,CAAkBjF,G,MAC3B,IAAIkF,EACAlH,EAAQgC,EAAShC,MACjB4C,EAAWZ,EAASY,SA8BxB,OA7BI5C,EAAQ,IACE,IAATA,GAGc,IAATA,EAFRA,EAAQ,EAKS,IAATA,EACRA,EAAQ,EAES,GAATA,EACRA,EAAQ,EAES,IAATA,EACRA,EAAQ,GAEAA,EAAQ,KAChBA,EAAQ,GAETkH,EAAoB,CAAEtE,SAAUA,EAAU5C,MAAOA,IAElC,QAAZ4C,IAEFsE,EADgD,SAAd,QAA/B,EAAA3W,KAAKmE,WAAW,uBAAe,eAAEkO,UAChB,CAAEA,SAAU,MAAO5C,MAAO,GAG1B,CAAE4C,SAAU,OAAQ5C,MAAO,IAG1CkH,CACR,CAEU,iBAAAC,GACT,MAAM3S,EAAMjE,KAAKmE,WAAW,OACtB4N,EAAM/R,KAAKmE,WAAW,OAE5B,GAAI,WAAeF,IAAQ,WAAe8N,GAAM,CAC/C,MAAMzD,EAAOtO,KAAKI,MACZ0U,EAAe9Q,KAAK4N,MAAM5R,KAAKmE,WAAW,iBAC1C4Q,EAAe/Q,KAAK4N,MAAM5R,KAAKmE,WAAW,iBAC1C7B,EAAWtC,KAAKa,IAAI,YACpBsR,EAAenS,KAAKmE,WAAW,gBAErC,IAAI9B,EAAQyS,EACR+B,EAAI,EAER,MAAMpE,EAAYzS,KAAKa,IAAI,iBAC3B,IAAIiW,EAAe,iBAAqB,EAAG/B,EAAeD,EAAcxS,EAAS6T,YAAa1D,GAE1F,sBAA0BqE,GAAgB9W,KAAK0S,iBAClDoE,EAAe,OAAH,UAAQ3E,IAGrB,MAAM0B,EAAmB,sBAA0BiD,GACnD9W,KAAKsW,kBAAoBzC,EAEzB,MAAMkD,EAAe,cAAkBD,EAAazE,UAC9C2E,EAAM1I,EAAK0I,IACXC,EAAW3I,EAAK2I,SAGtB5U,EAAQ,OAAWyS,EAAejB,EAAkBiD,EAAazE,SAAUyE,EAAarH,MAAOnB,EAAMrK,GACrG,IACIiT,EADAC,EAAgB9U,EAAQwR,EAE5B,MAAMuD,EAAUpX,KAAKa,IAAI,eAEzBb,KAAKwL,cAAc,eAAgBsL,GAEnC,MAAMO,EAAqB/U,EAASzB,IAAI,sBAClCyW,EAAmBhV,EAASzB,IAAI,mBAAoBwW,GAE1D,IAAIV,EACAY,EAAgB,EAEhBD,IACHX,EAAoB3W,KAAK0W,kBAAkBI,GAC3CS,EAAgB,sBAA0BZ,IAG3C,IAAI/N,EAAI,EACR,KAAOvG,EAAQ0S,EAAelB,GAAkB,CAC/C,IAAI9R,EACA/B,KAAKwK,UAAU0E,OAAS2H,EAAI,GAC/B9U,EAAW,IAAI,IAAS/B,UAAM2C,EAAW,CAAC,GAC1C3C,KAAKwX,WAAWtX,KAAK6B,GACrB/B,KAAKyX,gBAAgB1V,IAGrBA,EAAW/B,KAAKwK,UAAUqM,GAG3B7W,KAAKqF,cAActD,EAAU,IAE7B/B,KAAKuI,gBAAgBxG,GAAU,GAE/BA,EAASqD,OAAO,QAAS/C,GACzBN,EAASqD,OAAO,qBAAiBzC,GAEjC,IAAI+U,EAAWrV,EAAQ,cAAkByU,EAAazE,SAAUyE,EAAarH,MAAQzP,KAAKyW,MAAMK,EAAazE,WAE7GqF,EAAW,OAAWA,EAAUZ,EAAazE,SAAU,EAAG/D,GAE1DvM,EAASqD,OAAO,WAAYsS,GAE5B,IAAIC,EAAO,IAAIC,KAAKvV,GAEpB6U,EAASE,EAAQN,EAAazE,UAC1B0E,GAAgB/W,KAAKa,IAAI,mBAAqB,WAAesW,IACnC,QAAzBL,EAAazE,UACZ,cAAkBhQ,EAAO8U,EAAeJ,EAAcC,EAAKC,KAC9DC,EAASlX,KAAKa,IAAI,2BAA4BiW,EAAazE,WAK9D,MAAMjL,EAAQrF,EAASlB,IAAI,SACvBuG,GACHA,EAAMpC,IAAI,OAAQsJ,EAAKuJ,cAAcX,OAAOS,EAAMT,IAGnD,IAAIzH,EAAQqH,EAAarH,MAMzB,GAJ6B,QAAzBqH,EAAazE,UAChBtQ,EAASqD,OAAO,gBAAiB/C,GAG9BiV,EAAkB,CACrB7H,EAAQ,EACR,IAAI4C,EAAWyE,EAAazE,SACZ,QAAZA,IACHA,EAAW,OAGZ,IAAIyF,EAAgBzV,EAAQ,cAAkBgQ,EAAUrS,KAAKyW,MAAMpE,IAEnEyF,EAAgB,OAAWA,EAAezF,EAAU,EAAG/D,GACvDvM,EAASqD,OAAO,gBAAiB0S,E,CASlC,GANA9X,KAAKuF,iBAAiBxD,EAAU0N,GAEhC0H,EAAgB9U,EAChBA,EAAQqV,EAGJf,EAAmB,CACtB,MAAMoB,EAAgBpB,EAAkBtE,SAClC2F,EAAarB,EAAkBlH,MAC/BwI,EAAMjY,KAAKyW,MAAMsB,GAGvB,IAEIG,EAFAC,EAAa,OAAWhB,EAAgBI,EAAgBU,EAAKF,EAAeC,EAAY1J,EAAM6I,GAG9FiB,EAAepY,KAAKa,IAAI,mBAAoBb,KAAKa,IAAI,gBAEzD,KAAOsX,EAAa9V,EAAQ,IAAOkV,GAAe,CACjD,IAAIc,EACArY,KAAKsY,eAAepJ,OAAStG,EAAI,GACpCyP,EAAgB,IAAI,IAASrY,UAAM2C,EAAW,CAAC,GAC/C3C,KAAKsY,eAAepY,KAAKmY,GACzBrY,KAAKyX,gBAAgBY,IAGrBA,EAAgBrY,KAAKsY,eAAe1P,GAGrC5I,KAAKqF,cAAcgT,EAAe,CAAC,UAAU,GAE7CrY,KAAKuI,gBAAgB8P,GAAe,GAEpCA,EAAcjT,OAAO,QAAS+S,GAE9B,IAAII,EAAgBJ,EAAa,cAAkBJ,EAAeC,EAAaC,GAE/EM,EAAgB,OAAWA,EAAeR,EAAe,EAAGzJ,GAE5D+J,EAAcjT,OAAO,WAAYmT,GAEjC,IAAIZ,EAAO,IAAIC,KAAKO,GAEpBjB,EAASkB,EAAaL,GAEtB,MAAMS,EAAaH,EAAcxX,IAAI,SAarC,GAXI2X,IACCnB,EACHmB,EAAWxT,IAAI,OAAQsJ,EAAKuJ,cAAcX,OAAOS,EAAMT,IAGvDsB,EAAWjX,WAAW,WAAW,IAInCvB,KAAKuF,iBAAiB8S,EAAe,GAEjCF,GAAcD,EACjB,MAGDA,EAAqBC,EACrBA,EAAaI,EACb3P,G,EAIF,GAAIvG,GAAS8U,EACZ,MAGDN,G,CAGD,IAAK,IAAI4B,EAAI5B,EAAG4B,EAAIzY,KAAKwK,UAAU0E,OAAQuJ,IAC1CzY,KAAKuI,gBAAgBvI,KAAKwK,UAAUiO,IAAI,GAGzC,IAAK,IAAIA,EAAI7P,EAAG6P,EAAIzY,KAAKsY,eAAepJ,OAAQuJ,IAC/CzY,KAAKuI,gBAAgBvI,KAAKsY,eAAeG,IAAI,GAG9C,OAAYzY,KAAKkF,QAASA,IACrBA,EAAOwT,QACVxT,EAAOyT,gB,IAKV3Y,KAAK8J,cACN,CAEU,aAAA3G,CAAcI,EAAeC,GACtCxD,KAAKwL,cAAc,oBAAqBxL,KAAK4Y,gBAAgBrV,IAC7DvD,KAAKwL,cAAc,oBAAqBxL,KAAK4Y,gBAAgBpV,GAC9D,CAEU,SAAAqV,GACT7Y,KAAK8Y,aAAe9Y,KAAK0S,eAAiB,CAC3C,CAEU,OAAAqG,CAAQ9U,GACjB,MAAMkO,EAAenS,KAAKmE,WAAW,gBAC/BkO,EAAWF,EAAaE,SAE9B,IAAI2G,EAAY,OAAW/U,EAAKoO,EAAUF,EAAa1C,MAAOzP,KAAKI,OAE/D6Y,EAAUD,EAAY,cAAkB3G,EAAUF,EAAa1C,MAAQzP,KAAKyW,MAAMpE,IAGtF,OADA4G,EAAU,OAAWA,EAAS5G,EAAU,EAAGrS,KAAKI,OACzC4Y,GAAaC,EAAUD,GAAahZ,KAAKa,IAAI,gBAAiB,EACtE,CAEU,OAAAqY,CAAQnH,GACjB,MAAMI,EAAenS,KAAKmE,WAAW,gBAC/BkO,EAAWF,EAAaE,SAE9B,IAAI2G,EAAY,OAAWjH,EAAKM,EAAUF,EAAa1C,MAAOzP,KAAKI,OAC/D6Y,EAAUD,EAAY,cAAkB3G,EAAUF,EAAa1C,MAAQzP,KAAKyW,MAAMpE,IAItF,OAFA4G,EAAU,OAAWA,EAAS5G,EAAU,EAAGrS,KAAKI,OAEzC4Y,GAAaC,EAAUD,GAAahZ,KAAKa,IAAI,cAAe,EACpE,CAEU,YAAAsY,CAAaC,EAAejU,GAEtC,CAEO,oBAAA4G,GACN/L,KAAKuB,WAAW,eAAgBvB,KAAKa,IAAI,iBACzCb,KAAKuB,WAAW,WAAOoB,GACvB3C,KAAKuB,WAAW,gBAAYoB,EAC7B,CAOO,YAAA+P,GACN,OAAO1S,KAAK0R,aAEb,CAOO,gBAAAG,GACN,OAAO,sBAA0B7R,KAAKa,IAAI,gBAC3C,CAKO,qBAAAqL,CAAsBnK,EAAuC8Q,GACnE,MAAMV,EAAenS,KAAKmE,WAAW,gBAEhCpC,EAASsX,OACbtX,EAASsX,KAAO,CAAC,GAEbtX,EAASuX,QACbvX,EAASuX,MAAQ,CAAC,GAGnB,OAAYzG,GAASa,IACpB,IAAIrR,EAAQN,EAASlB,IAAI6S,GACzB,GAAI,WAAerR,GAAQ,CAC1B,IAAI2W,EAAYjX,EAASsX,KAAM3F,GAC3BuF,EAAUlX,EAASuX,MAAO5F,GAG9B,GAAIrR,GAAS2W,GAAa3W,GAAS4W,OAG9B,CACJ,MAAM5G,EAAWF,EAAaE,SACxB5C,EAAQ0C,EAAa1C,MAE3BuJ,EAAY,OAAW3W,EAAOgQ,EAAU5C,EAAOzP,KAAKI,OACpD6Y,EAAUD,EAAY,cAAkB3G,EAAU5C,EAAQzP,KAAKyW,MAAMpE,IAErE4G,EAAU,OAAWA,EAAS5G,EAAU,EAAGrS,KAAKI,OAEhD2B,EAASsX,KAAM3F,GAASsF,EACxBjX,EAASuX,MAAO5F,GAASuF,C,CAG1BjZ,KAAKmZ,aAAaH,EAAWjX,EAASwX,U,IAGzC,CAEU,gBAAAC,GAEV,CAKO,oBAAAC,CAAqB1X,EAAuC2R,EAAegG,EAAsBC,GAEvG,IAAIC,EACAC,EAEA9X,EAASsX,MAAQtX,EAASuX,OAC7BM,EAAY7X,EAASsX,KAAK3F,GAC1BmG,EAAa9X,EAASuX,MAAM5F,KAG5BkG,EAAY7X,EAASlB,IAAI6S,GACzBmG,EAAaD,GAGd,IAAIvX,EAAQuX,GAAaC,EAAaD,GAAaF,EAInD,OAFArX,EAAQrC,KAAK8Z,YAAczX,EAAQrC,KAAK8Z,YAAcH,EAE/C3Z,KAAK+Z,gBAAgB1X,EAC7B,CAKO,sBAAA2X,CAAuBjY,EAAuC2R,EAAegG,EAAsBC,GACzG,OAAO3Z,KAAKoL,UAAU9I,SAASgN,qBAAqBtP,KAAKyZ,qBAAqB1X,EAAU2R,EAAOgG,EAAcC,GAC9G,CAKO,oBAAAM,CAAqBlY,EAAuC2R,EAAegG,EAAsBC,GACvG,IAAIC,EACAC,EAEA9X,EAASsX,MAAQtX,EAASuX,OAC7BM,EAAY7X,EAASsX,KAAK3F,GAC1BmG,EAAa9X,EAASuX,MAAM5F,KAG5BkG,EAAY7X,EAASlB,IAAI6S,GACzBmG,EAAaD,GAGd,IAAIvX,EAAQuX,GAAaC,EAAaD,GAAaF,EAGnD,OADArX,EAAQrC,KAAK8Z,YAAczX,EAAQrC,KAAK8Z,YAAcH,EAC/C3Z,KAAK+Z,gBAAgB1X,EAC7B,CAKO,sBAAA6X,CAAuBnY,EAAuC2R,EAAegG,EAAsBC,GACzG,OAAO3Z,KAAKoL,UAAU9I,SAASgN,qBAAqBtP,KAAKia,qBAAqBlY,EAAU2R,EAAOgG,EAAcC,GAC9G,CAKO,iBAAApO,CAAkB/K,EAAkBkP,GAC1C,IAAIrN,EAAQrC,KAAK4Y,gBAAgBpY,GACjC6B,IAAiBqN,EAAW,IAAO1P,KAAK0S,eAExC,IAAIP,EAAenS,KAAKmE,WAAW,gBACnC,IAAK,QAAY9B,GAAQ,CACxB,MAAM8X,EAAWna,KAAKI,MAAMga,OAAOC,eAC7BhI,EAAWF,EAAaE,SACxB2E,EAAMhX,KAAKI,MAAM4W,IACjBC,EAAWjX,KAAKI,MAAM6W,SACtBxH,EAAQ0C,EAAa1C,MAG3BpN,EAAQ,OAAWA,EAAOgQ,EAAU5C,EAAOzP,KAAKI,MAAOJ,KAAKmE,WAAW,MAAO,IAE9E,IAAIV,EAAW,0BAA8B0O,EAAc,IAAIyF,KAAKvV,GAAQ8X,EAAUnD,EAAKC,GAO3F,OANIA,IAEH5U,EAAQ,OAAWA,EAA8B,IAAtBrC,KAAK0S,eAAuBL,EAAU5C,EAAOzP,KAAKI,MAAOJ,KAAKmE,WAAW,MAAO,IAC3GV,EAAW,0BAA8B0O,EAAc,IAAIyF,KAAKvV,EAAQoB,EAAWiM,GAAWyK,EAAUnD,EAAKC,IAGvGjX,KAAK+Z,gBAAgB1X,EAAQoB,EAAWiM,E,CAEhD,OAAO4K,GACR,CAYO,cAAAzO,CAAerL,EAAkB+Z,GAEvC,GAA8B,MAA1Bva,KAAKmE,WAAW,OAAgB,CACnC,IAAI+S,EAASlX,KAAKa,IAAI,sBAAuBb,KAAKmE,WAAW,gBAAgBkO,UACzEhQ,EAAQrC,KAAK4Y,gBAAgBpY,GACjC,GAAI,WAAe6B,GAAQ,CAC1B,IAAIsV,EAAO,IAAIC,KAAKvV,GAEhB8P,EAAenS,KAAKmE,WAAW,gBAC/BV,EAAW,0BAA8B0O,EAAcwF,EAAM3X,KAAKI,MAAMga,OAAOC,eAAgBra,KAAKI,MAAM4W,IAAKhX,KAAKI,MAAM6W,UAM9H,OAJuB,IAAnBsD,IACH5C,EAAO,IAAIC,KAAKvV,EAAQrC,KAAKa,IAAI,yBAA0Bb,KAAKa,IAAI,kBAAmB,KAAQ4C,IAGzFzD,KAAKI,MAAMyX,cAAcX,OAAOS,EAAM3X,KAAKa,IAAI,oBAAqBqW,G,EAI7E,MAAO,EACR,CASO,aAAAjM,CAAc/F,EAAkB1E,EAAkBkP,EAAmB8K,GAC3E,IAAIlF,EAAkBtV,KAAKmE,WAAW,QAAWnE,KAAKa,IAAI,YAAYsD,WAAW,UAC7E9B,EAAQrC,KAAK4Y,gBAAgBpY,GAEjB,MAAZkP,IACHA,EAAW,IAGZrN,IAAiBqN,EAAW,IAAO1P,KAAK0S,eAExC,MAAM+H,EAAS,iBAAsBvV,EAAOsF,WAAYzI,IACvD,IAAI2Y,EAAU,EAKd,OAJI3Y,EAASsX,OACZqB,EAAU3Y,EAASsX,KAAK/D,IAGlB,KAAeoF,EAASrY,EAAM,IAGtC,GAAImY,GAAQtV,EAAOrE,IAAI,eAAgB,CACtC,IAAI8Z,EAAQzV,EAAOsF,UAAUiQ,EAAOjF,MAAQ,GACxCoF,EAAS1V,EAAOsF,UAAUiQ,EAAOjF,OAErC,GAAImF,GAASC,GACRD,EAAMtB,MAAQuB,EAAOtB,MAAO,CAC/B,IAAID,EAAOsB,EAAMtB,KAAK/D,GAClBgE,EAAQsB,EAAOtB,MAAMhE,GAEzB,GAAItR,KAAKqQ,IAAIhS,EAAQgX,GAAQrV,KAAKqQ,IAAIhS,EAAQiX,GAC7C,OAAOsB,C,CAKV,GAAID,EACH,OAAOA,EAGR,GAAIC,EACH,OAAOA,C,KAGJ,CACJ,MAAM7Y,EAAWmD,EAAOsF,UAAUiQ,EAAOjF,MAAQ,GAEjD,GAAIzT,GACCA,EAASsX,MAAQtX,EAASuX,MAAO,CACpC,IAAID,EAAOtX,EAASsX,KAAK/D,GACrBgE,EAAQvX,EAASuX,MAAMhE,GAE3B,GAAIjT,GAASgX,GAAQhX,GAASiX,EAC7B,OAAOvX,C,EAKZ,CAKO,SAAA2K,CAAU3K,EAAuC8Y,EAAuCC,EAAsBxF,GACpH,MAAMyF,EAAShZ,EAASlB,IAAIyU,GAG5B,OAFeuF,EAASha,IAAIyU,GAEfyF,EAAS/a,KAAK0S,eAAiBoI,CAI7C,CAWO,WAAAE,CAAYzX,EAAaC,EAAWC,GAC1CzD,KAAKib,aAAa1X,EAAM2X,UAAW1X,EAAI0X,UAAWzX,EACnD,CAWO,YAAAwX,CAAa1X,EAAeC,EAAaC,GAC/C,MAAMQ,EAAMjE,KAAKmE,WAAW,WAAY,GAClC4N,EAAM/R,KAAKmE,WAAW,WAAY,GACxC,GAA8B,MAA1BnE,KAAKmE,WAAW,QAA4C,MAA1BnE,KAAKmE,WAAW,OACrD,GAAInE,KAAKa,IAAI,aAAc,CAC1B,MAAMsa,EAAsBnb,KAAKyU,iBAAiBjR,EAAMD,GAClD4O,EAAenS,KAAKa,IAAI,gBAE9B,IAAIua,EAAUpb,KAAK4U,eAAezC,GAC9BkJ,EAAUrb,KAAK0U,eAAevC,GAAgB,EAClDkJ,EAAU,OAAWA,EAASF,EAAoB9I,SAAU8I,EAAoB1L,MAAOzP,KAAKsO,MAC5F+M,GAAWrb,KAAKyW,MAAM0E,EAAoB9I,UAAY,sBAA0B8I,GAChFE,EAAU,OAAWA,EAASF,EAAoB9I,SAAU8I,EAAoB1L,MAAOzP,KAAKsO,MAE5F,IAAIgN,EAAY,OAAWF,EAASD,EAAoB9I,SAAU8I,EAAoB1L,MAAOzP,KAAKsO,MAC9FiN,EAAY,OAAWF,EAASF,EAAoB9I,SAAU8I,EAAoB1L,MAAOzP,KAAKsO,MAE9FkN,GAAKjY,EAAQ+X,IAAcC,EAAYD,GACvCG,GAAKjY,EAAM8X,IAAcC,EAAYD,GAEzCtb,KAAKsD,KAAKkY,EAAGC,EAAGhY,E,MAGhBzD,KAAKsD,MAAMC,EAAQU,IAAQ8N,EAAM9N,IAAOT,EAAMS,IAAQ8N,EAAM9N,GAAMR,EAGrE,CAUO,cAAAiY,CAAelb,GACrB,OAAO,IAAIoX,KAAK5X,KAAK4Y,gBAAgBpY,GACtC,CASO,cAAAmb,CAAehE,GACrB,OAAO3X,KAAK+Z,gBAAgBpC,EAAKuD,UAClC,CAQO,oBAAAnR,GACN,IAAIgI,EAAM/R,KAAKmE,WAAW,eAAgBnE,KAAKmE,WAAW,QACtDF,EAAMjE,KAAKmE,WAAW,eAAgBnE,KAAKmE,WAAW,QAE1D,OAAI,WAAe4N,IAAQ,WAAe9N,GAClCjE,KAAKsW,mBAAqBvE,EAAM9N,GAEjC,GACR,CAEO,YAAA2X,CAAanM,GACN,MAATA,IACHA,EAAQ,GAGT,IAAIoM,EAAQ7b,KAAKa,IAAI,kBAAmB,IAAOb,KAAK0S,eACH,KAA7C1S,KAAKa,IAAI,YAAYsD,WAAW,YACnCsL,IAAU,GAGX,IAAIqM,EAAe9b,KAAK4Y,gBAAgB5Y,KAAKmE,WAAW,kBAAmB,IAE3E,MAAMgO,EAAenS,KAAKmE,WAAW,gBACrC,IAAI4P,EAAO/T,KAAK+b,UAAUD,EAAcrM,EAAO0C,GAE3C2C,EAAe9U,KAAKmE,WAAW,eAAgB,GAC/C4Q,EAAe/U,KAAKmE,WAAW,eAAgB,GAE/CF,EAAM,OAAW6Q,EAAc3C,EAAaE,SAAUF,EAAa1C,MAAOzP,KAAKI,OAC/E2R,EAAM,OAAWgD,EAAc5C,EAAaE,SAAUF,EAAa1C,MAAOzP,KAAKI,OAKnF,OAHA2T,GAAQ8H,EACR9H,EAAO,aAAiBA,EAAM9P,EAAM4X,EAAO9J,EAAM8J,GAE1C7b,KAAKwM,iBAAiBxM,KAAK+Z,gBAAgBhG,GACnD,CAEU,SAAAgI,CAAUhI,EAActE,EAAe0C,GAChD,OAAO,OAAW4B,EAAOtE,EAAQzP,KAAK0S,eAAgBP,EAAaE,SAAUF,EAAa1C,MAAOzP,KAAKI,MACvG,EA/mCA,qC,gDAAkC,aAClC,sC,gDAA0C,IAAU6M,WAAWC,OAAO,CAACqE,EAAStK,a,gIC5I1E,MAAM+U,UAAgD,IAA7D,c,oBASC,yC,gDAA+B,IAC/B,iC,gDAAuB,IAOvB,qC,gDAA+B,KAC/B,2C,wDAqlBD,CA3lBQ,SAAA1a,GACNtB,KAAKic,YAAY/b,KAAK,QACtBmB,MAAMC,WACP,CAMO,SAAA4a,GACN,OAAIlc,KAAKmc,aACDnc,KAAKmc,aAENnc,KAAKoc,MACb,CAEU,YAAAjD,CAAaxB,EAAczS,GACpC,IAAKA,EAAOrE,IAAI,gBAAiB,CAChC,MAAMwb,EAAQrc,KAAKkc,YACbzB,EAAS,iBAAsB4B,GAAQzN,GAAM,KAAeA,EAAG+I,KAChE8C,EAAO6B,OACX,cAAmBD,EAAO5B,EAAOjF,MAAOmC,E,CAG3C,CAEO,eAAA4E,GACN,IAAKvc,KAAKmc,aAAc,CACvB,MAAME,EAAQrc,KAAKoc,OACnBC,EAAMnN,OAAS,EAEf,OAAYlP,KAAKkF,QAASA,IACzB,IAAIwO,EAAQ,SACRxO,EAAOrE,IAAI,UAAYb,OAC1B0T,EAAQ,UAET,OAAYxO,EAAOsF,WAAYzI,IAC9B,IAAIM,EAAQN,EAASlB,IAAI6S,GACrB,WAAerR,IACdN,EAASsX,MACZrZ,KAAKmZ,aAAapX,EAASsX,KAAM3F,GAAQxO,E,GAG1C,IAGH,MAAMsX,EAAWxc,KAAKa,IAAI,WAAY,GAChC4b,EAAWzc,KAAKa,IAAI,WAAY,GAEtC,IAAI6b,EAAML,EAAMnN,OAEhB,MAAMiD,EAAenS,KAAKmE,WAAW,gBAC/BwY,EAAYxK,EAAa1C,MACzB4C,EAAWF,EAAaE,SAE9B,GAAImK,EAAW,EAAG,CACjB,MAAMI,EAAQF,EAAMF,EACpB,IAAIzI,EAAOsI,EAAMK,EAAM,GACvB,GAAI,WAAe3I,GAClB,IAAK,IAAI8C,EAAI6F,EAAM,EAAG7F,EAAI6F,EAAME,EAAO/F,IACtC9C,GAAQ,cAAkB1B,EAAUsK,EAAY3c,KAAKyW,MAAMpE,IAE3D0B,EAAO,OAAWA,EAAM1B,EAAUsK,EAAW3c,KAAKI,OAClDic,EAAMnc,KAAK6T,E,CAKd,GAAI0I,EAAW,EAAG,CACjB,MAAMG,EAAQF,EAAMD,EACpB,IAAI1I,EAAOsI,EAAM,GACjB,GAAI,WAAetI,GAClB,IAAK,IAAI8C,EAAI,EAAGA,EAAI+F,EAAO/F,IAC1B9C,GAAQ,cAAkB1B,EAAUsK,GAEpC5I,EAAO,OAAWA,EAAM1B,EAAUsK,EAAW3c,KAAKI,OAClDic,EAAMQ,QAAQ9I,E,EAKnB,CAQO,eAAAgG,CAAgB1X,GACtB,MAAMga,EAAQrc,KAAKkc,YACbY,EAAgB9c,KAAKa,IAAI,gBAAiB,GAC1Ckc,EAAc/c,KAAKa,IAAI,cAAe,GACtC6b,EAAML,EAAMnN,OAAS4N,GAAiB,EAAIC,GAC1CtC,EAAS,iBAAsB4B,GAAQzN,GAAM,KAAeA,EAAGvM,KACrE,IAAImT,EAAQiF,EAAOjF,MAEnB,GAAIiF,EAAO6B,MACV,OAAQ9G,EAAQsH,GAAiBJ,EAE7B,CACAlH,EAAQ,IACXA,GAAS,GAGV,IAAIwH,EAAYX,EAAM7G,GACtB,MAAMyH,EAAWZ,EAAM7G,EAAQ,GAC/B,GAAGyH,EAAS,CACX,IAAIC,EAAgBD,EAEhBjZ,KAAKqQ,IAAI6I,EAAgB7a,GAAS2B,KAAKqQ,IAAI2I,EAAY3a,KAC1D2a,EAAYE,EACZ1H,I,CAgBF,OAAQA,EAAQsH,GAAiBJ,GAFzBra,EAAQ2a,GAE2Bhd,KAAK0S,eAAiBgK,C,CAEnE,CAQO,YAAAS,CAAa9a,GACnB,MAAMga,EAAQrc,KAAKkc,YAEbzB,EAAS,iBAAsB4B,GAAQzN,GAAM,KAAeA,EAAGvM,KACrE,IAAImT,EAAQiF,EAAOjF,MAEnB,OAAIiF,EAAO6B,OAIN9G,EAAQ,IACXA,GAAS,GAJHA,CAQT,CASO,eAAAoD,CAAgBpY,GACtB,MAAMsc,EAAgB9c,KAAKa,IAAI,gBAAiB,GAC1Ckc,EAAc/c,KAAKa,IAAI,cAAe,GACtCwb,EAAQrc,KAAKkc,YACnB,IAAIQ,EAAM1Y,KAAK4N,MAAMyK,EAAMnN,OAAS4N,GAAiB,EAAIC,IACrDvH,EAAQhV,EAAWkc,EACnBU,EAASpZ,KAAKqZ,MAAM7H,GASxB,OARI4H,EAAS,IACZA,EAAS,GAGNA,EAASV,EAAM,IAClBU,EAASV,EAAM,GAGTL,EAAMe,IAAW5H,EAAQ4H,EAASN,GAAiB9c,KAAK0S,cAChE,CAEU,cAAAf,GACT3R,KAAKwL,cAAc,gBAAiBxL,KAAKkc,YAAYhN,OAASlP,KAAKa,IAAI,gBAAiB,IAAM,EAAIb,KAAKa,IAAI,cAAe,IAC3H,CAYO,WAAAma,CAAYzX,EAAaC,EAAWC,GAC1C,MAAM4Y,EAAQrc,KAAKkc,YACbQ,EAAML,EAAMnN,OAClB,IAAIuL,EAAS,iBAAsB4B,GAAQzN,GAAM,KAAeA,EAAGrL,EAAM2X,aAErEoC,EAAajB,EAAMrY,KAAKC,IAAIwW,EAAOjF,MAAOkH,EAAM,IAEpDjC,EAAS,iBAAsB4B,GAAQzN,GAAM,KAAeA,EAAGpL,EAAI0X,aACnE,IAAIxD,EAAW2E,EAAM5B,EAAOjF,OAExBiF,EAAOjF,OAASkH,IACnBhF,EAAW2E,EAAMK,EAAM,GAAK1c,KAAK0S,gBAGlC1S,KAAKib,aAAaqC,EAAY5F,EAAUjU,EACzC,CAWO,YAAAwX,CAAa1X,EAAeC,EAAaC,GAC/C,MAAMQ,EAAMjE,KAAKmE,WAAW,MAAO,GAC7B4N,EAAM/R,KAAKmE,WAAW,MAAO,GACnCZ,EAAQ,aAAiBA,EAAOU,EAAK8N,GACrCvO,EAAM,aAAiBA,EAAKS,EAAK8N,GACjC/R,KAAKsD,KAAKtD,KAAK+Z,gBAAgBxW,GAAQvD,KAAK+Z,gBAAgBvW,GAAMC,EACnE,CAGU,iBAAAmT,GACT,IAAIoC,EAAYhZ,KAAKmE,WAAW,eAAgB,GAC5C8U,EAAUjZ,KAAKmE,WAAW,eAAgB,GAE9C,GAAI,WAAe6U,IAAc,WAAeC,GAAU,CAErDjZ,KAAKud,qBACRvd,KAAKud,oBAAqB,EAC1Bvd,KAAKuc,mBAGN,MAAMjO,EAAOtO,KAAKI,MACZ4W,EAAM1I,EAAK0I,IACXC,EAAW3I,EAAK2I,SAChBoF,EAAQrc,KAAKkc,YACb5Z,EAAWtC,KAAKa,IAAI,YACpB6b,EAAML,EAAMnN,OACZwD,EAAe1S,KAAK0S,eAE1B,IAAI6C,EAAavV,KAAKmd,aAAanE,GAC/BzD,EAAa,GAChBA,IAGD,IAAIE,EAAWzV,KAAKmd,aAAalE,GAC7BxD,EAAWiH,EAAM,GACpBjH,IAED,IAAI+H,EAAWlb,EAASsE,aAAe5C,KAAK+N,IAAIzP,EAASzB,IAAI,mBAAqB,EAAI4c,OAAOC,kBACzFC,EAAY3Z,KAAKC,IAAIyY,EAAK1Y,KAAKoG,MAAMqL,EAAWF,GAAciI,IAClEG,EAAY3Z,KAAK+N,IAAI,EAAG4L,GAExBpI,EAAavR,KAAKqZ,MAAM9H,EAAaoI,GAAaA,EAElD3d,KAAK4d,WAAaD,EAElB,OAAY3d,KAAKwK,WAAYzI,IAC5B/B,KAAKuI,gBAAgBxG,GAAU,EAAM,IAGtC,OAAY/B,KAAKsY,gBAAiBvW,IACjC/B,KAAKuI,gBAAgBxG,GAAU,EAAM,IAGtC,IAAI8b,EAAgB5E,EAAUD,IAAeC,EAAUD,GAAatG,GAAgB+C,EAAWF,IAAe7C,EAG1GoE,EAAe,iBAAqB,EAAG+G,EAAcL,EAAUxd,KAAKa,IAAI,kBAE5E,MAAMsR,EAAenS,KAAKmE,WAAW,gBACrC,IAAI0P,EAAmB,sBAA0BiD,GAE7CjD,EAAmBnB,IACtBoE,EAAe,OAAH,UAAQ3E,GACpB0B,EAAmB,sBAA0BiD,IAG9C9W,KAAKsW,kBAAoBzC,EAEzB,MAAMxB,EAAWyE,EAAazE,SACxB+E,EAAUpX,KAAKa,IAAI,eAEzB,IAAI8S,EAAYiE,KAAKkG,MAEjBzB,EAAM,KACT1I,EAAY0I,EAAM,IAInB,IAAIha,EAAQ,OAAWrC,KAAKmE,WAAW,eAAgB,GAAIkO,EAAUyE,EAAarH,MAAOnB,EAAMqF,GAE/F,MAAM0D,EAAqB/U,EAASzB,IAAI,sBAClCyW,EAAmBhV,EAASzB,IAAI,mBAAoBwW,GAE1D,IAAIV,EAEAoH,EADAxG,EAAgB,EAGhBD,IACHX,EAAoB3W,KAAK0W,kBAAkBI,GAC3CS,EAAgB,sBAA0BZ,IAI3C,IAAIqH,EAA+Bhe,KAAKie,YAAY5b,EAAOrC,KAAKmE,WAAW,eAAgB9B,GAASwR,EAAkBiD,EAAc9W,KAAKmE,WAAW,MAAO9B,IAC3J,GAAI2b,EAAc9O,OAAS,EAAG,CAC7B,IAAI2H,EAAI,EACR7W,KAAKke,GAAK,EACV,IAAI/G,EAAgB9U,EAA2B,GAAnBwR,EAC5B,MAAMkD,EAAe,cAAkB1E,GAGvC,GAAIsE,EAAmB,CACtB,IAAIgE,EAAQ0B,EAAM2B,EAAc,IAChChe,KAAKme,cAAcxD,EAAQ9G,EAAkB8G,EAAOpD,EAAeZ,E,CAGpE,IAAIyH,EAAc9b,EAASsE,aAAetE,EAAS6T,YAAc,GAEjE,OAAY6H,GAAgBxI,I,MAC3B,IAAIzT,EACA/B,KAAKwK,UAAU0E,OAAS2H,EAAI,GAC/B9U,EAAW,IAAI,IAAoC/B,UAAM2C,EAAW,CAAC,GACrE3C,KAAKwX,WAAWtX,KAAK6B,GACrB/B,KAAKyX,gBAAgB1V,IAGrBA,EAAW/B,KAAKwK,UAAUqM,GAG3B,IAAIxU,EAAQga,EAAM7G,GACdmC,EAAO,IAAIC,KAAKvV,GAEhBqV,EAAWrV,EACXwU,EAAImH,EAAc9O,OAAS,EAC9BwI,EAAW2E,EAAM2B,EAAcnH,EAAI,IAGnCa,GAAY7D,EAEb9R,EAASqD,OAAO,QAAS/C,GACzBN,EAASqD,OAAO,WAAYsS,GAC5B3V,EAASqD,OAAO,QAASyR,GACzB9U,EAASqD,OAAO,qBAAiBzC,GAEjC,IAAIuU,EAASE,EAAQ/E,GACjB0E,GAAgB/W,KAAKa,IAAI,mBAAqB,WAAesW,IAChD,QAAZ9E,GACC,cAAkBhQ,EAAO8U,EAAeJ,EAAcC,EAAKC,KAC9DC,EAASlX,KAAKa,IAAI,2BAA4BwR,IAKjDrS,KAAKqF,cAActD,EAAU,IAE7B,MAAMqF,EAAQrF,EAASlB,IAAI,SACvBuG,GACHA,EAAMpC,IAAI,OAAQsJ,EAAKuJ,cAAcX,OAAOS,EAAMT,IAGnDlX,KAAKuI,gBAAgBxG,GAAU,GAE/B,IAAI0N,EAAQqH,EAAarH,MAOzB,GAJgB,QAAZ4C,GACHtQ,EAASqD,OAAO,gBAAiB/C,GAG9BiV,EAAkB,CACrB,IAAI+G,EAAYvH,EAAazE,SAK7B,GAJiB,QAAbgM,IACHA,EAAY,OAGT5O,EAAQ,GAA8B,QAAzBqH,EAAazE,SAAoB,CAEjD,IAAIyF,EAAgB,OAAWzV,EAAOgc,EAAW,EAAG/P,GAAQ,cAAkB+P,EAAWre,KAAKyW,MAAM4H,IAChG7I,EAAQxV,KAAKmd,aAAarF,GAE9B,GADAA,EAAgBuE,EAAM7G,GAClBsC,GAAiBzV,EAAO,CAC3B,IAAIic,EAAOjC,EAAM7G,EAAQ,GACrB8I,EACHxG,EAAgBwG,EAGhBxG,GAAiBP,C,CAInBxV,EAASqD,OAAO,gBAAiB0S,E,CAElCrI,EAAQ,C,CAKT,GAFAzP,KAAKuF,iBAAiBxD,EAAU0N,GAE5BrI,GAAS2W,GACyB,KAAjCzb,EAAS6B,WAAW,UAAkB,CACzC,IAAIoa,EAAgBR,EAAiBld,IAAI,SACzC,GAAI0d,GACKnX,EAAMwH,IACE2P,EAAc3P,IAEVwP,EAAa,CAChC,IAAII,EAAQxe,KAAKye,WAAWV,EAAkBhc,EAAU+U,GACpD0H,IACe,QAAlB,EAAAA,EAAM3d,IAAI,gBAAQ,SAAEU,WAAW,WAAW,G,EAW3CoV,GACH3W,KAAKme,cAAc9b,EAAOqV,EAAUH,EAAeZ,GAGpDE,IAEIzP,GAASA,EAAMjD,WAAW,aAC7B4Z,EAAmBhc,GAEpBoV,EAAgB9U,CAAK,G,CAIvB,OAAYrC,KAAKkF,QAASA,IACrBA,EAAOwT,QACVxT,EAAOyT,gB,IAKV3Y,KAAK8J,cACN,CAEU,UAAA2U,CAAWC,EAA+CC,EAA+ClN,GAClH,MAAMY,EAAWZ,EAASY,SAEpBuM,EAASF,EAAU7d,IAAI,QAAS,GAChCge,EAASF,EAAU9d,IAAI,QAAS,GAEtC,MAAgB,QAAZwR,GACC,IAAIuF,KAAKgH,GAAQE,WAAa,IAAIlH,KAAKiH,GAAQC,UAC3CJ,EAIFC,CACR,CAEU,aAAAR,CAAcb,EAAoB5F,EAAkBH,EAAuBT,GACpF,MAAMsB,EAAepY,KAAKa,IAAI,mBAAoBb,KAAKa,IAAI,gBACrDke,EAAYjI,EAAazE,SAC/B,IAAIhQ,EAAQib,EAAa,cAAkByB,EAAW/e,KAAKyW,MAAMsI,IAEjE1c,EAAQ,OAAWA,EAAO0c,EAAW,EAAG/e,KAAKI,OAE7C,IAAI4e,EAAWtH,EAA2B,GAAhBH,EAEtB0H,EAAoCjf,KAAKie,YAAY5b,EAAO2c,EAAUlI,EAAczU,GACxF,MAAMga,EAAQrc,KAAKkc,YAEnB,OAAY+C,GAAqBzJ,IAChC,IAAI6C,EACArY,KAAKsY,eAAepJ,OAASlP,KAAKke,GAAK,GAC1C7F,EAAgB,IAAI,IAAoCrY,UAAM2C,EAAW,CAAC,GAC1E3C,KAAKsY,eAAepY,KAAKmY,GACzBrY,KAAKyX,gBAAgBY,IAGrBA,EAAgBrY,KAAKsY,eAAetY,KAAKke,IAG1C7b,EAAQga,EAAM7G,GACd6C,EAAcjT,OAAO,QAAS/C,GAC9BgW,EAAcjT,OAAO,WAAY/C,EAAQkV,GACzCc,EAAcjT,OAAO,QAASoQ,GAE9BxV,KAAKqF,cAAcgT,EAAe,CAAC,UAAU,GAE7C,MAAMjR,EAAQiR,EAAcxX,IAAI,SAChC,GAAIuG,EACH,GAAIpH,KAAKa,IAAI,YAAYA,IAAI,sBAAuB,CACnD,IAAI8W,EAAO,IAAIC,KAAKvV,GAChB6U,EAASkB,EAAa2G,GAC1B3X,EAAMpC,IAAI,OAAQhF,KAAKI,MAAMyX,cAAcX,OAAOS,EAAMT,G,MAGxD9P,EAAM7F,WAAW,WAAW,GAI9BvB,KAAKuI,gBAAgB8P,GAAe,GACpCrY,KAAKuF,iBAAiB8S,EAAe,GACrCrY,KAAKke,IAAI,GAEX,CAGU,WAAAD,CAAY5b,EAAe2c,EAAkBvN,EAAyByN,GAC/E,MAAMC,EAAuB,GACvB9M,EAAWZ,EAASY,SACpB5C,EAAQgC,EAAShC,MACjBwI,EAAMjY,KAAKyW,MAAMpE,GAEjBF,EAAenS,KAAKmE,WAAW,gBAE/BmK,EAAOtO,KAAKI,MACZic,EAAQrc,KAAKkc,YAEnB,IAAIkD,EAAI3P,EAAQ,EACZ0H,GAAgB,IAEhB1T,EAAW,cAAkB4O,EAAU4F,GACvCoH,EAAe,cAAkBhN,EAAU5C,EAAQwI,GACnDqH,EAAgBjd,EAMpB,IAJgB,OAAZgQ,IACHhQ,EAAQ6c,GAGF7c,GAAS2c,GAAU,CAEzB3c,EAAQ,OAAWA,EAAOgQ,EAAU5C,EAAOnB,GAE3C,IAAIkH,EAAQxV,KAAKmd,aAAa9a,GAC1Bkd,EAAYlD,EAAM7G,GAEtB,GAAgB,OAAZnD,GAA8C,OAAzBF,EAAaE,SACjCrS,KAAKwf,SAASnd,IACjB+c,IAGGA,GAAK3P,IACJpN,GAASid,EAA+B,EAAfD,GAC5B,OAAYF,EAAO3J,GAEpB4J,EAAI,GAEL/c,GAASoB,EAETpB,EAAQ,OAAWA,EAAOgQ,EAAU,EAAG/D,OAEnC,CACJ,GAAIiR,EAAYld,EACf,IAAK,IAAIwU,EAAIrB,EAAOkH,EAAML,EAAMnN,OAAQ2H,EAAI6F,EAAK7F,IAEhD,GADA0I,EAAYlD,EAAMxF,GACd0I,GAAald,EAAO,CACvBmT,EAAQqB,EACR,K,CAKH,OAAYsI,EAAO3J,GAEnBnT,GAASgd,EAEThd,EAAQ,OAAWA,EAAOgQ,EAAU5C,EAAOnB,E,CAQ5C,GALIjM,GAAS8U,IACZ9U,GAASgd,EAAe5b,EAExBpB,EAAQ,OAAWA,EAAOgQ,EAAU5C,EAAOnB,IAExCjM,GAAS8U,EACZ,MAGDA,EAAgB9U,C,CAGjB,OAAO8c,CACR,CAEU,QAAAK,CAASzL,GAKlB,OAJe,iBAAsB/T,KAAKkc,aAAcvE,GAChD,KAAqBA,EAAM5D,KAGrBuI,KACf,CACU,SAAAP,CAAUhI,EAActE,EAAegQ,GAChD,IAAIjK,EAAQ,aAAiBxV,KAAKmd,aAAapJ,GAAQtE,EAAO,EAAGzP,KAAKoc,OAAOlN,OAAS,GACtF,OAAOlP,KAAKoc,OAAO5G,EACpB,EArmBA,qC,gDAAkC,oBAClC,sC,gDAA0C,IAASvI,WAAWC,OAAO,CAAC8O,EAAgB/U,a,gICwShF,MAAMyY,UAA0C,IAAvD,c,oBASC,6C,iDAAoC,IACpC,sD,iDAA6C,IAC7C,0C,iDAAwB,IACxB,2C,gDAAiC,IACjC,uC,yDACA,uC,yDAEA,0C,yDAEA,yC,gDAA+B,IAC/B,sC,yDACA,8C,gDAAoC,GAk/CrC,CA9+CQ,iBAAA5Z,GACN9F,KAAK2f,gBAAiB,EACtB3f,KAAK4f,WACN,CAKO,0BAAA7Z,GACN/F,KAAK6f,yBAA0B,EAC/B7f,KAAK4f,WACN,CAEU,SAAAte,GACTtB,KAAKoL,UAAU3K,UAAY,YAAiBT,KAAKoL,UAAU3K,UAAW,CAAC,SACvET,KAAKwL,cAAc,OAAQ,SAC3BxL,KAAKgH,OAAO,SACZ3F,MAAMC,WACP,CAEO,gBAAAgF,GAGN,GAFAjF,MAAMiF,mBAEFtG,KAAKuG,QAAQ,gBAAiB,CACbvG,KAAK8f,cAAcC,cAElC/f,KAAKggB,SACRhgB,KAAKggB,QAAQhf,UAGf,IAAI+e,EAAe/f,KAAKa,IAAI,gBACxBkf,IACH/f,KAAKggB,QAAU,IAAI,KAAc,CAChCD,EAAanY,UAAU,qBAAqB,KAC3C5H,KAAK6f,yBAA0B,CAAI,IAEpCE,EAAanY,UAAU,qBAAqB,KAC3C5H,KAAK6f,yBAA0B,CAAI,M,CAMvC,IAAII,GAAY,EAchB,IAbIjgB,KAAKuG,QAAQ,QAAUvG,KAAKuG,QAAQ,QAAUvG,KAAKuG,QAAQ,iBAAmBvG,KAAKuG,QAAQ,mBAC9F0Z,GAAY,EACZjgB,KAAKyC,WAAWuC,IAAI,OAAQ,MAIzBhF,KAAKqM,YAAcrM,KAAK2f,gBAAkB3f,KAAKkgB,cAAgBD,GAAajgB,KAAKmgB,eAAe,UAAYngB,KAAKmgB,eAAe,WAAangB,KAAKuG,QAAQ,aAAevG,KAAKuG,QAAQ,aAAevG,KAAKuG,QAAQ,gBAAkBvG,KAAKuG,QAAQ,gBAAkBvG,KAAKuG,QAAQ,cAAgBvG,KAAKuG,QAAQ,iBAAmBvG,KAAKuG,QAAQ,4BAChVvG,KAAKogB,aACLpgB,KAAK2f,gBAAiB,GAGvB3f,KAAKwZ,mBAEDxZ,KAAK6f,0BAA4B7f,KAAKqgB,YAAcrgB,KAAKa,IAAI,YAAY,GAAO,CACnF,MAAM4D,EAAQzE,KAAKyE,MACnB,IAAI6b,GAAQ,EAEZ,GAAI7b,EAAO,CACV,MAAM8b,EAASvgB,KAAKa,IAAI,YAAYsD,WAAW,UACjC,KAAVoc,EACH9b,EAAM+b,MAAMra,MAAM5D,IACK,aAAlBA,EAAK0E,YACRqZ,GAAQ,E,IAIQ,KAAVC,GACR9b,EAAMgc,MAAMta,MAAM5D,IACK,aAAlBA,EAAK0E,YACRqZ,GAAQ,E,IAMRA,GACHtgB,KAAK0gB,sBAEN1gB,KAAK6f,yBAA0B,C,CAGhC7f,KAAK8R,cAED9R,KAAKqM,YAAcrM,KAAKkgB,cAAgBlgB,KAAKuG,QAAQ,UAAYvG,KAAKuG,QAAQ,QAAUvG,KAAKmgB,eAAe,QAAUngB,KAAKmgB,eAAe,iBAAmBngB,KAAKmgB,eAAe,iBAAmBngB,KAAKmgB,eAAe,QAAUngB,KAAKmgB,eAAe,SAAWngB,KAAKmgB,eAAe,UAAYngB,KAAKmgB,eAAe,WAAangB,KAAKuG,QAAQ,kBAClVvG,KAAKiS,qBACLjS,KAAK4W,oBACL5W,KAAKiG,qBAGNjG,KAAK8Z,WAAa9Z,KAAK2gB,WAExB,CAEU,gBAAAnH,GACLxZ,KAAKqM,aAAerM,KAAK4gB,cAC5B5gB,KAAK6f,yBAA0B,EAC/B7f,KAAK4gB,aAAc,EAEhB5gB,KAAKmE,WAAW,sBAAwBnE,KAAKmE,WAAW,iBAAmBnE,KAAKmE,WAAW,sBAAwBnE,KAAKmE,WAAW,kBACrInE,KAAK6f,yBAA0B,GAGlC,CAEO,WAAAzT,GACN/K,MAAM+K,cACNpM,KAAK4gB,aAAc,CACpB,CAEU,UAAA9O,GAEV,CAEU,WAAA+O,CAAYxe,GACrB,MAAMye,EAAe9gB,KAAKa,IAAI,gBACxBkgB,EAAY/gB,KAAKghB,qBAEvB,IAAIzW,EAAO,GAQX,OALCA,EADGuW,EACIC,EAAU7J,OAAO7U,EAAOye,GAGxBC,EAAU7J,OAAO7U,OAAOM,EAAW3C,KAAKmE,WAAW,sBAEpDoG,CACR,CAEU,iBAAAqM,GACT,MAAM3S,EAAMjE,KAAKmE,WAAW,OACtB4N,EAAM/R,KAAKmE,WAAW,OAE5B,GAAI,WAAeF,IAAQ,WAAe8N,GAAM,CAE/C,MAAMkP,EAAcjhB,KAAKa,IAAI,eACvBwV,EAAOrW,KAAKmE,WAAW,QACvB2Q,EAAe9U,KAAKmE,WAAW,gBAC/B4Q,EAAe/U,KAAKmE,WAAW,gBAAmBkS,EAExD,IAAIhU,EAAQyS,EAAeuB,EACvB6K,EAAkB,EAClBC,EAAiBld,EAErB,GAAIgd,EAAa,CAGhB,GAFA5e,EAAQrC,KAAKohB,gBAET/e,EAAQyS,EACX,KAAOzS,EAAQyS,GACdzS,GAASgU,EAIX8K,EAAS9e,EAEL8e,GAAU,IACbA,EAAS,EACL9K,EAAO,IAET8K,EADG,WAAenhB,KAAKqhB,aACdrhB,KAAKqhB,YAGLrd,KAAKsd,IAAI,IAAK,MAK1BJ,EAAkBld,KAAKud,IAAIxM,EAAesB,GAAQrS,KAAKwd,OAASxd,KAAKud,IAAIJ,GAAUnd,KAAKwd,OAEpFN,EAAkB,IACrB7e,EAAQ2B,KAAKsd,IAAI,GAAItd,KAAKud,IAAIJ,GAAUnd,KAAKwd,OAAS,I,CAKxD,MAAMlf,EAAWtC,KAAKa,IAAI,YACpBwW,EAAqB/U,EAASzB,IAAI,sBAClCyW,EAAmBhV,EAASzB,IAAI,mBAAoBwW,GAE1D,IAAIoK,EAAYzd,KAAKsd,IAAI,GAAItd,KAAKqZ,MAAMrZ,KAAKud,IAAIvd,KAAKqQ,IAAIgC,IAASrS,KAAKwd,SAExE,MAAME,EAAe1d,KAAK4N,MAAMyE,EAAOoL,GAEvC,IAAIE,EAAiB,EAEjB,QAAYD,EAAe,EAAG,IAAM,GAAK,IAC5CC,EAAiB,GAGd,QAAYD,EAAe,GAAI,IAAM,GAAK,IAC7CC,EAAiB,IAGlB,IAAIC,EAAYvL,EAAOsL,EAGnB9K,EAAI,EACJjO,EAAI,EACJiZ,GAAW,IAEf,KAAOxf,EAAQ0S,GAAc,CAC5B,IAAIhT,EACA/B,KAAKwK,UAAU0E,OAAS2H,EAAI,GAC/B9U,EAAW,IAAI,IAAS/B,UAAM2C,EAAW,CAAC,GAC1C3C,KAAKwX,WAAWtX,KAAK6B,GACrB/B,KAAKyX,gBAAgB1V,IAGrBA,EAAW/B,KAAKwK,UAAUqM,GAG3B7W,KAAKqF,cAActD,EAAU,IAC7B/B,KAAKuI,gBAAgBxG,GAAU,GAE/BA,EAASqD,OAAO,QAAS/C,GACzB,MAAM+E,EAAQrF,EAASlB,IAAI,SACvBuG,GACHA,EAAMpC,IAAI,OAAQhF,KAAK6gB,YAAYxe,IAGpCrC,KAAKuF,iBAAiBxD,GAEtB,IAAI+f,EAAYzf,EAchB,GAbK4e,GAIAC,EAAkB,EACrBY,EAAY9d,KAAKsd,IAAI,GAAItd,KAAKud,IAAIJ,GAAUnd,KAAKwd,OAAS3K,EAAI,IAJ/DiL,GAAazL,EAYViB,EAAkB,CACrB,IAAIa,EAAa9V,EAAQuf,EAUzB,IARIX,IACCC,EAAkB,IAErBU,EADsB5hB,KAAKkW,cAAc7T,EAAOyf,EAAW,IAC/BzL,MAE7B8B,EAAa9V,EAAQuf,GAGfzJ,EAAa2J,EAAmB,MAAPzL,GAAsB,CACrD,IAAIgC,EACArY,KAAKsY,eAAepJ,OAAStG,EAAI,GACpCyP,EAAgB,IAAI,IAASrY,UAAM2C,EAAW,CAAC,GAC/C3C,KAAKsY,eAAepY,KAAKmY,GACzBrY,KAAKyX,gBAAgBY,IAGrBA,EAAgBrY,KAAKsY,eAAe1P,GAGrC5I,KAAKqF,cAAcgT,EAAe,CAAC,UAAU,GAC7CrY,KAAKuI,gBAAgB8P,GAAe,GACpCA,EAAcjT,OAAO,QAAS+S,GAE9B,MAAMK,EAAaH,EAAcxX,IAAI,SACjC2X,IACCnB,EACHmB,EAAWxT,IAAI,OAAQhF,KAAK6gB,YAAY1I,IAGxCK,EAAWjX,WAAW,WAAW,IAInCvB,KAAKuF,iBAAiB8S,GACtBF,GAAcyJ,EACdhZ,G,EAMF,GAFAvG,EAAQyf,EAEJD,GAAYxf,EACf,MAGD,IAAIof,EAAYzd,KAAKsd,IAAI,GAAItd,KAAKqZ,MAAMrZ,KAAKud,IAAIvd,KAAKqQ,IAAIgC,IAASrS,KAAKwd,SACxE,GAAIC,EAAY,IAAMR,EAAa,CAElC,IAAIc,EAAW/d,KAAK4N,MAAM5N,KAAKqQ,IAAIrQ,KAAKud,IAAIvd,KAAKqQ,IAAIoN,IAAczd,KAAKwd,SAAW,EAEnFnf,EAAQ,QAAYA,EAAO0f,E,CAE5BlL,IAEAgL,EAAWxf,C,CAGZ,IAAK,IAAIoW,EAAI5B,EAAG4B,EAAIzY,KAAKwK,UAAU0E,OAAQuJ,IAC1CzY,KAAKuI,gBAAgBvI,KAAKwK,UAAUiO,IAAI,GAGzC,IAAK,IAAIA,EAAI7P,EAAG6P,EAAIzY,KAAKsY,eAAepJ,OAAQuJ,IAC/CzY,KAAKuI,gBAAgBvI,KAAKsY,eAAeG,IAAI,GAG9C,OAAYzY,KAAKkF,QAASA,IACrBA,EAAOwT,QACVxT,EAAOyT,gB,IAIT3Y,KAAK8J,c,CAEP,CAGO,gBAAAvE,CAAiBxD,EAA+C0N,GACtE,IAAInN,EAAWtC,KAAKa,IAAI,YACpBwB,EAAQN,EAASlB,IAAI,SACrB6W,EAAW3V,EAASlB,IAAI,YAExBL,EAAWR,KAAK+Z,gBAAgB1X,GAEhCmN,EAAchP,EACdwhB,EAAkBhiB,KAAK+Z,gBAAgB1X,EAAQrC,KAAKmE,WAAW,SAE/D,WAAeuT,KAClBlI,EAAcxP,KAAK+Z,gBAAgBrC,GACnCsK,EAAkBxS,GAGfzN,EAASlB,IAAI,YACA,MAAZ6W,IACHsK,EAAkBxhB,GAIpB,IAAIyhB,EAAmBzS,EAEnBsI,EAAgB/V,EAASlB,IAAI,iBACZ,MAAjBiX,IACHmK,EAAmBjiB,KAAK+Z,gBAAgBjC,IAGzCxV,EAASoI,YAAY3I,EAASlB,IAAI,SAAUL,EAAUyhB,EAAkBxS,GAExE,MAAM/J,EAAO3D,EAASlB,IAAI,QAmB1B,GAlBAyB,EAASsN,WAAWlK,EAAMlF,EAAUgP,GAChC9J,IACCrD,GAASrC,KAAKa,IAAI,YAAa,IAClC6E,EAAKsB,OAAO,QACZtB,EAAKyB,gBAEGzB,EAAKwc,OAAO,UACpBxc,EAAKwI,UAAU,QACfxI,EAAKyB,iBAIP7E,EAASiN,WAAWxN,EAASlB,IAAI,QAASL,EAAUyhB,EAAkBxS,GACtEnN,EAAS4N,WAAWnO,EAASlB,IAAI,YAAaL,EAAUwhB,GAExDhiB,KAAKsJ,eAAevH,GACpBO,EAASuN,aAAa9N,EAASlB,IAAI,UAAWL,EAAUgP,IAEnDzN,EAASlB,IAAI,WAAY,CAC7B,MAAMshB,EAAWniB,KAAKa,IAAI,YACtBshB,GACHA,EAASpgB,E,CAGZ,CAGU,kBAAAkQ,GACT,IAAI6C,EAAuB9U,KAAK4Y,gBAAgB5Y,KAAKa,IAAI,QAAS,IAC9DkU,EAAuB/U,KAAK4Y,gBAAgB5Y,KAAKa,IAAI,MAAO,IAEhE,MAAMsV,EAAYnW,KAAKa,IAAI,YAAYsV,YACvC,IAAIiM,EAA0BpiB,KAAKkW,cAAcpB,EAAcC,EAAcoB,GAAW,GAEpFkM,EAAoB,gBAAqBD,EAAW/L,MACxDrW,KAAKwL,cAAc,oBAAqB6W,GAExCvN,EAAe,QAAYA,EAAcuN,GACzCtN,EAAe,QAAYA,EAAcsN,GAEzCD,EAAapiB,KAAKkW,cAAcpB,EAAcC,EAAcoB,GAAW,GAEvE,IAAIE,EAAO+L,EAAW/L,KACtBvB,EAAesN,EAAWne,IAC1B8Q,EAAeqN,EAAWrQ,IAEtB/R,KAAKmE,WAAW,kBAAoB2Q,GAAgB9U,KAAKmE,WAAW,kBAAoB4Q,GAAgB/U,KAAKmE,WAAW,UAAYkS,IAEvIrW,KAAKwL,cAAc,eAAgBsJ,GACnC9U,KAAKwL,cAAc,eAAgBuJ,GAEnC/U,KAAKwL,cAAc,OAAQ6K,GAE7B,CASO,eAAAuC,CAAgBpY,GACtB,MAAMyD,EAAMjE,KAAKmE,WAAW,OACtB4N,EAAM/R,KAAKmE,WAAW,OAE5B,OAAKnE,KAAKa,IAAI,eAINmD,KAAKsd,IAAItd,KAAKse,GAAI9hB,GAAawD,KAAKud,IAAIxP,GAAO/N,KAAKwd,OAASxd,KAAKud,IAAItd,GAAOD,KAAKwd,QAAWxd,KAAKud,IAAItd,GAAOD,KAAKwd,QAAUxd,KAAKwd,QAHjIhhB,GAAYuR,EAAM9N,GAAOA,CAKlC,CAQO,eAAA8V,CAAgB1X,GAEtB,MAAM4B,EAAMjE,KAAKmE,WAAW,OACtB4N,EAAM/R,KAAKmE,WAAW,OAE5B,GAAKnE,KAAKa,IAAI,eAGT,CACJ,GAAIwB,GAAS,EAAG,CACf,IAAIkgB,EAAcviB,KAAKa,IAAI,eACvB,WAAe0hB,KAClBlgB,EAAQkgB,E,CAGV,OAAQve,KAAKud,IAAIlf,GAAS2B,KAAKwd,OAASxd,KAAKud,IAAItd,GAAOD,KAAKwd,SAAYxd,KAAKud,IAAIxP,GAAO/N,KAAKwd,OAASxd,KAAKud,IAAItd,GAAOD,KAAKwd,O,CAT5H,OAAQnf,EAAQ4B,IAAQ8N,EAAM9N,EAWhC,CAKO,oBAAAue,CAAqBngB,GAE3B,MAAM4B,EAAMjE,KAAKmE,WAAW,YACtB4N,EAAM/R,KAAKmE,WAAW,YAE5B,GAAKnE,KAAKa,IAAI,eAGT,CACJ,GAAIwB,GAAS,EAAG,CACf,IAAIkgB,EAAcviB,KAAKa,IAAI,eACvB,WAAe0hB,KAClBlgB,EAAQkgB,E,CAGV,OAAQve,KAAKud,IAAIlf,GAAS2B,KAAKwd,OAASxd,KAAKud,IAAItd,GAAOD,KAAKwd,SAAYxd,KAAKud,IAAIxP,GAAO/N,KAAKwd,OAASxd,KAAKud,IAAItd,GAAOD,KAAKwd,O,CAT5H,OAAQnf,EAAQ4B,IAAQ8N,EAAM9N,EAWhC,CAUO,IAAAwe,CAAKpgB,EAAeqN,EAAkBiR,GAC5Cte,EAAQse,GAAate,EAAQse,GAAajR,EAE1C,MAAMlP,EAAWR,KAAK+Z,gBAAgB1X,GACtC,OAAOrC,KAAKoL,UAAU9I,SAASgN,qBAAqB9O,EACrD,CAUO,IAAAkiB,CAAKrgB,EAAeqN,EAAkBiR,GAC5Cte,EAAQse,GAAate,EAAQse,GAAajR,EAE1C,MAAMlP,EAAWR,KAAK+Z,gBAAgB1X,GACtC,OAAOrC,KAAKoL,UAAU9I,SAASgN,qBAAqB9O,EACrD,CAKO,sBAAAwZ,CAAuBjY,EAAuC2R,EAAeiP,EAAuBhJ,GAC1G,OAAO3Z,KAAKoL,UAAU9I,SAASgN,qBAAqBtP,KAAKyZ,qBAAqB1X,EAAU2R,EAAOiP,EAAehJ,GAC/G,CAKO,oBAAAF,CAAqB1X,EAAuC2R,EAAeiP,EAAuBhJ,GACxG,IAAItX,EAAQN,EAASlB,IAAI6S,GAWzB,OANCrR,EAHmBN,EAASlB,IAAI,gBAGxBwB,EAAQsX,EADD5X,EAASwX,UACcqJ,wBAAwB7gB,EAAU2R,GAGhE1T,KAAK8Z,YAAczX,EAAQrC,KAAK8Z,YAAcH,EAGhD3Z,KAAK+Z,gBAAgB1X,EAC7B,CAKO,sBAAA6X,CAAuBnY,EAAuC2R,EAAeiP,EAAuBhJ,GAC1G,OAAO3Z,KAAKoL,UAAU9I,SAASgN,qBAAqBtP,KAAKia,qBAAqBlY,EAAU2R,EAAOiP,EAAehJ,GAC/G,CAKO,oBAAAM,CAAqBlY,EAAuC2R,EAAeiP,EAAuBhJ,GACxG,IAAItX,EAAQN,EAASlB,IAAI6S,GAWzB,OANCrR,EAHmBN,EAASlB,IAAI,gBAGxBwB,EAAQsX,EADD5X,EAASwX,UACcsJ,wBAAwB9gB,EAAU2R,GAGhE1T,KAAK8Z,YAAczX,EAAQrC,KAAK8Z,YAAcH,EAGhD3Z,KAAK+Z,gBAAgB1X,EAC7B,CAOO,YAAAygB,GACN,OAAO9iB,KAAK+Z,gBAAgB/Z,KAAK2gB,YAClC,CAQO,SAAAA,GACN,MAAM1c,EAAMD,KAAKC,IAAIjE,KAAKmE,WAAW,YAAY,KAAYnE,KAAKmE,WAAW,gBAAgB,MACvF4N,EAAM/N,KAAK+N,IAAI/R,KAAKmE,WAAW,WAAYI,KAAWvE,KAAKmE,WAAW,eAAgBI,MAC5F,IAAIoc,EAAY3gB,KAAKa,IAAI,YAAa,GAUtC,OARI8f,EAAY1c,IACf0c,EAAY1c,GAGT0c,EAAY5O,IACf4O,EAAY5O,GAGN4O,CACR,CAKO,YAAAoC,CAAa1gB,GACnB,OAAOA,CACR,CAEU,YAAA2gB,CAAa3M,GAEtB,OAAI,EAAIA,IAAS,GAChBA,GAAQ,EACDrW,KAAKgjB,aAAa3M,IAEnBA,CACR,CAEU,OAAA0C,CAAQ9U,GACjB,OAAOA,CACR,CAEU,OAAAiV,CAAQnH,GACjB,OAAOA,CACR,CAEO,gBAAA/L,GACN,GAAIhG,KAAKa,IAAI,mBAAoB,CAChC,IAAIqE,EAASlF,KAAKkF,OAAO,GACzB,GAAIA,EAAQ,CACX,IAAIqQ,EAAarQ,EAAOqQ,aAExB,GAAIrQ,EAAOsF,UAAU0E,OAAS,EAAG,CAE5BqG,EAAa,GAChBA,IAED,IAKI7B,EACAuP,EANAxN,EAAWvQ,EAAOuQ,WAClBA,EAAWvQ,EAAOsF,UAAU0E,QAC/BuG,IAMGvQ,EAAOrE,IAAI,UAAYb,MAC1B0T,EAAQ,SACRuP,EAAK,OAEG/d,EAAOrE,IAAI,UAAYb,OAC/B0T,EAAQ,SACRuP,EAAK,OAGN,IAAIC,EAAexP,EAAQ,UAE3B,GAAIA,EACH,IAAK,IAAImD,EAAItB,EAAYsB,EAAIpB,EAAUoB,IAAK,CAC3C,IAAItD,EAAM,EACN4P,EAAQ,EAEZ,OAAYnjB,KAAKkF,QAASA,IACzB,IAAKA,EAAOrE,IAAI,oBAAqB,CACpC,IAAIkB,EAAWmD,EAAOsF,UAAUqM,GAChC,GAAI9U,EAAU,CACb,IAAIM,EAAQN,EAASlB,IAAIqiB,GAAuBhe,EAAOrE,IAAIoiB,GAEtD,QAAY5gB,KAChBkR,GAAOlR,EACP8gB,GAASnf,KAAKqQ,IAAIhS,G,MAMtB,OAAYrC,KAAKkF,QAASA,IACzB,IAAKA,EAAOrE,IAAI,oBAAqB,CACpC,IAAIkB,EAAWmD,EAAOsF,UAAUqM,GAChC,GAAI9U,EAAU,CACb,IAAIM,EAAQN,EAASlB,IAAIqiB,GAAuBhe,EAAOrE,IAAIoiB,GAEtD,QAAY5gB,KAChBN,EAASiD,IAAK0O,EAAQ,QAAiByP,GACvCphB,EAASiD,IAAK0O,EAAQ,MAAeH,GACrCxR,EAASiD,IAAK0O,EAAQ,eAAwBrR,EAAQ8gB,EAAQ,K,SAUxE,CAEU,mBAAAzC,GACT,MAAMzc,EAAMjE,KAAKmE,WAAW,YACtB4N,EAAM/R,KAAKmE,WAAW,YAEtBif,EAAapjB,KAAKa,IAAI,OACtBwiB,EAAarjB,KAAKa,IAAI,OAE5B,IAAI4b,EAAWzc,KAAKa,IAAI,WAAY,GAChC2b,EAAWxc,KAAKa,IAAI,WAAY,GAEhCb,KAAKa,IAAI,iBACgB,MAAxBb,KAAKa,IAAI,cACZ4b,EAAW,IAEgB,MAAxBzc,KAAKa,IAAI,cACZ2b,EAAW,KAIb,MAAMrG,EAAYnW,KAAKa,IAAI,YAAYsV,YACjCmN,EAAwBtjB,KAAKa,IAAI,yBACvC,IAAI0iB,EAAevjB,KAAKa,IAAI,gBAE5B,GAAI,WAAeoD,IAAQ,WAAe8N,GAAM,CAC/C,IAAI+C,EAAe/C,EACfgD,EAAe9Q,EAmGnB,GAjGA,OAAYjE,KAAKkF,QAASA,IACzB,IAAKA,EAAOrE,IAAI,gBAAiB,CAChC,IAAI2iB,EACAC,EACJ,MAAM1N,EAAiB7Q,EAAOf,WAAW,kBAEzC,GAAIe,EAAOrE,IAAI,WAAab,MAC3B,IAAK+V,EAAgB,CACpB,IAAI2N,EAAOxe,EAAOf,WAAW,QACzBwf,EAAOze,EAAOf,WAAW,QAGF,GAAvBe,EAAOqQ,cAAqBrQ,EAAOuQ,YAAcvQ,EAAOsF,UAAU0E,SACrEwU,OAAO/gB,EACPghB,OAAOhhB,GAGR6gB,EAAYte,EAAOf,WAAW,gBAAiBuf,GAC/CD,EAAYve,EAAOf,WAAW,gBAAiBwf,E,OAG5C,GAAIze,EAAOrE,IAAI,WAAab,OAC3B+V,EAAgB,CAEpB,IAAI6N,EAAO1e,EAAOf,WAAW,QACzB0f,EAAO3e,EAAOf,WAAW,QAGF,GAAvBe,EAAOqQ,cAAqBrQ,EAAOuQ,YAAcvQ,EAAOsF,UAAU0E,SACrE0U,OAAOjhB,EACPkhB,OAAOlhB,GAGR6gB,EAAYte,EAAOf,WAAW,gBAAiByf,GAC/CH,EAAYve,EAAOf,WAAW,gBAAiB0f,E,CAI5C3e,EAAO8E,YAAe9E,EAAO4e,cAC7B,WAAeN,KAClB1O,EAAe9Q,KAAKC,IAAI6Q,EAAc0O,IAGnC,WAAeC,KAClB1O,EAAe/Q,KAAK+N,IAAIgD,EAAc0O,I,KAM1CzjB,KAAKyB,WAAW0E,MAAM4d,IACrB,GAAIA,EAAMljB,IAAI,iBAAkB,CAC/B,IAAIwB,EAAQ0hB,EAAMljB,IAAI,SACT,MAATwB,IACHyS,EAAe9Q,KAAKC,IAAI6Q,EAAczS,GACtC0S,EAAe/Q,KAAK+N,IAAIgD,EAAc1S,IAEvCA,EAAQ0hB,EAAMljB,IAAI,YACL,MAATwB,IACHyS,EAAe9Q,KAAKC,IAAI6Q,EAAczS,GACtC0S,EAAe/Q,KAAK+N,IAAIgD,EAAc1S,G,KAKrCyS,EAAeC,KACjBD,EAAcC,GAAgB,CAACA,EAAcD,IAG3C,WAAesO,GAEjBtO,EADGyO,EACYH,EAGAnf,EAGRsf,GACJ,WAAevjB,KAAKgkB,YACvBlP,EAAe9U,KAAKgkB,UAIlB,WAAeX,GAEjBtO,EADGwO,EACYF,EAGAtR,EAGRwR,GACJ,WAAevjB,KAAKikB,YACvBlP,EAAe/U,KAAKikB,UAIlBnP,IAAiBC,EAAc,CAClC,IAAImP,EAAOpP,EAIX,GAHAA,GAAgB9U,KAAK8Y,aACrB/D,GAAgB/U,KAAK8Y,aAEjBhE,EAAe7Q,EAAK,CACvB,IAAI+L,EAAIkU,EAAOjgB,EACN,GAAL+L,IACHA,EAAIhQ,KAAK8Y,cAGVhE,EAAeoP,EAAOlU,EACtB+E,EAAemP,EAAOlU,EAEtBuT,GAAe,C,CAGhB,IAAIY,EAAcnkB,KAAKkW,cAAcpB,EAAcC,EAAcoB,EAAWoN,GAC5EzO,EAAeqP,EAAYlgB,IAC3B8Q,EAAeoP,EAAYpS,G,CAG5B,IAAIqS,EAAmBtP,EACnBuP,EAAmBtP,EAEnBtO,EAAQsO,EAAeD,EAE3BA,GAAgBrO,EAAQgW,EACxB1H,GAAgBtO,EAAQ+V,EAExB,IAAI4F,EAA0BpiB,KAAKkW,cAAcpB,EAAcC,EAAcoB,GAE7ErB,EAAesN,EAAWne,IAC1B8Q,EAAeqN,EAAWrQ,IAE1B+C,EAAe,aAAiBA,EAAc7Q,EAAK8N,GACnDgD,EAAe,aAAiBA,EAAc9Q,EAAK8N,GAGnDqQ,EAAapiB,KAAKkW,cAAcpB,EAAcC,EAAcoB,GAAW,GAElEoN,IACJzO,EAAesN,EAAWne,IAC1B8Q,EAAeqN,EAAWrQ,KAG3B,MAAMgO,EAAe/f,KAAKa,IAAI,gBA+B9B,GA9BIkf,IACHqC,EAAapiB,KAAKskB,UAAUxP,EAAcC,EAAcqN,EAAW/L,KAAM0J,EAAa5b,WAAW,oBAAqB4b,EAAa5b,WAAW,WAAY,IAAK4b,EAAa5b,WAAW,oBAAqB4b,EAAa5b,WAAW,WAAY,IAAK4b,EAAa5b,WAAW,qBAAsB4b,EAAa5b,WAAW,OAAQ,KAE/Tie,EAAWne,IAAMA,IACpBme,EAAWne,IAAMA,GAGdme,EAAWrQ,IAAMA,IACpBqQ,EAAWrQ,IAAMA,GAGlB+C,EAAesN,EAAWne,IAC1B8Q,EAAeqN,EAAWrQ,KAGvBwR,IACC,WAAeH,KAClBtO,EAAe9Q,KAAK+N,IAAI+C,EAAcsO,IAGnC,WAAeC,KAClBtO,EAAe/Q,KAAKC,IAAI8Q,EAAcsO,KAIpCC,IACHxO,EAAesP,GAAoBC,EAAmBD,GAAoB3H,EAC1E1H,EAAesP,GAAoBA,EAAmBD,GAAoB5H,GAGvE+G,EAAc,CAEhBzO,EADG,WAAesO,GACHA,EAGAgB,EAIfrP,EADG,WAAesO,GACHA,EAGAgB,EAGZtP,EAAeD,GAAgB,OAClCA,GAAgB9U,KAAK8Y,aACrB/D,GAAgB/U,KAAK8Y,cAGtB,IAAIrS,EAAQsO,EAAeD,EAE3BA,GAAgBrO,EAAQgW,EACxB1H,GAAgBtO,EAAQ+V,C,CAGrBxc,KAAKa,IAAI,iBAERiU,GAAgB,IACnBA,EAAesP,GAAoB,EAAIpgB,KAAKC,IAAIwY,EAAU,OAGvD3H,EAAe7Q,IAClB6Q,EAAe7Q,GAEZ8Q,EAAehD,IAClBgD,EAAehD,IAIjB,IAAI2K,EAAM1Y,KAAKC,IAAI,GAAID,KAAKoG,KAAKpG,KAAKud,IAAIvhB,KAAKmE,WAAW,gBAAiB,KAAO,GAAKH,KAAKugB,MAAQ,GAEhGhhB,EAAQ,QAAYvD,KAAKwiB,qBAAqB1N,GAAe4H,GAC7DlZ,EAAM,QAAYxD,KAAKwiB,qBAAqBzN,GAAe2H,GAE/D1c,KAAKwL,cAAc,oBAAqBsJ,GACxC9U,KAAKwL,cAAc,oBAAqBuJ,GACxC/U,KAAKwL,cAAc,qBAAsB4W,EAAW/L,MAEpDrW,KAAKsD,KAAKC,EAAOC,E,CAEnB,CAGU,UAAA4c,GACT,IAAIgD,EAAapjB,KAAKa,IAAI,OACtBwiB,EAAarjB,KAAKa,IAAI,OAEtBoD,EAAMM,IACNwN,GAAM,IAEN0K,EAAWzc,KAAKa,IAAI,WAAY,GAChC2b,EAAWxc,KAAKa,IAAI,WAAY,GAEhCb,KAAKa,IAAI,iBACgB,MAAxBb,KAAKa,IAAI,cACZ4b,EAAW,IAEgB,MAAxBzc,KAAKa,IAAI,cACZ2b,EAAW,KAIb,IAAIgI,EAAUjgB,IA+Cd,GA7CA,OAAYvE,KAAKkF,QAASA,IACzB,IAAKA,EAAOrE,IAAI,gBAAiB,CAChC,IAAI2iB,EACAC,EAUJ,GATIve,EAAOrE,IAAI,WAAab,MAC3BwjB,EAAYte,EAAOf,WAAW,QAC9Bsf,EAAYve,EAAOf,WAAW,SAEtBe,EAAOrE,IAAI,WAAab,OAChCwjB,EAAYte,EAAOf,WAAW,QAC9Bsf,EAAYve,EAAOf,WAAW,SAG3B,WAAeqf,IAAc,WAAeC,GAAY,CAC3Dxf,EAAMD,KAAKC,IAAIA,EAAKuf,GACpBzR,EAAM/N,KAAK+N,IAAIA,EAAK0R,GAEpB,IAAIgB,EAAOhB,EAAYD,EAEnBiB,GAAQ,IACXA,EAAOzgB,KAAKqQ,IAAIoP,EAAY,MAGzBgB,EAAOD,IACVA,EAAUC,E,MAMdzkB,KAAKyB,WAAW0E,MAAM4d,IACrB,GAAIA,EAAMljB,IAAI,iBAAkB,CAC/B,IAAIwB,EAAQ0hB,EAAMljB,IAAI,SACT,MAATwB,IACH4B,EAAMD,KAAKC,IAAIA,EAAK5B,GACpB0P,EAAM/N,KAAK+N,IAAIA,EAAK1P,IAErBA,EAAQ0hB,EAAMljB,IAAI,YACL,MAATwB,IACH4B,EAAMD,KAAKC,IAAIA,EAAK5B,GACpB0P,EAAM/N,KAAK+N,IAAIA,EAAK1P,G,KAKnBrC,KAAKa,IAAI,eAAgB,CAC5B,IAAI0hB,EAAcviB,KAAKa,IAAI,eACvB,WAAe0hB,IACdte,GAAO,IACVA,EAAMse,GAGJte,GAAO,GACV,IAAI7B,MAAM,mD,CAiBZ,GAbY,IAAR6B,GAAqB,IAAR8N,IAChBA,EAAM,GACN9N,GAAO,IAGJ,WAAemf,KAClBnf,EAAMmf,GAEH,WAAeC,KAClBtR,EAAMsR,GAIHpf,IAAQM,KAAYwN,KAAQ,IAG/B,OAFA/R,KAAKuB,WAAW,gBAAYoB,QAC5B3C,KAAKuB,WAAW,gBAAYoB,GAIzBsB,EAAM8N,KACR9N,EAAK8N,GAAO,CAACA,EAAK9N,IAGpB,MAAMygB,EAAazgB,EACb0gB,EAAa5S,EAGnB,IAAI6S,EAAa5kB,KAAK4C,SAASiiB,KAAK,MAAO5gB,GACvC6gB,EAAa9kB,KAAK4C,SAASiiB,KAAK,MAAO9S,GAE3C/R,KAAKqhB,YAAcpd,EAEf,WAAe2gB,KAClB3gB,EAAM2gB,GAGH,WAAeE,KAClB/S,EAAM+S,GAIP7gB,EAAMjE,KAAK+Y,QAAQ9U,GACnB8N,EAAM/R,KAAKkZ,QAAQnH,GAGfA,EAAM9N,GAAO,EAAID,KAAKsd,IAAI,GAAI,MAC7BvP,EAAM9N,GAAQ,EACjBjE,KAAK8Y,cAAgB/G,EAAM9N,GAAO,EAGlCjE,KAAK6Y,UAAU9G,GAGhB9N,GAAOjE,KAAK8Y,aACZ/G,GAAO/R,KAAK8Y,cAIb7U,IAAQ8N,EAAM9N,GAAOwY,EACrB1K,IAAQA,EAAM9N,GAAOuY,EAEjBxc,KAAKa,IAAI,iBAERoD,EAAM,GAAKygB,GAAc,IAC5BzgB,EAAM,GAGH8N,EAAM,GAAK4S,GAAc,IAC5B5S,EAAM,IAIR/R,KAAKgkB,SAAW/f,EAChBjE,KAAKikB,SAAWlS,EAEhB,IAAIwR,EAAevjB,KAAKa,IAAI,gBACxBkkB,EAAwB/kB,KAAKa,IAAI,yBAAyB,GAC1DkkB,IACHxB,EAAewB,GAGhB,IAAIC,EAASzB,EACT,WAAeF,KAClB2B,GAAS,GAGV,IAAI7O,EAAYnW,KAAKa,IAAI,YAAYsV,YAEjCiM,EAA0BpiB,KAAKkW,cAAcjS,EAAK8N,EAAKoE,EAAW6O,GAYtE,GAVA/gB,EAAMme,EAAWne,IACjB8N,EAAMqQ,EAAWrQ,IAGjBqQ,EAAapiB,KAAKkW,cAAcjS,EAAK8N,EAAKoE,GAAW,GAErDlS,EAAMme,EAAWne,IACjB8N,EAAMqQ,EAAWrQ,IAGbwR,EAAc,CAEhBtf,EADG,WAAemf,GACZA,EAGApjB,KAAKgkB,SAIXjS,EADG,WAAesR,GACZA,EAGArjB,KAAKikB,SAGRlS,EAAM9N,GAAO,OAChBA,GAAOjE,KAAK8Y,aACZ/G,GAAO/R,KAAK8Y,cAGb,IAAIrS,EAAQsL,EAAM9N,EAClBA,GAAOwC,EAAQgW,EACf1K,GAAOtL,EAAQ+V,C,CAGhBoI,EAAa5kB,KAAK4C,SAASiiB,KAAK,MAAO5gB,GACvC6gB,EAAa9kB,KAAK4C,SAASiiB,KAAK,MAAO9S,GAEnC,WAAe6S,KAClB3gB,EAAM2gB,GAGH,WAAeE,KAClB/S,EAAM+S,GAGHN,GAAWjgB,MACdigB,EAAWzS,EAAM9N,GAIlB,IAAI8d,EAAW/d,KAAK4N,MAAM5N,KAAKqQ,IAAIrQ,KAAKud,IAAIvd,KAAKqQ,IAAItC,EAAM9N,IAAQD,KAAKwd,SAAW,EAEnFvd,EAAM,QAAYA,EAAK8d,GACvBhQ,EAAM,QAAYA,EAAKgQ,GAIvB,MAAMhC,EAAe/f,KAAKa,IAAI,gBAuB9B,GAtBIkf,IACHqC,EAAapiB,KAAKskB,UAAUrgB,EAAK8N,EAAKqQ,EAAW/L,KAAM0J,EAAa5b,WAAW,WAAY4b,EAAa5b,WAAW,MAAO,IAAK4b,EAAa5b,WAAW,WAAY4b,EAAa5b,WAAW,MAAO,IAAK4b,EAAa5b,WAAW,OAAQ,IACvOF,EAAMme,EAAWne,IACjB8N,EAAMqQ,EAAWrQ,KAIlB/R,KAAKwL,cAAc,gBAAiBxH,KAAK+N,IAAI,EAAG/N,KAAKoG,MAAM2H,EAAM9N,GAAOugB,EAAUxkB,KAAKa,IAAI,gBAAiB,QAC5Gb,KAAK2R,iBAED3R,KAAKa,IAAI,iBACZb,KAAKohB,gBAAkBnd,EACvBA,EAAMjE,KAAKgkB,SACXjS,EAAM/R,KAAKikB,SAEPhgB,GAAO,IACVA,EAAMygB,GAAc,EAAI1gB,KAAKC,IAAIwY,EAAU,QAMzC,WAAexY,IAAQ,WAAe8N,KACrC/R,KAAKmE,WAAW,cAAgBF,GAAOjE,KAAKmE,WAAW,cAAgB4N,GAAK,CAE/E/R,KAAKuB,WAAW,WAAY0C,GAC5BjE,KAAKuB,WAAW,WAAYwQ,GAC5B/R,KAAKuW,YAAYtS,EAAK8N,GAEtB,MAAMtO,EAAWzD,KAAKa,IAAI,wBAAyB,GAC7CgE,EAAS7E,KAAKa,IAAI,uBAExBb,KAAKilB,eAAe,CAAElgB,IAAK,MAAOH,GAAIX,EAAKR,WAAUoB,WACrD7E,KAAKilB,eAAe,CAAElgB,IAAK,MAAOH,GAAImN,EAAKtO,WAAUoB,U,CAGxD,CAEU,cAAA8M,GACV,CAEU,SAAAkH,CAAU9G,GAEnB,IAAImT,EAAmBlhB,KAAKud,IAAIvd,KAAKqQ,IAAItC,IAAQ/N,KAAKwd,OAGlD2D,EAAQnhB,KAAKsd,IAAI,GAAItd,KAAKqZ,MAAM6H,IAGpCC,GAAgB,GAEhBnlB,KAAK8Y,aAAeqM,CACrB,CAEU,WAAA5O,CAAY6O,EAAcC,GAEpC,CAGU,aAAAnP,CAAcjS,EAAa8N,EAAaoE,EAAmBmP,GAEhEnP,GAAa,IAChBA,EAAY,GAGbA,EAAYnS,KAAK4N,MAAMuE,GAEvB,IAAIuO,EAAqBzgB,EACrB0gB,EAAqB5S,EAErBwT,EAAaxT,EAAM9N,EAGJ,IAAfshB,IACHA,EAAavhB,KAAKqQ,IAAItC,IAIvB,IAAImT,EAAmBlhB,KAAKud,IAAIvd,KAAKqQ,IAAIkR,IAAevhB,KAAKwd,OAGzD2D,EAAQnhB,KAAKsd,IAAI,GAAItd,KAAKqZ,MAAM6H,IAGpCC,GAAgB,GAEhB,IAAIvI,EAAgBuI,EAChBG,IACH1I,EAAQ,GAIL0I,GACHrhB,EAAMD,KAAKqZ,MAAMpZ,EAAMkhB,GAASA,EAEhCpT,EAAM/N,KAAKoG,KAAK2H,EAAMoT,GAASA,IAG/BlhB,EAAMD,KAAKoG,KAAKnG,EAAMkhB,GAASA,EAAQvI,EAEvC7K,EAAM/N,KAAKqZ,MAAMtL,EAAMoT,GAASA,EAAQvI,GAIrC3Y,EAAM,GAAKygB,GAAc,IAC5BzgB,EAAM,GAGH8N,EAAM,GAAK4S,GAAc,IAC5B5S,EAAM,GAGPmT,EAAWlhB,KAAKud,IAAIvd,KAAKqQ,IAAIkR,IAAevhB,KAAKwd,OACjD2D,EAAQnhB,KAAKsd,IAAI,GAAItd,KAAKqZ,MAAM6H,IAChCC,GAAgB,IAGhB,IAAI9O,EAAOrS,KAAKoG,KAAMmb,EAAapP,EAAagP,GAASA,EACrD1D,EAAYzd,KAAKsd,IAAI,GAAItd,KAAKqZ,MAAMrZ,KAAKud,IAAIvd,KAAKqQ,IAAIgC,IAASrS,KAAKwd,SAGpEgE,EAAsBxhB,KAAKoG,KAAKiM,EAAOoL,GAGvC+D,EAAc,EACjBA,EAAc,GAENA,GAAe,GAAKA,EAAc,IAC1CA,EAAc,GAIfnP,EAAOrS,KAAKoG,KAAKiM,GAAQoL,EAAY+D,IAAgB/D,EAAY+D,EAGjE,IAAIC,EAAezlB,KAAKa,IAAI,gBAC5B,GAAI,WAAe4kB,GAAe,CAEjC,IAAIC,EAAa,OAAWrP,EAAMoP,GAC9BA,EAAehI,OAAOkI,WAAatP,IAASqP,IAC/CrP,EAAOqP,EACK,GAARrP,IACHA,EAAO,G,CAKV,IAAI0L,EAAmB,EAEnBN,EAAY,IAEfM,EAAW/d,KAAK4N,MAAM5N,KAAKqQ,IAAIrQ,KAAKud,IAAIvd,KAAKqQ,IAAIoN,IAAczd,KAAKwd,SAAW,EAE/EnL,EAAO,QAAYA,EAAM0L,IAI1B,IAIIvE,EAJAoI,EAAW5hB,KAAKqZ,MAAMpZ,EAAMoS,GA8BhC,OA5BApS,EAAM,QAAYoS,EAAOuP,EAAU7D,GAQlCvE,EAJI8H,EAIOthB,KAAKqZ,MAAMtL,EAAMsE,GAHjBrS,KAAKoG,KAAK2H,EAAMsE,GAMxBmH,IAAaoI,GAChBpI,KAGDzL,EAAM,QAAYsE,EAAOmH,EAAUuE,IAEzB4C,IACT5S,GAAYsE,GAGTpS,EAAMygB,IACTzgB,GAAYoS,GAIbA,EAAOrW,KAAKgjB,aAAa3M,GAElB,CAAEpS,IAAKA,EAAK8N,IAAKA,EAAKsE,KAAMA,EACpC,CAQO,cAAAxK,CAAerL,EAAkBqlB,GACvC,MAAM/E,EAAe9gB,KAAKa,IAAI,sBAAuBb,KAAKa,IAAI,iBACxDkgB,EAAY/gB,KAAKghB,qBACjB8E,EAAgB9lB,KAAKa,IAAI,wBAAyB,GAClDklB,EAAW/lB,KAAKmE,WAAW,oBAAqB,GAAK2hB,EACrDzjB,EAAQ,QAAYrC,KAAK4Y,gBAAgBpY,GAAWulB,GAE1D,OAAIjF,EACIC,EAAU7J,OAAO7U,EAAOye,GAGxBC,EAAU7J,OAAO7U,OAAOM,EAAWojB,EAE5C,CASO,aAAA9a,CAAc/F,EAAkB1E,GACtC,IAGIgV,EACAwQ,EAJA1Q,EAAkBtV,KAAKmE,WAAW,QAAWnE,KAAKa,IAAI,YAAYsD,WAAW,UAC7E9B,EAAQrC,KAAK4Y,gBAAgBpY,GAYjC,GARA,OAAY0E,EAAOsF,WAAW,CAACzI,EAAU8U,KACxC,MAAM4N,EAAOzgB,KAAKqQ,IAAItS,EAASlB,IAAIyU,GAAajT,SAClCM,IAAV6S,GAAuBiP,EAAOuB,KACjCxQ,EAAQqB,EACRmP,EAAUvB,E,IAIC,MAATjP,EACH,OAAOtQ,EAAOsF,UAAUgL,EAE1B,CAWO,YAAAyF,CAAa1X,EAAeC,EAAaC,GAC/C,MAAMQ,EAAMjE,KAAKmE,WAAW,WAAY,GAClC4N,EAAM/R,KAAKmE,WAAW,WAAY,GACV,MAA1BnE,KAAKmE,WAAW,QAA4C,MAA1BnE,KAAKmE,WAAW,QACrDnE,KAAKsD,MAAMC,EAAQU,IAAQ8N,EAAM9N,IAAOT,EAAMS,IAAQ8N,EAAM9N,GAAMR,EAEpE,CAUU,SAAA6gB,CAAUrgB,EAAa8N,EAAasE,EAAc4P,EAAiBC,EAAiBC,GAE7F,GADWnmB,KAAKa,IAAI,gBACV,CACT,IAAI4O,EAAgBzL,KAAK4N,MAAMsU,EAAUD,GAAWE,EAChDC,EAAepiB,KAAK4N,OAAOG,EAAM9N,GAAOoS,GAExCF,EAAYnW,KAAKa,IAAI,YAAYsV,YAErC,GAAI,WAAe1G,IAAU,WAAe2W,GAAe,CAC1D,IAAIC,GAAS,EACTjH,EAAI,EACJqF,EAAqB,KAAb1S,EAAM9N,GACdqiB,EAAOriB,EACPsiB,EAAOxU,EACPyU,EAAQnQ,EAEZ,KAAiB,GAAVgQ,GAMN,GALAA,EAASrmB,KAAKymB,WAAWH,EAAMC,EAAMC,EAAO/W,GAC5C2P,IACIA,EAAI,MACPiH,GAAS,GAELA,EAoBJpiB,EAAMqiB,EACNvU,EAAMwU,EACNlQ,EAAOmQ,MAtBK,CACRpH,EAAI,GAAKpb,KAAK4N,MAAMwN,EAAI,IAC3BkH,EAAOriB,EAAMwgB,EAAOrF,EAChBnb,GAAO,GAAKqiB,EAAO,IACtBA,EAAO,KAIRC,EAAOxU,EAAM0S,EAAOrF,EAChBmH,GAAQ,GAAKA,EAAO,IACvBA,EAAO,IAIT,IAAInE,EAAapiB,KAAKkW,cAAcoQ,EAAMC,EAAMpQ,GAAW,GAC3DmQ,EAAOlE,EAAWne,IAClBsiB,EAAOnE,EAAWrQ,IAClByU,EAAQpE,EAAW/L,I,GAWvB,MAAO,CAAEpS,IAAKA,EAAK8N,IAAKA,EAAKsE,KAAMA,EACpC,CAKU,UAAAoQ,CAAWxiB,EAAa8N,EAAasE,EAAc5G,GAC5D,IAAI2W,GAAgBrU,EAAM9N,GAAOoS,EACjC,IAAK,IAAIQ,EAAI,EAAGA,EAAIpH,EAAOoH,IAC1B,GAAI,QAAYuP,EAAevP,EAAG,IAAMpH,GAAS2W,EAAevP,GAAKpH,EACpE,OAAO,EAGT,OAAO,CACR,CAOO,oBAAA1F,GACN,IAAIgI,EAAM/R,KAAKmE,WAAW,eAAgBnE,KAAKmE,WAAW,QACtDF,EAAMjE,KAAKmE,WAAW,eAAgBnE,KAAKmE,WAAW,QAE1D,OAAI,WAAe4N,IAAQ,WAAe9N,GAClCjE,KAAKmE,WAAW,OAAQ,IAAM4N,EAAM9N,GAErC,GACR,CAKO,YAAA2X,CAAanM,GACN,MAATA,IACHA,EAAQ,GAGwC,KAA7CzP,KAAKa,IAAI,YAAYsD,WAAW,YACnCsL,IAAU,GAGX,IAAIpN,EAAQrC,KAAK4Y,gBAAgB5Y,KAAKmE,WAAW,kBAAmB,IAIpE,OAHA9B,GAASrC,KAAKmE,WAAW,OAAQ,GAAKsL,EACtCpN,EAAQ,aAAiBA,EAAOrC,KAAKmE,WAAW,eAAgB,GAAInE,KAAKmE,WAAW,eAAgB,IAE7FnE,KAAKwM,iBAAiBxM,KAAK+Z,gBAAgB1X,GACnD,EApgDA,qC,gDAAkC,cAClC,sC,gDAA0C,IAAK4K,WAAWC,OAAO,CAACwS,EAAUzY,a,qEC1RtE,MAAMyf,UAAoB,IAQzB,cAAAtZ,GACN/L,MAAM+L,kBAEFpN,KAAKuG,QAAQ,UAAYvG,KAAKuG,QAAQ,UAAYvG,KAAKuG,QAAQ,UAAYvG,KAAKuG,QAAQ,UAAYvG,KAAKuG,QAAQ,WAAavG,KAAKuG,QAAQ,WAAavG,KAAKuG,QAAQ,WAAavG,KAAKuG,QAAQ,aAClMvG,KAAK2mB,QAAS,EAEhB,CAEO,KAAAC,GACNvlB,MAAMulB,QAEN,MAAMlZ,EAAU1N,KAAK0Q,SAErBhD,EAAQE,OAAO5N,KAAKa,IAAI,QAAS,GAAIb,KAAKa,IAAI,QAAS,IACvD6M,EAAQG,OAAO7N,KAAKa,IAAI,QAAS,GAAIb,KAAKa,IAAI,QAAS,IAEvD6M,EAAQE,OAAO5N,KAAKa,IAAI,SAAU,GAAIb,KAAKa,IAAI,SAAU,IACzD6M,EAAQG,OAAO7N,KAAKa,IAAI,SAAU,GAAIb,KAAKa,IAAI,SAAU,GAC1D,EArBA,qC,gDAAkC,gBAClC,sC,gDAA0C,IAAiBoM,WAAWC,OAAO,CAACwZ,EAAYzf,a,qHC5BpF,MAAM4f,UAA0B,IAAvC,c,oBA2BC,sC,gDAAqD7mB,KAAK8mB,YAAY,IAAI,IACzE,KAAS3mB,IAAI,CACZM,UAAW,CAAC,gBAEb,IAAM,IAAYsmB,KAAK/mB,KAAKI,MAAO,CAClCK,UAAW,YAAiBT,KAAKgnB,QAAQvZ,SAAS5M,IAAI,YAAa,IAAK,CAAC,cAAe,SAAU,YAChG,CAACb,KAAKgnB,QAAQvZ,eAoInB,CAxJQ,UAAAwZ,CAAWllB,EAA+CmlB,GAChE,MAAMC,EAASnnB,KAAKonB,cAAcnnB,SAASC,KAAKgnB,EAAaG,QAG7D,OAFAF,EAAO3d,aAAazH,GACpBmlB,EAAahnB,KAAKinB,GACXA,CACR,CAkBU,eAAAG,CAAgBvlB,EAA+Cgc,GACxE1c,MAAMimB,gBAAgBvlB,EAAUgc,GAEhC,MAAMwJ,EAAQvnB,KAAKwnB,OAAO,SACpBC,EAAQznB,KAAKwnB,OAAO,SACpB1U,EAAW9S,KAAKwnB,OAAO,YAE7B,IAGIE,EACAC,EACAC,EACAC,EAEAC,EACAC,EACAC,EACAC,EAQAC,EAnBAC,EAAMnoB,KAAKa,IAAI,MAAO,GACtBunB,EAAMpoB,KAAKa,IAAI,MAAO,GAYtBwnB,EAAYroB,KAAKa,IAAI,YAAakB,EAASlB,IAAI,YAAa,KAC5DynB,EAAYtoB,KAAKa,IAAI,YAAakB,EAASlB,IAAI,YAAa,KAE5D0nB,EAAgBvoB,KAAKa,IAAI,gBAAiBkB,EAASlB,IAAI,gBAAiBwnB,IACxEG,EAAgBxoB,KAAKa,IAAI,gBAAiBkB,EAASlB,IAAI,gBAAiBynB,IAI5E,GAAIb,IAAU3U,EAAU,CACvB,IAAIuG,EAAOkO,EAAM9N,qBAAqB1X,EAAU/B,KAAKyoB,YAAa,EAAGL,GACjE9O,EAAQiO,EAAM9N,qBAAqB1X,EAAU/B,KAAK0oB,QAAS,EAAGN,GAElET,EAAMJ,EAAM9N,qBAAqB1X,EAAU/B,KAAK2oB,WAAY,EAAGP,GAC/DL,EAAMR,EAAM9N,qBAAqB1X,EAAU/B,KAAK4oB,YAAa,EAAGR,GAEhEN,EAAM9jB,KAAK+N,IAAIsH,EAAMC,GACrBoO,EAAM1jB,KAAKC,IAAIoV,EAAMC,GAErB,IAAIwD,EAAgB9c,KAAK6oB,aAAeL,EAAgB,GACpDzL,EAAc/c,KAAK8oB,aAAeR,EAAY,GAElDV,EAAMH,EAAMxN,qBAAqBlY,EAAU/B,KAAK+oB,QAASjM,GAAiBC,EAAcD,GAAiB,EAAGqL,GAC5GN,EAAMD,EACNI,EAAMJ,EACNK,EAAML,EAENM,EAAc,Y,KAEV,CACJ,IAAI7O,EAAOoO,EAAMxN,qBAAqBlY,EAAU/B,KAAKgpB,YAAa,EAAGb,GACjE7O,EAAQmO,EAAMxN,qBAAqBlY,EAAU/B,KAAK+oB,QAAS,EAAGZ,GAElEN,EAAMJ,EAAMxN,qBAAqBlY,EAAU/B,KAAKipB,WAAY,EAAGd,GAC/DF,EAAMR,EAAMxN,qBAAqBlY,EAAU/B,KAAKkpB,YAAa,EAAGf,GAEhEH,EAAMhkB,KAAK+N,IAAIsH,EAAMC,GACrBsO,EAAM5jB,KAAKC,IAAIoV,EAAMC,GAErB,IAAIwD,EAAgB9c,KAAKmpB,aAAeZ,EAAgB,GACpDxL,EAAc/c,KAAKopB,aAAef,EAAY,GAElDX,EAAMH,EAAM9N,qBAAqB1X,EAAU/B,KAAK0oB,QAAS5L,GAAiBC,EAAcD,GAAiB,EAAGsL,GAC5GT,EAAMD,EACNI,EAAMJ,EACNK,EAAML,EAENQ,EAAc,U,CAGfloB,KAAKqpB,sBAAsBtnB,EAAU2lB,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAC9E,CAEU,qBAAAmB,CAAsBtnB,EAA+C2lB,EAAaC,EAAaC,EAAaC,EAAaC,EAAaC,EAAaC,EAAaC,EAAaC,GACtL,IAAIf,EAASplB,EAASlB,IAAI,YAE1B,GAAIsmB,EAAQ,CACX,IAAImC,EAAMtpB,KAAKupB,SAAS7B,EAAKE,GACzB4B,EAAMxpB,KAAKupB,SAAS5B,EAAKE,GAEzB4B,EAAMzpB,KAAKupB,SAASzB,EAAKE,GACzB0B,EAAM1pB,KAAKupB,SAASxB,EAAKE,GAEzBrZ,EAAIuY,EAAOvY,IACXK,EAAIkY,EAAOlY,IAEfkY,EAAOniB,IAAI,QAASskB,EAAI1a,EAAIA,GAC5BuY,EAAOniB,IAAI,QAASskB,EAAIra,EAAIA,GAE5BkY,EAAOniB,IAAI,QAASwkB,EAAI5a,EAAIA,GAC5BuY,EAAOniB,IAAI,QAASwkB,EAAIva,EAAIA,GAE5BkY,EAAOniB,IAAI,SAAUykB,EAAI7a,EAAIA,GAC7BuY,EAAOniB,IAAI,SAAUykB,EAAIxa,EAAIA,GAE7BkY,EAAOniB,IAAI,SAAU0kB,EAAI9a,EAAIA,GAC7BuY,EAAOniB,IAAI,SAAU0kB,EAAIza,EAAIA,GAE7BkY,EAAOniB,IAAI,cAAekjB,GAE1B,IAAIyB,EAAgB5nB,EAASlB,IAAI,iBAC7B8oB,GACH,OAAYA,GAAgBxC,IAC3BA,EAAOniB,IAAI,QAASskB,EAAI1a,EAAIA,GAC5BuY,EAAOniB,IAAI,QAASskB,EAAIra,EAAIA,GAE5BkY,EAAOniB,IAAI,QAASwkB,EAAI5a,EAAIA,GAC5BuY,EAAOniB,IAAI,QAASwkB,EAAIva,EAAIA,GAE5BkY,EAAOniB,IAAI,SAAUykB,EAAI7a,EAAIA,GAC7BuY,EAAOniB,IAAI,SAAUykB,EAAIxa,EAAIA,GAE7BkY,EAAOniB,IAAI,SAAU0kB,EAAI9a,EAAIA,GAC7BuY,EAAOniB,IAAI,SAAU0kB,EAAIza,EAAIA,GAE7BkY,EAAOniB,IAAI,cAAekjB,EAAY,G,CAI1C,CAEU,iBAAAlmB,CAAkBoE,GAC3B/E,MAAMW,kBAAkBoE,GACxBA,EAAU4gB,QAAU,IAAI,IACvB,KAAS7mB,IAAI,CAAC,IACd,IAAM,IAAY4mB,KAAK/mB,KAAKI,MAAO,CAClCK,UAAW,YAAiB2F,EAAU4gB,QAAQvZ,SAAS5M,IAAI,YAAa,IAAK,CAAC,cAAe,SAAU,YACrG,CAACb,KAAKgnB,QAAQvZ,SAAUrH,EAAU4gB,QAAQvZ,YAE/C,EA7JA,qC,gDAAkC,sBAClC,sC,gDAA0C,IAAaR,WAAWC,OAAO,CAAC2Z,EAAkB5f,a,0GCtBtF,MAAM2iB,UAAqB,IAAlC,c,oBAuBC,sC,gDAA0D5pB,KAAK8mB,YAAY,IAAI,IAC9E,KAAS3mB,IAAI,CAAC,IACd,IAAM,IAAiB4mB,KAAK/mB,KAAKI,MAAO,CACvCI,SAAU,WACVC,UAAW,YAAiBT,KAAKgnB,QAAQvZ,SAAS5M,IAAI,YAAa,IAAK,CAAC,SAAU,YACjF,CAACb,KAAKgnB,QAAQvZ,eAiBnB,CAnCQ,UAAAwZ,CAAWllB,EAA+CmlB,GAChE,MAAMC,EAASnnB,KAAKonB,cAAcnnB,SAASC,KAAKgnB,EAAaG,QAG7D,OAFAF,EAAO3d,aAAazH,GACpBmlB,EAAahnB,KAAKinB,GACXA,CACR,CAoBU,iBAAAnlB,CAAkBoE,GAC3B/E,MAAMW,kBAAkBoE,GACxBA,EAAU4gB,QAAU,IAAI,IACvB,KAAS7mB,IAAI,CAAC,IACd,IAAM,IAAiB4mB,KAAK/mB,KAAKI,MAAO,CACvCI,SAAU,WACVC,UAAW,YAAiB2F,EAAU4gB,QAAQvZ,SAAS5M,IAAI,YAAa,IAAK,CAAC,SAAU,YACtF,CAACb,KAAKgnB,QAAQvZ,SAAUrH,EAAU4gB,QAAQvZ,YAE/C,EAbA,qC,gDAAkC,iBAClC,sC,gDAA0C,IAAiBR,WAAWC,OAAO,CAAC0c,EAAa3iB,a,kpCCpCrF,MAAM4iB,UAAyBC,EAAA,EAAtC,c,oBAYC,oC,gDAAiC9pB,KAAKC,SAASC,KAAK6pB,EAAA,EAAQ5pB,IAAIH,KAAKI,MAAO,CAC3EK,UAAW,CAAC,SACZyC,aAAa,EACb8mB,qBAAqB,EACrBC,MAAM,EACNC,MAAM,EACNC,OAAQ,OACRC,OAAQ,YAOT,sC,gDAAoCpqB,KAAKC,SAASC,KAAKmqB,EAAA,EAASlqB,IAAIH,KAAKI,MAAO,CAC/EK,UAAW,CAAC,WACZyC,aAAa,MA2Ef,CAxEW,SAAA5B,GACTtB,KAAKsqB,uBACLtqB,KAAKoL,UAAU3K,UAAY,YAAiBT,KAAKoL,UAAU3K,UAAW,CAAC,YAAa,KAAM,QAAST,KAAKoL,UAAU8c,cAElH,MAAMjoB,EAAWD,KAAKC,SACtBA,EAAS0F,UAAU3F,KAAKwO,OACxBvO,EAAS0F,UAAU3F,KAAKuqB,WACxBtqB,EAAS0F,UAAU3F,KAAKwqB,SAExBxqB,KAAKwO,MAAMxJ,IAAI,UAAW,GAC1BhF,KAAKwO,MAAMic,OAAOC,OAAO,QAAS,CAAE3nB,QAAS,KAE7C,MAAM4E,EAAgB3H,KAAKyE,MAAMkD,cACjCA,EAAc3C,IAAI,eAAe,GACjC2C,EAAckB,OAAO,cACrBlB,EAAc1H,SAAS+I,YAAYhJ,KAAKyE,MAAMkmB,eAE9CtpB,MAAMC,WACP,CAEU,YAAAspB,GACTvpB,MAAMupB,eAEN5qB,KAAK6qB,QAAQ7lB,IAAI,QAAS0I,IACzB,MAAM6c,EAAYvqB,KAAKuqB,UACjBC,EAAUxqB,KAAKwqB,QAErB,IAAIra,EAAKoa,EAAU3b,IACfyC,EAAKkZ,EAAUtb,IAEfmB,EAAKoa,EAAQ5b,IACb0C,EAAKkZ,EAAQvb,IAEjB,MAAMqB,EAAItQ,KAAKM,SACTyO,EAAI/O,KAAKK,QAEX8P,EAAKC,KACPD,EAAIC,GAAM,CAACA,EAAID,IAGbkB,EAAKC,KACPD,EAAIC,GAAM,CAACA,EAAID,IAGe,eAA5BrR,KAAKa,IAAI,gBACZ6M,EAAQE,OAAO,EAAG,GAClBF,EAAQG,OAAOsC,EAAI,GACnBzC,EAAQG,OAAOsC,EAAIG,GACnB5C,EAAQG,OAAO,EAAGyC,GAClB5C,EAAQG,OAAO,EAAG,GAElBH,EAAQE,OAAOwC,EAAI,GACnB1C,EAAQG,OAAOkB,EAAG,GAClBrB,EAAQG,OAAOkB,EAAGuB,GAClB5C,EAAQG,OAAOuC,EAAIE,GACnB5C,EAAQG,OAAOuC,EAAI,KAGnB1C,EAAQE,OAAO,EAAG,GAClBF,EAAQG,OAAO,EAAGwD,GAClB3D,EAAQG,OAAOkB,EAAGsC,GAClB3D,EAAQG,OAAOkB,EAAG,GAClBrB,EAAQG,OAAO,EAAG,GAElBH,EAAQE,OAAO,EAAG0D,GAClB5D,EAAQG,OAAO,EAAGyC,GAClB5C,EAAQG,OAAOkB,EAAGuB,GAClB5C,EAAQG,OAAOkB,EAAGuC,GAClB5D,EAAQG,OAAO,EAAGyD,G,GAGrB,EAjGA,qC,gDAAkC,qBAClC,sC,gDAA0CwY,EAAA,EAAU7c,WAAWC,OAAO,CAAC2c,EAAiB5iB,c,kFCgFlF,MAAM6jB,UAA6C/qB,EAAA,EAA1D,c,oBASC,yC,gDAA+B,IAE/B,uC,gDAA2E,CAAC,GA0hB7E,CAxhBW,SAAAuB,GACTtB,KAAKoL,UAAU3K,UAAY,YAAiBT,KAAKoL,UAAU3K,UAAW,CAAC,SACvET,KAAK6S,OAAO3S,KAAK,YACjBF,KAAKwL,cAAc,OAAQ,YAC3BxL,KAAKgH,OAAO,YACZ3F,MAAMC,WACP,CAEO,gBAAAgF,GACNjF,MAAMiF,mBAEN,MAAMoW,EAAM1c,KAAKwK,UAAU0E,OAC3B,IAAI2H,EAAI,EACJ7W,KAAKkgB,eACRlgB,KAAK+qB,SAAW,CAAC,EACjB,OAAY/qB,KAAKwK,WAAYzI,IAC5BA,EAASqD,OAAO,QAASyR,GACzB7W,KAAK+qB,SAAShpB,EAASlB,IAAI,aAAyBkB,EACpD8U,GAAG,IAGJ7W,KAAKwL,cAAc,gBAAiBkR,IAGrC1c,KAAKwL,cAAc,aAAcxH,KAAK+N,IAAI/N,KAAK4N,MAAM5R,KAAKa,IAAI,QAAS,GAAK6b,GAAM,IAClF1c,KAAKwL,cAAc,WAAYxH,KAAKC,IAAID,KAAK4N,MAAM5R,KAAKa,IAAI,MAAO,GAAK6b,GAAMA,KAE1E1c,KAAKqM,YAAcrM,KAAKkgB,cAAiBlgB,KAAKuG,QAAQ,UAAYvG,KAAKuG,QAAQ,QAAUvG,KAAKmgB,eAAe,aAAengB,KAAKmgB,eAAe,eAAiBngB,KAAKmgB,eAAe,UAAYngB,KAAKmgB,eAAe,YACpNngB,KAAKwK,UAAU0E,OAAS,IAC3BlP,KAAKiS,qBACLjS,KAAK4W,oBACL5W,KAAKiG,oBAGR,CAEU,kBAAAgM,GACT,OAAYjS,KAAKkF,QAASA,IACzB,IAAI8lB,EAAgBhrB,KAAKwK,UAAUxK,KAAKuV,cAAc1U,IAAI,YACtDoqB,EAAcjrB,KAAKwK,UAAUxK,KAAKyV,WAAa,GAAG5U,IAAI,YAEtDiS,EAAW5N,EAAOrE,IAAI,YACtB0mB,EAAQriB,EAAOrE,IAAI,SACnB4mB,EAAQviB,EAAOrE,IAAI,SAEvB,GAAI0mB,aAAiBuD,GAAgBrD,aAAiBqD,EACrD5lB,EAAOyT,sBAEH,GAAI7F,IAAa9S,KAAM,CAC3B,IAAI+E,EACAmmB,EACAC,EAAY1D,EAmBhB,GAlBIF,IAAUzU,GACT5N,EAAOrE,IAAI,oBACdkE,EAAM,aAEHG,EAAOrE,IAAI,wBACdqqB,EAAU,kBAGHzD,IAAU3U,IACd5N,EAAOrE,IAAI,oBACdkE,EAAM,aAEHG,EAAOrE,IAAI,wBACdqqB,EAAU,iBAEXC,EAAY5D,GAGT4D,aAAqBzL,EAAA,IAEpB3a,GAAOmmB,GAAS,CACnB,IAAIE,EACAC,EAEJ,IAAK,IAAIxU,EAAI,EAAG6F,EAAMxX,EAAOsF,UAAU0E,OAAQ2H,EAAI6F,EAAK7F,IAAK,CAC5D,IAAI9U,EAAWmD,EAAOsF,UAAUqM,GAChC,GAAI9R,GACChD,EAASlB,IAAIkE,KAAgBimB,EAAe,CAC/CI,EAAgBrpB,EAChB,K,CAGF,GAAImpB,GACCnpB,EAASlB,IAAIqqB,KAAoBF,EAAe,CACnDI,EAAgBrpB,EAChB,K,EAKH,IAAK,IAAI8U,EAAI3R,EAAOsF,UAAU0E,OAAS,EAAG2H,GAAK,EAAGA,IAAK,CACtD,IAAI9U,EAAWmD,EAAOsF,UAAUqM,GAChC,GAAI9R,GACChD,EAASlB,IAAIkE,KAAgBkmB,EAAa,CAC7CI,EAActpB,EACd,K,CAGF,GAAImpB,GACCnpB,EAASlB,IAAIqqB,KAAoBD,EAAa,CACjDI,EAActpB,EACd,K,EAKH,IAAIwT,EAAa,EACbE,EAAWvQ,EAAOsF,UAAU0E,OAE5Bkc,IACH7V,EAAarQ,EAAOsF,UAAU1B,QAAQsiB,IAGnCC,IACH5V,EAAWvQ,EAAOsF,UAAU1B,QAAQuiB,GAAe,GAGpDnmB,EAAO3D,WAAW,aAAcgU,GAChCrQ,EAAO3D,WAAW,WAAYkU,GAE9B,IAAI6V,GAAW,EACf,IAAK,IAAIzU,EAAItB,EAAYsB,EAAIpB,EAAUoB,IAAK,CAC3C,MAAM9U,EAAWmD,EAAOsF,UAAUqM,GAgBlC,GAdA,OAAY3R,EAAOqmB,oBAAqBxmB,IAE1B,MADDhD,EAASlB,IAASkE,KAE7BumB,GAAW,E,IAIb,OAAYpmB,EAAOsmB,oBAAqBzmB,IAE1B,MADDhD,EAASlB,IAASkE,KAE7BumB,GAAW,E,IAITA,EACH,K,CAGFpmB,EAAO3D,WAAW,kBAAmB+pB,E,CAGvCpmB,EAAOyT,gB,IAGV,CAGU,iBAAA/B,G,MACT,MAAMtU,EAAWtC,KAAKa,IAAI,YACpB6b,EAAM1c,KAAKwK,UAAU0E,OAE3B,IAAIqG,EAAavV,KAAKuV,aAClBA,EAAa,GAChBA,IAGD,IAAIE,EAAWzV,KAAKyV,WAChBA,EAAWiH,GACdjH,IAGD,MAAM4B,EAAqB/U,EAASzB,IAAI,sBAClCyW,EAAmBhV,EAASzB,IAAI,mBAAoBwW,GAE1D,IAAImG,EAAWlb,EAASsE,aAAe5C,KAAK+N,IAAIzP,EAASzB,IAAI,mBAAqB,GAC9E8c,EAAY3Z,KAAK+N,IAAI,EAAG/N,KAAKC,IAAIyY,EAAK1Y,KAAKoG,MAAMqL,EAAWF,GAAciI,KAE9EjI,EAAavR,KAAKqZ,MAAM9H,EAAaoI,GAAaA,EAClD3d,KAAK4d,WAAaD,EAElB,IAAK,IAAIlF,EAAI,EAAGA,EAAIiE,EAAKjE,IACxBzY,KAAKuI,gBAAgBvI,KAAKwK,UAAUiO,IAAI,GAGzC,IAAIgT,EAAIzrB,KAAKwK,UAAU+K,GAAY1U,IAAI,QAAS,GAEhD,IAAK,IAAIgW,EAAItB,EAAYsB,EAAIpB,EAAUoB,GAAQ8G,EAAW,CACzD,IAAI5b,EAAW/B,KAAKwK,UAAUqM,GAE9B7W,KAAKqF,cAActD,EAAU,IAC7B/B,KAAKuI,gBAAgBxG,GAAU,GAE/B,IAAI0N,EAAQkO,EACRrG,IACH7H,EAAQ,GAGTzP,KAAKuF,iBAAiBxD,EAAU0pB,EAAGhc,GAEnCgc,G,CAGD,GAAInpB,EAASzB,IAAI,oBAChB,IAAK,IAAIgW,EAAItB,EAAYsB,EAAIpB,EAAUoB,IAAK,CAC3C,IAAI9U,EAAW/B,KAAKwK,UAAUqM,GAC1BA,EAAI8G,GAAa,IACpB3d,KAAKqF,cAActD,EAAU,CAAC,UAAU,GACxC/B,KAAKuI,gBAAgBxG,GAAU,GAC/B/B,KAAKuF,iBAAiBxD,EAAU,EAAG,GAE9BsV,GACiB,QAArB,EAAAtV,EAASlB,IAAI,gBAAQ,SAAEU,WAAW,WAAW,G,CAMjDvB,KAAK8J,cACN,CAGO,gBAAAvE,CAAiBxD,EAA+C2pB,EAAoBjc,GAC1F,IAAInN,EAAWtC,KAAKa,IAAI,YAEpB8qB,EAAmB5pB,EAASlB,IAAI,mBAAoB,GACpD+qB,EAAsB7pB,EAASlB,IAAI,sBAAuB,GAE1D2U,EAA4BzT,EAASlB,IAAI,SAExC,WAAe2U,KACnBA,EAAQxV,KAAK6rB,gBAAgB9pB,EAASlB,IAAI,cAG3C,IAGI4U,EAHAjV,EAAWR,KAAK8rB,gBAAgBtW,EAAOmW,GAEvCV,EAAclpB,EAASlB,IAAI,eAE3BoqB,GACHxV,EAAWzV,KAAK6rB,gBAAgBZ,GAC3B,WAAexV,KACnBA,EAAWD,IAIZC,EAAWD,EAGZ,IAEIuW,EACA/J,EAHAxS,EAAcxP,KAAK8rB,gBAAgBrW,EAAUmW,GAMhDG,EADGhqB,EAASlB,IAAI,WACD4U,EAGAD,EAAQxV,KAAK4d,WAAa,EAG1CoE,EAAkBhiB,KAAK8rB,gBAAgBC,EAAcH,GAErDtpB,EAASoI,YAAY3I,EAASlB,IAAI,SAAUL,EAAUgP,EAAaC,GACnEnN,EAASsN,WAAW7N,EAASlB,IAAI,QAASL,EAAUgP,GACpDlN,EAASiN,WAAWxN,EAASlB,IAAI,QAASL,EAAUgP,EAAaC,GACjEnN,EAAS4N,WAAWnO,EAASlB,IAAI,YAAaL,EAAUwhB,GAExDhiB,KAAKsJ,eAAevH,GACpBO,EAASuN,aAAa9N,EAASlB,IAAI,UAAWL,EAAUgP,GAExD,MAAM2S,EAAWniB,KAAKa,IAAI,YACtBshB,GACHA,EAASpgB,EAAU2pB,EAErB,CAEO,UAAAnW,GACN,IAAImH,EAAM1c,KAAKwK,UAAU0E,OACzB,OAAOlL,KAAKC,IAAID,KAAK+N,IAAI/R,KAAKmE,WAAW,aAAc,GAAI,GAAIuY,EAAM,EACtE,CAEO,QAAAjH,GACN,IAAIiH,EAAM1c,KAAKwK,UAAU0E,OACzB,OAAOlL,KAAK+N,IAAI,EAAG/N,KAAKC,IAAIjE,KAAKmE,WAAW,WAAYuY,GAAMA,GAC/D,CAKO,SAAAiE,GAEP,CAKO,YAAAmC,GACN,OAAO,CACR,CAQO,IAAAL,CAAKpgB,GACX,IAAI0K,EAAe/M,KAAK+qB,SAAS1oB,GACjC,OAAI0K,EACI/M,KAAKoL,UAAU9I,SAASgN,qBAAqBtP,KAAK8rB,gBAAgB/e,EAAalM,IAAI,QAAS,KAE7FyZ,GACR,CAQO,IAAAoI,CAAKrgB,GACX,IAAI0K,EAAe/M,KAAK+qB,SAAS1oB,GACjC,OAAI0K,EACI/M,KAAKoL,UAAU9I,SAASgN,qBAAqBtP,KAAK8rB,gBAAgB/e,EAAalM,IAAI,QAAS,KAE7FyZ,GACR,CAKO,oBAAAb,CAAqB1X,EAAuC2R,EAAegG,EAAsBsS,GACvG,MAAMC,EAAWlqB,EAASlB,IAAI6S,GACxB3G,EAAe/M,KAAK+qB,SAASkB,GAEnC,OAAIlf,EACI/M,KAAK8rB,gBAAgB/e,EAAalM,IAAI,QAAS,GAAI6Y,GAEpDY,GACR,CAKO,sBAAAN,CAAuBjY,EAAuC2R,EAAegG,EAAsBsS,GACzG,OAAOhsB,KAAKoL,UAAU9I,SAASgN,qBAAqBtP,KAAKyZ,qBAAqB1X,EAAU2R,EAAOgG,EAAcsS,GAC9G,CAKO,oBAAA/R,CAAqBlY,EAAuC2R,EAAegG,EAAsBsS,GACvG,MAAMC,EAAWlqB,EAASlB,IAAI6S,GACxB3G,EAAe/M,KAAK+qB,SAASkB,GACnC,OAAIlf,EACI/M,KAAK8rB,gBAAgB/e,EAAalM,IAAI,QAAS,GAAI6Y,GAEpDY,GACR,CAKO,sBAAAJ,CAAuBnY,EAAuC2R,EAAegG,EAAsBsS,GACzG,OAAOhsB,KAAKoL,UAAU9I,SAASgN,qBAAqBtP,KAAKia,qBAAqBlY,EAAU2R,EAAOgG,EAAcsS,GAC9G,CAaO,eAAAF,CAAgBtW,EAAe9F,GAChC,WAAeA,KACnBA,EAAW,IAGZ,IAAIgN,EAAM1c,KAAKwK,UAAU0E,OAErB4N,EAAgB9c,KAAKa,IAAI,gBAAiB,GAG9C6b,GAAOI,EACPJ,GAAQ,EAHU1c,KAAKa,IAAI,cAAe,GAK1C,IAAIL,GAAYgV,EAAQ9F,EAAWoN,GAAiBJ,EAEhD3a,EAAW/B,KAAKwK,UAAUgL,GAK9B,OAJIzT,IACHvB,GAAYuB,EAASlB,IAAI,gBAAiB,IAGpCL,CACR,CAQO,eAAAqrB,CAAgBI,GACtB,IAAIlqB,EAAW/B,KAAK+qB,SAASkB,GAC7B,OAAIlqB,EACIA,EAASlB,IAAI,SAEdyZ,GACR,CAKO,kBAAA4R,CAAmBnqB,GACzB,OAAO/B,KAAK8rB,gBAAgB/pB,EAASlB,IAAI,SAC1C,CAKO,iBAAA0K,CAAkB/K,EAAkBkP,GAE1C,OADAlP,IAAa,GAAMkP,GAAY1P,KAAKwK,UAAU0E,OACvClP,KAAK8rB,gBAAgB9rB,KAAKmsB,oBAAoB3rB,GAAWkP,EACjE,CASO,mBAAAyc,CAAoB3rB,GAC1B,IAAIkc,EAAM1c,KAAKwK,UAAU0E,OACzB,OAAO,aAAiBlL,KAAKqZ,MAAM7c,EAAWkc,GAAM,EAAGA,EAAM,EAC9D,CAQO,cAAA7Q,CAAerL,EAAkBqlB,GAEvC,MAAM9jB,EAAW/B,KAAKwK,UAAUxK,KAAKmsB,oBAAoB3rB,IACzD,GAAIuB,EAAU,CACb,MAAMqF,EAAQrF,EAASlB,IAAI,SAC3B,GAAIuG,EACH,OAAO,OAAeA,EAAOpH,KAAKa,IAAI,cAAe,I,CAGxD,CAEU,kBAAA6K,CAAmB5E,EAAkBtG,GAC9CsG,EAAQ0C,aAAaxJ,KAAKwK,UAAUxK,KAAKmsB,oBAAoB3rB,KAC7DsG,EAAQM,MAAMmD,KAAK6hB,eACpB,CASO,aAAAnhB,CAAc/F,EAAkB1E,GACtC,GAAIR,KAAKwK,UAAU0E,OAAS,EAAG,CAC9B,IAAIoG,EAAkBtV,KAAKmE,WAAW,QAAWnE,KAAKa,IAAI,YAAYsD,WAAW,UAC7EqR,EAAQxV,KAAKmsB,oBAAoB3rB,GAEjC6rB,EAAiBnnB,EAAOsF,UAAUgL,GAClCzI,EAAe/M,KAAKwK,UAAUgL,GAC9ByW,EAAWlf,EAAalM,IAAI,YAEhC,GAAIwrB,GAAkBtf,GACjBsf,EAAexrB,IAAIyU,KAAe2W,EACrC,OAAOI,EAKT,IAAK,IAAIxV,EAAI,EAAG6F,EAAMxX,EAAOsF,UAAU0E,OAAQ2H,EAAI6F,EAAK7F,IAAK,CAC5D,IAAI9U,EAAWmD,EAAOsF,UAAUqM,GAChC,GAAI9U,EAASlB,IAAIyU,KAAe2W,EAC/B,OAAOlqB,C,EAIX,CAWO,aAAAuqB,CAAc/oB,EAAeC,EAAaC,GAChD,IAAIiZ,EAAM1c,KAAKwK,UAAU0E,OACzBlP,KAAKsD,KAAKC,EAAQmZ,EAAKlZ,EAAMkZ,EAAKjZ,EACnC,CAEO,gBAAA8oB,CAAiBvB,EAAuBC,EAAqBxnB,GACnEzD,KAAKssB,cAActsB,KAAK6rB,gBAAgBb,GAAgBhrB,KAAK6rB,gBAAgBZ,GAAe,EAAGxnB,EAChG,CAQO,oBAAAsG,GACN,OAAO/J,KAAK4d,WAAa5d,KAAKwK,UAAU0E,QAAUlP,KAAKa,IAAI,MAAO,GAAKb,KAAKa,IAAI,QAAS,GAC1F,CAKO,YAAA+a,CAAanM,GACP,MAATA,IACFA,EAAQ,GAGuC,KAA7CzP,KAAKa,IAAI,YAAYsD,WAAW,YAClCsL,IAAU,GAGX,MAAMjP,EAAWR,KAAKmE,WAAW,kBAAmB,GAE9CqR,EAAQ,aAAiBxV,KAAKmsB,oBAAoB3rB,GAAYiP,EAAO,EAAGzP,KAAKwK,UAAU0E,OAAS,GACtG,OAAOlP,KAAKwM,iBAAiBxM,KAAK8rB,gBAAgBtW,GACnD,EAniBA,qC,gDAAkC,iBAClC,sC,gDAA0CzV,EAAA,EAAKkN,WAAWC,OAAO,CAAC4d,EAAa7jB,c,cCzBzE,MAAMulB,UAAiD1B,EAA9D,c,oBASC,yC,gDAA+B,IAE/B,uC,gDAA+E,CAAC,GAqLjF,CAnLW,SAAAxpB,GACTtB,KAAKoL,UAAU3K,UAAY,YAAiBT,KAAKoL,UAAU3K,UAAW,CAAC,SACvET,KAAK6S,OAAO3S,KAAK,YACjBmB,MAAMC,WACP,CAGU,iBAAAsV,GAET5W,KAAKwL,cAAc,eAAgBxL,KAAKa,IAAI,iBAE5C,MAAMyB,EAAWtC,KAAKa,IAAI,YACpB6b,EAAM1c,KAAKwK,UAAU0E,OAE3B,IAAIqG,EAAavV,KAAKuV,aAClBA,EAAa,GAChBA,IAGD,IAAIE,EAAWzV,KAAKyV,WAChBA,EAAWiH,GACdjH,IAGD,IAAI+H,EAAWlb,EAASsE,aAAe5C,KAAK+N,IAAIzP,EAASzB,IAAI,mBAAqB,EAAI4c,OAAOC,kBAEzFC,EAAY3Z,KAAKC,IAAIyY,EAAK1Y,KAAKoG,MAAMqL,EAAWF,GAAciI,IAClEjI,EAAavR,KAAKqZ,MAAM9H,EAAaoI,GAAaA,EAClD3d,KAAK4d,WAAaD,EAElB,IAAK,IAAIlF,EAAI,EAAGA,EAAIiE,EAAKjE,IACxBzY,KAAKuI,gBAAgBvI,KAAKwK,UAAUiO,IAAI,GAGzC,IAAIO,EAAYyE,OAAOzd,KAAKwK,UAAU+K,GAAY1U,IAAI,aAClDoY,EAAUwE,OAAOzd,KAAKwK,UAAUiL,EAAW,GAAG5U,IAAI,aAClDgd,EAAgB5E,EAAUD,EAC1BvD,EAAWF,EAAaiI,IAC3BK,EAAgB5E,EAAUD,IAAeC,EAAUD,GAAahZ,KAAK0S,gBAAkB+C,EAAWF,IAAevV,KAAK0S,gBAIvH,IAAIoE,EAAe,iBAAqB,EAAG+G,EAAcL,EAAUxd,KAAKa,IAAI,kBAE5E,MAAMkW,EAAe,cAAkBD,EAAazE,UAC9CF,EAAenS,KAAKmE,WAAW,gBAEjC,sBAA0B2S,GAAgB9W,KAAK0S,iBAClDoE,EAAe,OAAH,UAAQ3E,IAGrB,MAAMiF,EAAUpX,KAAKa,IAAI,eAEzB,IAGIqW,EAHAC,GAAgB,IAChBsV,GAAgB,IAChBC,GAAoB,IAGpB1O,EAA0F,GAC1F2O,GAAU,EAEd,IAAK,IAAI9V,EAAItB,EAAYsB,EAAIpB,EAAUoB,IAAK,CAC3C,IAAI9U,EAAW/B,KAAKwK,UAAUqM,GAC1BrB,EAAQzT,EAASlB,IAAI,SACrB+rB,GAAO,EAEPvqB,EAAQob,OAAO1b,EAASlB,IAAI,aAC5B8W,EAAO,IAAIC,KAAKvV,GAChBwqB,EAAY,eAAmBlV,EAAMb,EAAazE,UAEtD6E,EAASE,EAAQN,EAAazE,UAC9B,IAAIya,GAAQ,EAEiB,QAAzBhW,EAAazE,UAA+C,QAAzByE,EAAazE,UAC/C0E,GAAgB/W,KAAKa,IAAI,mBAAqB,WAAesW,IAE5D,cAAkB9U,EAAO8U,EAAeJ,EAAc/W,KAAKI,MAAM4W,OACpEE,EAASlX,KAAKa,IAAI,2BAA4BiW,EAAazE,UAEvDmD,EAAoB,GAAZmI,EAAkB8O,GAC7BzO,EAAc+O,MAGf/O,EAAc9d,KAAK,CAAEgX,OAAQA,EAAQnV,SAAUA,IAC/C4qB,GAAU,EACVG,GAAQ,EACRL,EAAgBjX,EAChBkX,EAAoBG,GAKvB,IAAIG,GAAY,EACc,QAA1BlW,EAAazE,UAAgD,SAA1ByE,EAAazE,SAC/CmD,EAAQiX,GAAiB9O,IAC5BqP,GAAY,GAITH,EAAY/V,EAAarH,OAAU,GAClCod,GAAaH,IAChBM,GAAY,IAKVF,GAASE,IACTxX,EAAoB,GAAZmI,EAAkB8O,GACzBE,IACHC,GAAO,GAGJA,IACJ5O,EAAc9d,KAAK,CAAEgX,OAAQA,EAAQnV,SAAUA,IAC/C0qB,EAAgBjX,EAChBkX,EAAoBG,GAErBF,GAAU,GAIXxV,EAAgB9U,C,CAIjB,GAAI2b,EAAc9O,OAAS,EAAG,CAC7B,IAAIuc,EAAIzN,EAAc,GAAGjc,SAASlB,IAAI,QAAS,GAE/C,OAAYmd,GAAgBiP,IAC3B,MAAMlrB,EAAWkrB,EAAKlrB,SAChBmV,EAAS+V,EAAK/V,OACpBlX,KAAKqF,cAActD,EAAU,IAE7B/B,KAAKuI,gBAAgBxG,GAAU,GAE/B,IAAIM,EAAQob,OAAO1b,EAASlB,IAAI,aAC5B8W,EAAO,IAAIC,KAAKvV,GAEpB,MAAM+E,EAAQrF,EAASlB,IAAI,SACvBuG,GACHA,EAAMpC,IAAI,OAAQhF,KAAKI,MAAMyX,cAAcX,OAAOS,EAAMT,IAEzDuU,IACAzrB,KAAKuF,iBAAiBxD,EAAU0pB,EAAG9N,EAAU,G,CAIhD,CAOO,YAAAjL,GACN,OAAO,sBAA0B1S,KAAKmE,WAAW,gBAClD,CASO,cAAA0H,CAAerL,EAAkBqlB,GAEvC,IAAI9jB,EAAW/B,KAAKwK,UAAUxK,KAAKmsB,oBAAoB3rB,IAEvD,GAAIuB,EAAU,CACb,IAAImV,EAASlX,KAAKa,IAAI,eAAgBb,KAAKmE,WAAW,gBAAgBkO,UACtE,OAAOrS,KAAKI,MAAMyX,cAAcX,OAAO,IAAIU,KAAK7V,EAASlB,IAAI,WAAY,IAAKb,KAAKa,IAAI,oBAAqBqW,G,CAE9G,CAEU,kBAAAxL,CAAmB5E,EAAkBtG,GAC9CsG,EAAQM,MAAMpC,IAAI,OAAQhF,KAAK6L,eAAerL,GAC/C,EA7LA,qC,gDAAkC,qBAClC,sC,gDAA0CsqB,EAAa7d,WAAWC,OAAO,CAACsf,EAAiBvlB,c,wBCpCrF,MAAMimB,UAA6CxN,EAAA,EAA1D,c,oBASC,2C,iDAAkC,IAClC,kD,iDAAyC,IACzC,gD,gDAAsC,GA4GvC,CA1GQ,SAAApe,GACNtB,KAAKoL,UAAU3K,UAAY,YAAiBT,KAAKoL,UAAU3K,UAAW,CAAC,SACvEY,MAAMC,WACP,CAGU,aAAA4U,CAAcjS,EAAa8N,EAAaoE,EAAmBmP,GACpE,IAAIlD,EAEJ,MAAM+K,EAAoBntB,KAAKotB,uBACzBC,EAAWrtB,KAAKa,IAAI,YAI1B,GAFAb,KAAKoF,OAAO,eAAgB,GAEZ,eAAZioB,GAAyC,UAAZA,GAAoC,UAAZA,GAAoC,QAAZA,EAAoB,CAEhGlX,GAAa,IAChBA,EAAY,GAGbA,EAAYnS,KAAK4N,MAAMuE,GAKvB,IAAIoP,EAAaxT,EAAM9N,EAGJ,IAAfshB,IACHA,EAAavhB,KAAKqQ,IAAItC,IAGvB,IAAIsE,EAAOkP,EAAapP,EAEpBmX,EAAW,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GACnCC,EAAc,EAEF,QAAZF,IACHC,EAAW,CAAC,GAAI,GAAI,EAAG,EAAG,EAAG,IAG9B,IAAK,IAAIE,KAAWF,EACnB,GAAI/H,EAAaiI,EAAUrX,EAAW,CACrCoX,EAAcC,EACd,K,CAGF,IAAI/d,EAAQzL,KAAKoG,MAAO2H,EAAM9N,GAAOspB,EAAepX,GAEhD+O,EAAmBlhB,KAAKud,IAAIvd,KAAKqQ,IAAI5E,IAAUzL,KAAKwd,OACpD2D,EAAQnhB,KAAKsd,IAAI,GAAItd,KAAKqZ,MAAM6H,IAAa,GAC7CuI,EAAehe,EAAQ0V,EAI3B1V,EADc,UAAc6d,EAAUG,GACpBtI,EAElB9O,EAAOkX,EAAc9d,EAkBrB2S,EAAa,CAAEne,IAhBfA,EAAMD,KAAKqZ,MAAMpZ,EAAMoS,GAAQA,EAgBNtE,IAfzBA,EAAM/N,KAAKoG,KAAK2H,EAAMsE,GAAQA,EAeKA,KAAMA,E,MAGzC+L,EAAa/gB,MAAM6U,cAAcjS,EAAK8N,EAAKoE,EAAWmP,GAMvD,OAFAtlB,KAAKwL,cAAc,iBAAkB2hB,EAAkBO,UAAUtL,EAAW/L,KAAM+L,EAAWrQ,IAAKsb,IAE3FjL,CACR,CAEU,WAAAvB,CAAYxe,GAErB,OADkBrC,KAAKotB,uBACNlW,OAAO7U,EAAOrC,KAAKmE,WAAW,kBAAmBnE,KAAKa,IAAI,YAC5E,CAQO,cAAAgL,CAAerL,EAAkBqlB,GACvC,MAAM9E,EAAY/gB,KAAKotB,uBACjBtH,EAAgB9lB,KAAKa,IAAI,wBAAyB,GAClDklB,EAAW/lB,KAAKmE,WAAW,oBAAqB,GAAK2hB,EACrDzjB,EAAQ,QAAYrC,KAAK4Y,gBAAgBpY,GAAWulB,GAE1D,OAAOhF,EAAU7J,OAAO7U,EAAOrC,KAAKmE,WAAW,kBAAmBnE,KAAKa,IAAI,YAC5E,EArHA,qC,gDAAkC,iBAClC,sC,gDAA0C6e,EAAA,EAAUzS,WAAWC,OAAO,CAACggB,EAAajmB,c,kHCxC9E,MAAM0mB,UAAajH,EAAA,EAQlB,KAAAE,GAEN,MAAMlZ,EAAU1N,KAAK0Q,SAErBhD,EAAQE,OAAO5N,KAAKa,IAAI,QAAS,GAAIb,KAAKa,IAAI,QAAS,IACvD6M,EAAQG,OAAO7N,KAAKa,IAAI,SAAU,GAAIb,KAAKa,IAAI,SAAU,IAEzD,IAAIkO,EAAI/O,KAAKK,QACTiQ,EAAItQ,KAAKM,SAEb,GAA+B,YAA3BN,KAAKa,IAAI,eAA8B,CAE1C,IAAI+sB,EAAKtd,EACLud,EAAK,EACTngB,EAAQE,OAAO,EAAGggB,GAClBlgB,EAAQG,OAAOkB,EAAI,EAAG6e,GAEtBlgB,EAAQE,OAAOmB,EAAI,EAAG8e,GACtBngB,EAAQG,OAAOkB,EAAG8e,E,KAEd,CACJ,IAAIC,EAAK,EACLC,EAAKhf,EAETrB,EAAQE,OAAOkgB,EAAI,GACnBpgB,EAAQG,OAAOigB,EAAIxd,EAAI,GAEvB5C,EAAQE,OAAOmgB,EAAIzd,EAAI,GACvB5C,EAAQG,OAAOkgB,EAAIzd,E,CAErB,EAjCA,qC,gDAAkC,SAClC,sC,gDAA0CoW,EAAA,EAAYzZ,WAAWC,OAAO,CAACygB,EAAK1mB,c,wBCkBxE,MAAM+mB,UAAmBnH,EAAA,EAAhC,c,oBA2BC,sC,gDAA8C7mB,KAAK8mB,YAAY,IAAImH,EAAA,EAClEC,EAAA,GAAS/tB,IAAI,CACZM,UAAW,CAAC,gBAEb,IAAMktB,EAAK5G,KAAK/mB,KAAKI,MAAO,CAC3BK,UAAW,YAAiBT,KAAKgnB,QAAQvZ,SAAS5M,IAAI,YAAa,IAAK,CAAC,OAAQ,SAAU,YACzF,CAACb,KAAKgnB,QAAQvZ,eAYnB,CAhCQ,UAAAwZ,CAAWllB,EAA+CmlB,GAChE,MAAMC,EAASnnB,KAAKonB,cAAcnnB,SAASC,KAAKgnB,EAAaG,QAG7D,OAFAF,EAAO3d,aAAazH,GACpBmlB,EAAahnB,KAAKinB,GACXA,CACR,CAkBU,iBAAAnlB,CAAkBoE,GAC3B/E,MAAMW,kBAAkBoE,GACxBA,EAAU4gB,QAAU,IAAIiH,EAAA,EACvBC,EAAA,GAAS/tB,IAAI,CAAC,IACd,IAAMwtB,EAAK5G,KAAK/mB,KAAKI,MAAO,CAC3BK,UAAW,YAAiB2F,EAAU4gB,QAAQvZ,SAAS5M,IAAI,YAAa,IAAK,CAAC,OAAQ,SAAU,YAC9F,CAACb,KAAKgnB,QAAQvZ,SAAUrH,EAAU4gB,QAAQvZ,YAE/C,EArCA,qC,gDAAkC,eAClC,sC,gDAA0CoZ,EAAA,EAAkB5Z,WAAWC,OAAO,CAAC8gB,EAAW/mB,c,gCCdpF,MAAMknB,UAA4BC,EAAA,EAQ9B,SAAA9sB,GACTtB,KAAKquB,YAAY,gBAAgB,OAAsBruB,KAAKa,IAAI,UAAW,MAC3EQ,MAAMC,WACP,CAEO,eAAAgtB,GACFtuB,KAAKuG,QAAQ,aAChBvG,KAAKgF,IAAI,gBAAgB,OAAsBhF,KAAKa,IAAI,UAAW,MACnEb,KAAKkgB,cAAe,GAGrB7e,MAAMitB,iBACP,EAnBA,qC,gDAAkC,wBAClC,sC,gDAA0CF,EAAA,EAAWnhB,WAAWC,OAAO,CAACihB,EAAoBlnB,c,cCDtF,MAAMsnB,UAA4BH,EAAA,EAQ9B,SAAA9sB,GACTtB,KAAKquB,YAAY,gBAAgB,OAAsBruB,KAAKa,IAAI,UAAW,MAC3EQ,MAAMC,WACP,CAEO,eAAAgtB,GACFtuB,KAAKuG,QAAQ,aAChBvG,KAAKgF,IAAI,gBAAgB,OAAsBhF,KAAKa,IAAI,UAAW,MACnEb,KAAKkgB,cAAe,GAGrB7e,MAAMitB,iBACP,EAnBA,qC,gDAAkC,wBAClC,sC,gDAA0CF,EAAA,EAAWnhB,WAAWC,OAAO,CAACqhB,EAAoBtnB,c,cCMtF,MAAMunB,UAA6BJ,EAAA,EAQ/B,SAAA9sB,GACTtB,KAAKquB,YAAY,eAAgB,KAAcI,QAAQzuB,KAAKa,IAAI,UAAW,MAC3EQ,MAAMC,WACP,CAEO,eAAAgtB,GACFtuB,KAAKuG,QAAQ,aAChBvG,KAAKgF,IAAI,eAAgB,KAAcypB,QAAQzuB,KAAKa,IAAI,UAAW,MACnEb,KAAKkgB,cAAe,GAGrB7e,MAAMitB,iBACP,EAnBA,qC,gDAAkC,yBAClC,sC,gDAA0CF,EAAA,EAAWnhB,WAAWC,OAAO,CAACshB,EAAqBvnB,c,cCtC9F,SAASynB,EAAKC,EAASC,GACrB5uB,KAAK6uB,SAAWF,EAChB3uB,KAAK8uB,GAAKF,CACZ,CA+CO,SAASG,EAAUJ,GACxB,OAAO,IAAID,EAAKC,EAAS,EAC3B,CA/CAD,EAAKM,UAAY,CACfC,UAAW,WACTjvB,KAAKkvB,MAAQ,CACf,EACAC,QAAS,WACPnvB,KAAKkvB,MAAQ5U,GACf,EACA8U,UAAW,WACTpvB,KAAKqvB,GAAKrvB,KAAKsvB,GAAKhV,IACpBta,KAAKuvB,OAAS,CAChB,EACAC,QAAS,WACH,EAAIxvB,KAAK8uB,IAAM9uB,KAAK8uB,GAAK,GAAqB,IAAhB9uB,KAAKuvB,QAAcvvB,KAAK6uB,SAAShhB,OAAO7N,KAAKqvB,GAAIrvB,KAAKsvB,KACpFtvB,KAAKkvB,OAAyB,IAAflvB,KAAKkvB,OAA+B,IAAhBlvB,KAAKuvB,SAAevvB,KAAK6uB,SAASY,YACrEzvB,KAAKkvB,OAAS,IAAGlvB,KAAK8uB,GAAK,EAAI9uB,KAAK8uB,GAAI9uB,KAAKkvB,MAAQ,EAAIlvB,KAAKkvB,MACpE,EACAQ,MAAO,SAAS9gB,EAAGK,GAEjB,OADAL,GAAKA,EAAGK,GAAKA,EACLjP,KAAKuvB,QACX,KAAK,EAAGvvB,KAAKuvB,OAAS,EAAGvvB,KAAKkvB,MAAQlvB,KAAK6uB,SAAShhB,OAAOe,EAAGK,GAAKjP,KAAK6uB,SAASjhB,OAAOgB,EAAGK,GAAI,MAC/F,KAAK,EAAGjP,KAAKuvB,OAAS,EACtB,QACE,GAAIvvB,KAAK8uB,IAAM,EACb9uB,KAAK6uB,SAAShhB,OAAO7N,KAAKqvB,GAAIpgB,GAC9BjP,KAAK6uB,SAAShhB,OAAOe,EAAGK,OACnB,CACL,IAAImB,EAAKpQ,KAAKqvB,IAAM,EAAIrvB,KAAK8uB,IAAMlgB,EAAI5O,KAAK8uB,GAC5C9uB,KAAK6uB,SAAShhB,OAAOuC,EAAIpQ,KAAKsvB,IAC9BtvB,KAAK6uB,SAAShhB,OAAOuC,EAAInB,EAC3B,EAIJjP,KAAKqvB,GAAKzgB,EAAG5O,KAAKsvB,GAAKrgB,CACzB,GCHK,MAAM0gB,UAAuBvB,EAAA,EAQzB,SAAA9sB,GACTtB,KAAKquB,YAAY,eAAgB,GACjChtB,MAAMC,WACP,CAGU,UAAAsuB,CAAW7tB,EAA+C8tB,GACnE,IAAIC,EAASD,EAAEC,OAEXzvB,EAAQL,KAAKa,IAAI,YAAa,MAAMwB,MAAQ,EAE5C0tB,EAAiBhuB,EAASlB,IAAI,YAAagvB,EAAExH,WAC7C2H,EAAiBjuB,EAASlB,IAAI,YAAagvB,EAAEvH,WAC7C2H,EAAiBF,EACjBG,EAAiBF,EAEjBH,EAAE/c,WAAa+c,EAAEtI,OACpBwI,GAAkB1vB,EAClB4vB,GAAkB5vB,GAEVwvB,EAAE/c,WAAa+c,EAAEpI,QACzBuI,GAAkB3vB,EAClB6vB,GAAkB7vB,GAGnB,IAAI8vB,EAAQN,EAAEtI,MAAM9N,qBAAqB1X,EAAU8tB,EAAEO,OAAQL,EAAgBF,EAAEzH,KAC3EiI,EAAQR,EAAEpI,MAAMxN,qBAAqBlY,EAAU8tB,EAAES,OAAQN,EAAgBH,EAAE1H,KAE3EoI,EAAQV,EAAEtI,MAAM9N,qBAAqB1X,EAAU8tB,EAAEO,OAAQH,EAAgBJ,EAAEzH,KAC3EoI,EAAQX,EAAEpI,MAAMxN,qBAAqBlY,EAAU8tB,EAAES,OAAQJ,EAAgBL,EAAE1H,KAE/E,GAAInoB,KAAKywB,eAAeN,GAAQ,CAE/B,MAAMO,EAAU1wB,KAAKupB,SAAS4G,EAAOE,GAC/BM,EAAS,CAACD,EAAQ9hB,EAAG8hB,EAAQzhB,GAE7B2hB,EAAU5wB,KAAKupB,SAASgH,EAAOC,GAC/B9hB,EAAS,CAACkiB,EAAQhiB,EAAGgiB,EAAQ3hB,GAEnC,GAAI4gB,EAAEgB,YAAa,CAClB,IAAIC,EAAoBX,EACpBY,EAAoBV,EACpBW,EAAoBT,EACpBU,EAAoBT,EAWxB,GATIX,EAAE/c,WAAa+c,EAAEtI,OACpBwJ,EAAYlB,EAAEqB,SACdD,EAAYpB,EAAEqB,UAENrB,EAAE/c,WAAa+c,EAAEpI,QACzBqJ,EAAYjB,EAAEsB,SACdH,EAAYnB,EAAEsB,UAGXtB,EAAEuB,QAAS,CACd,IAAIC,EAAStvB,EAASlB,IAAIgvB,EAAEyB,YACxBC,EAASxvB,EAASlB,IAAIgvB,EAAE2B,YAE5B,GAAc,MAAVH,GAA4B,MAAVE,EAgBrB,GAfAxB,EAAiBhuB,EAASlB,IAAI,gBAAiBgvB,EAAEtH,eACjDyH,EAAiBjuB,EAASlB,IAAI,gBAAiBgvB,EAAErH,eAEjDyH,EAAiBF,EACjBG,EAAiBF,EAEbH,EAAE/c,WAAa+c,EAAEtI,OACpBwI,GAAkB1vB,EAClB4vB,GAAkB5vB,GAEVwvB,EAAE/c,WAAa+c,EAAEpI,QACzBuI,GAAkB3vB,EAClB6vB,GAAkB7vB,GAGfwvB,EAAE4B,QAAS,CACd,IAAIC,EAAe3vB,EAASlB,IAAI,gBAC5B8wB,EAAe5vB,EAASlB,IAAI,gBAE5B6wB,GACHZ,EAAYjB,EAAEtI,MAAM9N,qBAAqBiY,EAAc7B,EAAEO,OAAQL,EAAiB2B,EAAanY,UAA6B1Y,IAAI,QAChImwB,EAAYnB,EAAEtI,MAAM9N,qBAAqBiY,EAAc7B,EAAEO,OAAQH,EAAiByB,EAAanY,UAA6B1Y,IAAI,SAG5HgvB,EAAEpI,QAAUoI,EAAE/c,UACjBge,EAAYjB,EAAEsB,SACdH,EAAYnB,EAAEsB,UAENtB,EAAE/c,WAAa+c,EAAEpI,QACzBqJ,EAAYjB,EAAEtI,MAAM9N,qBAAqB1X,EAAU8tB,EAAEyB,WAAYvB,EAAgBF,EAAEzH,KACnF4I,EAAYnB,EAAEtI,MAAM9N,qBAAqB1X,EAAU8tB,EAAEyB,WAAYrB,EAAgBJ,EAAEzH,MAIjFuJ,GACHZ,EAAYlB,EAAEpI,MAAMxN,qBAAqB0X,EAAc9B,EAAES,OAAQN,EAAiB2B,EAAapY,UAA6B1Y,IAAI,QAChIowB,EAAYpB,EAAEpI,MAAMxN,qBAAqB0X,EAAc9B,EAAES,OAAQJ,EAAiByB,EAAapY,UAA6B1Y,IAAI,SAG5HgvB,EAAEtI,QAAUsI,EAAE/c,UACjBie,EAAYlB,EAAEqB,SACdD,EAAYpB,EAAEqB,UAENrB,EAAE/c,WAAa+c,EAAEpI,QACzBsJ,EAAYlB,EAAEpI,MAAMxN,qBAAqBlY,EAAU8tB,EAAE2B,WAAYxB,EAAgBH,EAAE1H,KACnF8I,EAAYpB,EAAEpI,MAAMxN,qBAAqBlY,EAAU8tB,EAAE2B,WAAYtB,EAAgBL,EAAE1H,K,MAKrF2I,EAAYjB,EAAEtI,MAAM9N,qBAAqB1X,EAAU8tB,EAAEyB,WAAYvB,EAAgBF,EAAEzH,KACnF2I,EAAYlB,EAAEpI,MAAMxN,qBAAqBlY,EAAU8tB,EAAE2B,WAAYxB,EAAgBH,EAAE1H,KACnF6I,EAAYnB,EAAEtI,MAAM9N,qBAAqB1X,EAAU8tB,EAAEyB,WAAYrB,EAAgBJ,EAAEzH,KACnF6I,EAAYpB,EAAEpI,MAAMxN,qBAAqBlY,EAAU8tB,EAAE2B,WAAYtB,EAAgBL,EAAE1H,I,CAKtF,IAAIyJ,EAAe5xB,KAAKupB,SAASuH,EAAWC,GACxCc,EAAe7xB,KAAKupB,SAASyH,EAAWC,GAE5CN,EAAO,GAAKiB,EAAahjB,EACzB+hB,EAAO,GAAKiB,EAAa3iB,EAEzBP,EAAO,GAAKmjB,EAAajjB,EACzBF,EAAO,GAAKmjB,EAAa5iB,C,CAG1B6gB,EAAO5vB,KAAKywB,GACZb,EAAO5vB,KAAKwO,GAEZ3M,EAASiD,IAAI,QAAS,CAAC4J,EAAE+hB,EAAO,IAAMjiB,EAAO,GAAKiiB,EAAO,IAAM,EAAG1hB,EAAE0hB,EAAO,IAAMjiB,EAAO,GAAKiiB,EAAO,IAAM,G,CAGvG3wB,KAAKa,IAAI,cACZgvB,EAAEC,OAAS,GACXD,EAAEiC,SAAS5xB,KAAK4vB,GAElB,EAhJA,qC,gDAAkC,mBAClC,sC,gDAA0C1B,EAAA,EAAWnhB,WAAWC,OAAO,CAACyiB,EAAe1oB,c,6ECrCjF,MAAM8qB,E,8BCDN,SAASrC,EAAMsC,EAAMpjB,EAAGK,GAC7B+iB,EAAKnD,SAASoD,cACZD,EAAKE,IAAMF,EAAKG,IAAMH,EAAKI,IAAMJ,EAAKK,KACtCL,EAAKM,IAAMN,EAAKG,IAAMH,EAAKO,IAAMP,EAAKQ,KACtCR,EAAKI,IAAMJ,EAAKG,IAAMH,EAAKE,IAAMtjB,GACjCojB,EAAKO,IAAMP,EAAKG,IAAMH,EAAKM,IAAMrjB,GACjC+iB,EAAKI,IACLJ,EAAKO,IAET,CAEO,SAASE,EAAS9D,EAASF,GAChCzuB,KAAK6uB,SAAWF,EAChB3uB,KAAKmyB,IAAM,EAAI1D,GAAW,CAC5B,C,iCAEAgE,EAASzD,UAAY,CACnBC,UAAW,WACTjvB,KAAKkvB,MAAQ,CACf,EACAC,QAAS,WACPnvB,KAAKkvB,MAAQ5U,GACf,EACA8U,UAAW,WACTpvB,KAAKqyB,IAAMryB,KAAKkyB,IAAMlyB,KAAKoyB,IAC3BpyB,KAAKwyB,IAAMxyB,KAAKsyB,IAAMtyB,KAAKuyB,IAAMjY,IACjCta,KAAKuvB,OAAS,CAChB,EACAC,QAAS,WACP,OAAQxvB,KAAKuvB,QACX,KAAK,EAAGvvB,KAAK6uB,SAAShhB,OAAO7N,KAAKoyB,IAAKpyB,KAAKuyB,KAAM,MAClD,KAAK,EAAG7C,EAAM1vB,KAAMA,KAAKkyB,IAAKlyB,KAAKsyB,MAEjCtyB,KAAKkvB,OAAyB,IAAflvB,KAAKkvB,OAA+B,IAAhBlvB,KAAKuvB,SAAevvB,KAAK6uB,SAASY,YACzEzvB,KAAKkvB,MAAQ,EAAIlvB,KAAKkvB,KACxB,EACAQ,MAAO,SAAS9gB,EAAGK,GAEjB,OADAL,GAAKA,EAAGK,GAAKA,EACLjP,KAAKuvB,QACX,KAAK,EAAGvvB,KAAKuvB,OAAS,EAAGvvB,KAAKkvB,MAAQlvB,KAAK6uB,SAAShhB,OAAOe,EAAGK,GAAKjP,KAAK6uB,SAASjhB,OAAOgB,EAAGK,GAAI,MAC/F,KAAK,EAAGjP,KAAKuvB,OAAS,EAAGvvB,KAAKkyB,IAAMtjB,EAAG5O,KAAKsyB,IAAMrjB,EAAG,MACrD,KAAK,EAAGjP,KAAKuvB,OAAS,EACtB,QAASG,EAAM1vB,KAAM4O,EAAGK,GAE1BjP,KAAKqyB,IAAMryB,KAAKkyB,IAAKlyB,KAAKkyB,IAAMlyB,KAAKoyB,IAAKpyB,KAAKoyB,IAAMxjB,EACrD5O,KAAKwyB,IAAMxyB,KAAKsyB,IAAKtyB,KAAKsyB,IAAMtyB,KAAKuyB,IAAKvyB,KAAKuyB,IAAMtjB,CACvD,GAGF,KAAe,SAAUyjB,EAAOjE,GAE9B,SAASkE,EAAShE,GAChB,OAAO,IAAI8D,EAAS9D,EAASF,EAC/B,CAMA,OAJAkE,EAASlE,QAAU,SAASA,GAC1B,OAAOiE,GAAQjE,EACjB,EAEOkE,CACR,CAXD,CAWG,E","sources":["webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/Axis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisBullet.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRendererX.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRendererY.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/DateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/GaplessDateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/ValueAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/Candlestick.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/CandlestickSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/ColumnSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChartScrollbar.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/CategoryAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/CategoryDateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/DurationAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/OHLC.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/OHLCSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedYLineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedXLineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedXYLineSeries.ts","webpack://@amcharts/amcharts5/./node_modules/d3-shape/src/curve/step.js","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/StepLineSeries.ts","webpack://@amcharts/amcharts5/./tmp/webpack/xy.js","webpack://@amcharts/amcharts5/./node_modules/d3-shape/src/curve/cardinal.js"],"sourcesContent":["import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { XYSeries, IXYSeriesDataItem } from \"../series/XYSeries\";\nimport type { Animation } from \"../../../core/util/Entity\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Root } from \"../../../core/Root\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Component, IComponentSettings, IComponentPrivate, IComponentEvents, IComponentDataItem } from \"../../../core/render/Component\";\nimport { Container } from \"../../../core/render/Container\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport { List } from \"../../../core/util/List\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\n\n\n\nexport interface IAxisSettings<R extends AxisRenderer> extends IComponentSettings {\n\t/**\n\t * A renderer object which is responsible of rendering visible axis elements.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n\t */\n\trenderer: R;\n\n\t/**\n\t * The initial relative zoom start position of the axis.\n\t *\n\t * E.g. stting it to `0.1` will pre-zoom axis to 10% from the start.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tstart?: number;\n\n\t/**\n\t * The initial relative zoom end position of the axis.\n\t *\n\t * E.g. stting it to `0.9` will pre-zoom axis to 10% from the end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tend?: number;\n\n\t/**\n\t * Maximum number of times the scope of the axis could auto-zoom-in.\n\t *\n\t * This is to prevent axis jumping too drastically when scrolling/zooming.\n\t *\n\t * @default 1000\n\t */\n\tmaxZoomFactor?: number | null;\n\n\t/**\n\t * Maximum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed out beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tmaxZoomCount?: number;\n\n\t/**\n\t * Minimum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed in beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tminZoomCount?: number;\n\n\t/**\n\t * Base value of the axis.\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * horizontally, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * vertically, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * horizontally, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * vertically, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomY?: boolean;\n\n\t/**\n\t * Set this to `false` to prevent axis from being zoomed.\n\t */\n\tzoomable?:boolean;\n\n\t/**\n\t * A relative distance the axis is allowed to be zoomed/panned beyond its\n\t * actual scope.\n\t *\n\t * @default 0.1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Over_zooming} for more info\n\t */\n\tmaxDeviation?: number;\n\n\t/**\n\t * [[Tooltip]] element to use for axis.\n\t */\n\ttooltip?: Tooltip;\n\n\t/**\n\t * `tooltipLocation` indicates\n\t * which relative place to snap to: `0` beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\ttooltipLocation?: number;\n\n\t/**\n\t * Should tooltip snap to the `tooltipLocation` (`true`) or follow cursor.\n\t *\n\t * @default true\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * If set to `true` (default) the axis width will stay constant across all\n\t * zooms, even if actual length of all visible labels changes.\n\t *\n\t * @default true\n\t */\n\tfixAxisSize?: boolean;\n\n\t/**\n\t * A function that will be used to create bullets on each cell.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_bullets} for more info\n\t */\n\tbullet?: (root: Root, axis: Axis<AxisRenderer>, dataItem: DataItem<IAxisDataItem>) => AxisBullet;\n}\n\nexport interface IAxisEvents extends IComponentEvents {\n}\n\nexport interface IAxisPrivate extends IComponentPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tname?: \"value\" | \"date\" | \"category\";\n\n\t/**\n\t * @ignore\n\t */\n\tupdateScrollbar?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tmaxZoomFactor?: number | null;\n\n\t/**\n\t * Saves position to which tooltip points.\n\t */\n\ttooltipPosition?: number;\n\n\t/**\n\t * Width in pixels between grid lines (read-only).\n\t * \n\t * It might not be exact, as [[DateAxis]] can have grids at irregular\n\t * intervals.\n\t * \n\t * Could be used to detect when size changes and to adjust labels for them\n\t * not to overlap.\n\t */\n\tcellWidth?: number;\n\n}\n\nexport interface IAxisDataItem extends IComponentDataItem {\n\n\t/**\n\t * Axis label element.\n\t */\n\tlabel?: AxisLabel;\n\n\t/**\n\t * Tick element.\n\t */\n\ttick?: AxisTick;\n\n\t/**\n\t * Grid line element.\n\t */\n\tgrid?: Grid;\n\n\t/**\n\t * Axis fill element.\n\t */\n\taxisFill?: Graphics;\n\n\t/**\n\t * Bullet element.\n\t */\n\tbullet?: AxisBullet;\n\n\t/**\n\t * Indicates if this data item represents an axis range.\n\t */\n\tisRange?: boolean;\n\n\t/**\n\t * If set to `true`, the grid and axis fill of this data item will be drawn\n\t * above series.\n\t *\n\t * NOTE: this needs to be set **before** crating an axis range. Updating this\n\t * dynamically won't have any effect.\n\t *\n\t * NOTE: if you need all grid to be drawn above series, you can brig it to\n\t * front with `chart.gridContainer.toFront();`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Grid_fill_above_series} for more info\n\t * @default false\n\t */\n\tabove?: boolean\n\n}\n\n/**\n * A base class for all axes.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Adding_axes} for more info\n */\nexport abstract class Axis<R extends AxisRenderer> extends Component {\n\tpublic static className: string = \"Axis\";\n\tpublic static classNames: Array<string> = Component.classNames.concat([Axis.className]);\n\n\tdeclare public _settings: IAxisSettings<R>;\n\tdeclare public _privateSettings: IAxisPrivate;\n\tdeclare public _dataItemSettings: IAxisDataItem;\n\tdeclare public _events: IAxisEvents;\n\n\tdeclare public _seriesType: XYSeries;\n\n\tprotected _series: Array<this[\"_seriesType\"]> = [];\n\n\tpublic _isPanning: boolean = false;\n\n\t/**\n\t * Array of minor data items.\n\t */\n\tpublic  minorDataItems: Array<DataItem<this[\"_dataItemSettings\"]>> = [];\n\n\t/**\n\t * A [[Container]] that holds all the axis label elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly labelsContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A [[Container]] that holds all the axis grid and fill elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds axis grid elements which goes above the series.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds all the axis bullet elements.\n\t *\n\t * @default new Container\n\t */\n\tpublic readonly bulletsContainer: Container = this.children.push(Container.new(this._root, { isMeasured: false, width: p100, height: p100, position: \"absolute\" }));\n\n\t/**\n\t * A referenece to the the chart the axis belongs to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _rangesDirty: Boolean = false;\n\n\tpublic _panStart: number = 0;\n\tpublic _panEnd: number = 1;\n\n\tprotected _sAnimation?: Animation<this[\"_settings\"][\"start\"]>;\n\tprotected _eAnimation?: Animation<this[\"_settings\"][\"end\"]>;\n\n\tpublic _skipSync: boolean = false;\n\n\t/**\n\t * A list of axis ranges.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @default new List()\n\t */\n\tpublic readonly axisRanges: List<DataItem<this[\"_dataItemSettings\"]>> = new List();\n\n\tpublic _seriesAxisRanges: Array<DataItem<this[\"_dataItemSettings\"]>> = [];\n\n\t/**\n\t * A control label that is invisible but is used to keep width the width of\n\t * the axis constant.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Ghost_label} for more info\n\t */\n\tpublic ghostLabel!: AxisLabel;\n\n\tprotected _cursorPosition: number = -1;\n\n\tprotected _snapToSeries?: Array<XYSeries>;\n\n\tpublic _seriesValuesDirty = false;\n\n\tpublic _seriesAdded = false;\n\n\t/**\n\t * A container above the axis that can be used to add additional stuff into\n\t * it. For example a legend, label, or an icon.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default new Container\n\t */\n\tpublic axisHeader: Container = this.children.push(Container.new(this._root, {\n\t\tthemeTags: [\"axis\", \"header\"],\n\t\tposition: \"absolute\",\n\t\tbackground: Rectangle.new(this._root, {\n\t\t\tthemeTags: [\"header\", \"background\"],\n\t\t\tfill: this._root.interfaceColors.get(\"background\")\n\t\t})\n\t}));\n\n\tpublic _bullets: { [index: string]: AxisBullet } = {};\n\n\tprotected _dispose() {\n\t\t// these could be in other parents, so disposing just in case\n\t\tthis.gridContainer.dispose();\n\t\tthis.topGridContainer.dispose();\n\t\tthis.bulletsContainer.dispose();\n\t\tthis.labelsContainer.dispose();\n\t\tthis.axisHeader.dispose();\n\t\tsuper._dispose();\n\t}\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.setPrivate(\"updateScrollbar\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (dataItem) => {\n\t\t\t\t\tdataItem.dispose();\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis.disposeDataItem(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._processAxisRange(change.value, [\"range\"]);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\tif (renderer) {\n\t\t\trenderer.axis = this;\n\t\t\trenderer.processAxis();\n\t\t}\n\t\tthis.children.push(renderer);\n\t\tthis.ghostLabel = renderer.makeLabel(new DataItem(this, undefined, {}), []);\n\t\tthis.ghostLabel.adapters.disable(\"text\");\n\t\tthis.ghostLabel.setAll({ opacity: 0, tooltipText: undefined, tooltipHTML: undefined, interactive: false });\n\t\tthis.ghostLabel.events.disable();\n\t}\n\n\tprotected _updateFinals(_start: number, _end: number) {\n\n\t}\n\n\t/**\n\t * Zooms the axis to relative locations.\n\t *\n\t * Both `start` and `end` are relative: 0 means start of the axis, 1 - end.\n\t *\n\t * @param   start     Relative start\n\t * @param   end       Relative end\n\t * @param   duration  Duration of the zoom animation in milliseconds\n\t * @return            Zoom animation\n\t */\n\tpublic zoom(start: number, end: number, duration?: number, priority?: \"start\" | \"end\"): Animation<this[\"_settings\"][\"start\"]> | Animation<this[\"_settings\"][\"end\"]> | undefined {\n\t\tif(this.get(\"zoomable\", true)){\n\t\t\tthis._updateFinals(start, end);\n\n\t\t\tif (this.get(\"start\") !== start || this.get(\"end\") != end) {\n\t\t\t\tlet sAnimation = this._sAnimation;\n\t\t\t\tlet eAnimation = this._eAnimation;\n\n\t\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\t\tif (start < - maxDeviation) {\n\t\t\t\t\tstart = -maxDeviation;\n\t\t\t\t}\n\n\t\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\t\tend = 1 + maxDeviation;\n\t\t\t\t}\n\n\t\t\t\tif (start > end) {\n\t\t\t\t\t[start, end] = [end, start];\n\t\t\t\t}\n\n\t\t\t\tif (!$type.isNumber(duration)) {\n\t\t\t\t\tduration = this.get(\"interpolationDuration\", 0);\n\t\t\t\t}\n\n\t\t\t\tif (!priority) {\n\t\t\t\t\tpriority = \"end\";\n\t\t\t\t}\n\n\t\t\t\tlet maxZoomFactor = this.getPrivate(\"maxZoomFactor\", this.get(\"maxZoomFactor\", 100));\n\t\t\t\tlet maxZoomFactorReal = maxZoomFactor;\n\n\t\t\t\tif (end === 1 && start !== 0) {\n\t\t\t\t\tif (start < this.get(\"start\", 0)) {\n\t\t\t\t\t\tpriority = \"start\";\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tpriority = \"end\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (start === 0 && end !== 1) {\n\t\t\t\t\tif (end > this.get(\"end\", 1)) {\n\t\t\t\t\t\tpriority = \"end\";\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tpriority = \"start\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet minZoomCount = this.get(\"minZoomCount\", 0);\n\t\t\t\tlet maxZoomCount = this.get(\"maxZoomCount\", Infinity);\n\n\t\t\t\tif ($type.isNumber(minZoomCount)) {\n\t\t\t\t\tmaxZoomFactor = maxZoomFactorReal / minZoomCount;\n\t\t\t\t}\n\n\t\t\t\tlet minZoomFactor: number = 1;\n\n\t\t\t\tif ($type.isNumber(maxZoomCount)) {\n\t\t\t\t\tminZoomFactor = maxZoomFactorReal / maxZoomCount;\n\t\t\t\t}\n\n\t\t\t\t// most likely we are dragging left scrollbar grip here, so we tend to modify end\n\t\t\t\tif (priority === \"start\") {\n\t\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t\t// add to the end\n\t\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\t\tend = start + 1 / minZoomFactor;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// add to the end\n\t\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t\t//unless end is > 0\n\t\t\t\t\tif (end > 1 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t\t//end = 1;\n\t\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// most likely we are dragging right, so we modify left\n\t\t\t\telse {\n\t\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t\t// add to the end\n\t\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\t\tstart = end - 1 / minZoomFactor;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// remove from start\n\t\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t\tif (start < 0 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t\t//start = 0;\n\t\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t}\n\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t}\n\n\t\t\t\tif (maxZoomCount != null && minZoomCount != null && (start == this.get(\"start\") && end == this.get(\"end\"))) {\n\t\t\t\t\tconst chart = this.chart;\n\t\t\t\t\tif (chart) {\n\t\t\t\t\t\tchart._handleAxisSelection(this, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (((sAnimation && sAnimation.playing && sAnimation.to == start) || this.get(\"start\") == start) && ((eAnimation && eAnimation.playing && eAnimation.to == end) || this.get(\"end\") == end)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\n\t\t\t\tif (duration > 0) {\n\t\t\t\t\tlet easing = this.get(\"interpolationEasing\");\n\t\t\t\t\tlet sAnimation, eAnimation;\n\t\t\t\t\tif (this.get(\"start\") != start) {\n\t\t\t\t\t\tsAnimation = this.animate({ key: \"start\", to: start, duration: duration, easing: easing });\n\t\t\t\t\t}\n\t\t\t\t\tif (this.get(\"end\") != end) {\n\t\t\t\t\t\teAnimation = this.animate({ key: \"end\", to: end, duration: duration, easing: easing });\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._sAnimation = sAnimation;\n\t\t\t\t\tthis._eAnimation = eAnimation;\n\n\t\t\t\t\tif (sAnimation) {\n\t\t\t\t\t\treturn sAnimation;\n\t\t\t\t\t}\n\t\t\t\t\telse if (eAnimation) {\n\t\t\t\t\t\treturn eAnimation;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.set(\"start\", start);\n\t\t\t\t\tthis.set(\"end\", end);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this._sAnimation) {\n\t\t\t\t\tthis._sAnimation.stop();\n\t\t\t\t}\n\t\t\t\tif (this._eAnimation) {\n\t\t\t\t\tthis._eAnimation.stop();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * A list of series using this axis.\n\t *\n\t * @return Series\n\t */\n\tpublic get series(): Array<this[\"_seriesType\"]> {\n\t\treturn this._series;\n\t}\n\n\n\tpublic _processAxisRange(dataItem: DataItem<this[\"_dataItemSettings\"]>, themeTags: Array<string>) {\n\t\tdataItem.setRaw(\"isRange\", true);\n\t\tthis._createAssets(dataItem, themeTags);\n\t\tthis._rangesDirty = true;\n\t\tthis._prepareDataItem(dataItem);\n\n\t\tconst above = dataItem.get(\"above\");\n\t\tconst container = this.topGridContainer;\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (above && grid) {\n\t\t\tcontainer.children.moveValue(grid);\n\t\t}\n\n\t\tconst fill = dataItem.get(\"axisFill\");\n\t\tif (above && fill) {\n\t\t\tcontainer.children.moveValue(fill);\n\t\t}\n\t}\n\n\tpublic _prepareDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>, _index?: number) { }\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getX(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getY(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t}\n\n\tpublic _calculateTotals() {\n\t}\n\n\tprotected _updateAxisRanges() {\n\t\tthis._bullets = {};\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\n\t\t$array.each(this._seriesAxisRanges, (axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract baseValue(): any;\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.get(\"fixAxisSize\")) {\n\t\t\tthis.ghostLabel.set(\"visible\", true);\n\t\t}\n\t\telse {\n\t\t\tthis.ghostLabel.set(\"visible\", false);\n\t\t}\n\n\t\tif (this.isDirty(\"start\") || this.isDirty(\"end\")) {\n\t\t\tconst chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tchart._updateCursor();\n\t\t\t}\n\n\t\t\tlet start = this.get(\"start\", 0);\n\t\t\tlet end = this.get(\"end\", 1);\n\n\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\tif (start < -maxDeviation) {\n\t\t\t\tlet delta = start + maxDeviation;\n\t\t\t\tstart = -maxDeviation;\n\t\t\t\tthis.setRaw(\"start\", start);\n\t\t\t\tif (this.isDirty(\"end\")) {\n\t\t\t\t\tthis.setRaw(\"end\", end - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\tlet delta = end - 1 - maxDeviation;\n\t\t\t\tend = 1 + maxDeviation;\n\t\t\t\tthis.setRaw(\"end\", end);\n\n\t\t\t\tif (this.isDirty(\"start\")) {\n\t\t\t\t\tthis.setRaw(\"start\", start - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\trenderer._start = this.get(\"start\")!;\n\t\trenderer._end = this.get(\"end\")!;\n\t\trenderer._inversed = renderer.get(\"inversed\", false);\n\t\trenderer._axisLength = renderer.axisLength() / (renderer._end - renderer._start);\n\t\trenderer._updateLC();\n\n\t\tif (this.isDirty(\"tooltip\")) {\n\t\t\tconst tooltip = this.get(\"tooltip\");\n\t\t\tif (tooltip) {\n\t\t\t\tconst rendererTags = renderer.get(\"themeTags\");\n\t\t\t\ttooltip.addTag(\"axis\");\n\t\t\t\ttooltip.addTag(this.className.toLowerCase());\n\t\t\t\ttooltip._applyThemes();\n\n\t\t\t\tif (rendererTags) {\n\t\t\t\t\ttooltip.set(\"themeTags\", $utils.mergeTags(tooltip.get(\"themeTags\"), rendererTags));\n\t\t\t\t\ttooltip.label._applyThemes();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateTooltipBounds() {\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tif (tooltip) {\n\t\t\tthis.get(\"renderer\").updateTooltipBounds(tooltip);\n\t\t}\n\t}\n\n\tpublic _updateBounds() {\n\t\tsuper._updateBounds();\n\t\tthis._updateTooltipBounds();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processChart(chart: XYChart) {\n\t\tthis.chart = chart;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\trenderer.chart = chart;\n\t\tchart.gridContainer.children.push(this.gridContainer);\n\t\tchart.topGridContainer.children.push(this.topGridContainer);\n\n\t\tchart.axisHeadersContainer.children.push(this.axisHeader);\n\n\t\tthis.on(\"start\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\t\tthis.on(\"end\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\n\t\tchart.plotContainer.onPrivate(\"width\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\t\tchart.plotContainer.onPrivate(\"height\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\n\t\tchart.processAxis(this);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic hideDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleFHDataItem(dataItem, true);\n\t\treturn super.hideDataItem(dataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic showDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleFHDataItem(dataItem, false);\n\t\treturn super.showDataItem(dataItem);\n\t}\n\n\tpublic _toggleFHDataItem(dataItem: DataItem<IAxisDataItem>, forceHidden: boolean) {\n\t\tconst fh = \"forceHidden\";\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\tlabel.set(fh, forceHidden);\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\tgrid.set(fh, forceHidden);\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\ttick.set(fh, forceHidden);\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\taxisFill.set(fh, forceHidden);\n\t\t}\n\n\t\tconst bullet = dataItem.get(\"bullet\");\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tsprite.set(fh, forceHidden);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _toggleDataItem(dataItem: DataItem<IAxisDataItem>, visible: boolean) {\n\t\tconst label = dataItem.get(\"label\");\n\t\tconst v = \"visible\";\n\t\tif (label) {\n\t\t\tlabel.setPrivate(v, visible);\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\tgrid.setPrivate(v, visible);\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\ttick.setPrivate(v, visible);\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\taxisFill.setPrivate(v, visible);\n\t\t}\n\n\t\tconst bullet = dataItem.get(\"bullet\");\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setPrivate(v, visible);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract basePosition(): number;\n\n\tpublic _createAssets(dataItem: DataItem<this[\"_dataItemSettings\"]>, tags: Array<string>, minor?: boolean) {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tlet m = \"minor\";\n\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (!label) {\n\t\t\trenderer.makeLabel(dataItem, tags);\n\t\t}\n\t\telse {\n\t\t\tlet themeTags = label.get(\"themeTags\");\n\t\t\tlet remove = false;\n\t\t\tif (minor) {\n\t\t\t\tif (themeTags?.indexOf(m) == -1) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (themeTags?.indexOf(m) != -1) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (remove) {\n\t\t\t\tlabel.parent?.children.removeValue(label);\n\t\t\t\trenderer.makeLabel(dataItem, tags);\n\t\t\t\tlabel.dispose();\n\t\t\t\trenderer.labels.removeValue(label);\n\t\t\t}\n\t\t}\n\n\t\tconst grid = dataItem.get(\"grid\");\n\n\t\tif (!grid) {\n\t\t\trenderer.makeGrid(dataItem, tags);\n\t\t}\n\t\telse {\n\t\t\tlet themeTags = grid.get(\"themeTags\");\n\t\t\tlet remove = false;\n\t\t\tif (minor) {\n\t\t\t\tif (themeTags?.indexOf(m) == -1) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (themeTags?.indexOf(m) != -1) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (remove) {\n\t\t\t\tgrid.parent?.children.removeValue(grid);\n\t\t\t\trenderer.makeGrid(dataItem, tags);\n\t\t\t\tgrid.dispose();\n\t\t\t\trenderer.grid.removeValue(grid);\n\t\t\t}\n\t\t}\n\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (!tick) {\n\t\t\trenderer.makeTick(dataItem, tags);\n\t\t}\n\t\telse {\n\t\t\tlet remove = false;\n\t\t\tlet themeTags = tick.get(\"themeTags\");\n\t\t\tif (minor) {\n\t\t\t\tif (themeTags?.indexOf(m) == -1) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (themeTags?.indexOf(m) != -1) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (remove) {\n\t\t\t\ttick.parent?.children.removeValue(tick);\n\t\t\t\trenderer.makeTick(dataItem, tags);\n\t\t\t\ttick.dispose();\n\t\t\t\trenderer.ticks.removeValue(tick);\n\t\t\t}\n\t\t}\n\n\t\tif (!minor && !dataItem.get(\"axisFill\")) {\n\t\t\trenderer.makeAxisFill(dataItem, tags);\n\t\t}\n\n\t\tthis._processBullet(dataItem);\n\t}\n\n\tprotected _processBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet bullet = dataItem.get(\"bullet\");\n\t\tlet axisBullet = this.get(\"bullet\");\n\n\t\tif (!bullet && axisBullet && !dataItem.get(\"isRange\")) {\n\t\t\tbullet = axisBullet(this._root, this, dataItem);\n\t\t}\n\n\t\tif (bullet) {\n\t\t\tbullet.axis = this;\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\n\t\t\tif (sprite) {\n\t\t\t\tsprite._setDataItem(dataItem);\n\t\t\t\tdataItem.setRaw(\"bullet\", bullet);\n\t\t\t\tif (!sprite.parent) {\n\t\t\t\t\tthis.bulletsContainer.children.push(sprite);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart._updateChartLayout();\n\t\t\tchart.axisHeadersContainer.markDirtySize();\n\t\t}\n\n\t\tthis.get(\"renderer\")._updatePositions();\n\n\t\tthis._seriesAdded = false;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\trenderer.labels.removeValue(label);\n\t\t\tlabel.dispose();\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\trenderer.ticks.removeValue(tick);\n\t\t\ttick.dispose();\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\trenderer.grid.removeValue(grid);\n\t\t\tgrid.dispose();\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\trenderer.axisFills.removeValue(axisFill);\n\t\t\taxisFill.dispose();\n\t\t}\n\t\tconst bullet = dataItem.get(\"bullet\");\n\n\t\tif (bullet) {\n\t\t\tbullet.dispose();\n\t\t}\n\t}\n\n\tprotected _updateGhost() {\n\t\tthis.setPrivate(\"cellWidth\", this.getCellWidthPosition() * this.get(\"renderer\").axisLength());\n\t\tconst ghostLabel = this.ghostLabel;\n\t\tif (!ghostLabel.isHidden()) {\n\t\t\tconst bounds = ghostLabel.localBounds();\n\t\t\tconst gWidth = Math.ceil(bounds.right - bounds.left);\n\t\t\tlet text = ghostLabel.get(\"text\");\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label && !label.isHidden()) {\n\t\t\t\t\tconst bounds = label.localBounds();\n\t\t\t\t\tconst w = Math.ceil(bounds.right - bounds.left);\n\n\t\t\t\t\tif (w > gWidth) {\n\t\t\t\t\t\ttext = label.text._getText();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tghostLabel.set(\"text\", text);\n\t\t}\n\t\tlet start = this.get(\"start\", 0);\n\t\tlet end = this.get(\"end\", 1);\n\t\tthis.get(\"renderer\").updateLabel(ghostLabel, start + (end - start) * 0.5);\n\t}\n\n\tpublic _handleCursorPosition(position: number, snapToSeries?: Array<XYSeries>) {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tposition = renderer.toAxisPosition(position);\n\n\t\tthis._cursorPosition = position;\n\t\tthis._snapToSeries = snapToSeries;\n\n\t\tthis.updateTooltip();\n\t}\n\n\t/**\n\t * Can be called when axis zoom changes and you need to update tooltip\n\t * position.\n\t */\n\tpublic updateTooltip() {\n\t\tconst snapToSeries = this._snapToSeries;\n\t\tlet position = this._cursorPosition;\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\tif ($type.isNumber(position)) {\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\tconst dataItem = this.getSeriesItem(series, position!, this.get(\"tooltipLocation\"));\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif (snapToSeries && snapToSeries.indexOf(series) != -1) {\n\t\t\t\t\t\tseries.updateLegendMarker(dataItem);\n\t\t\t\t\t\tseries.updateLegendValue(dataItem);\n\t\t\t\t\t\tseries._settings.tooltipDataItem = dataItem;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tseries.showDataItemTooltip(dataItem);\n\t\t\t\t\t\tseries.setRaw(\"tooltipDataItem\", dataItem);\n\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (this.get(\"snapTooltip\")) {\n\t\t\t\tposition = this.roundAxisPosition(position, this.get(\"tooltipLocation\", 0.5));\n\t\t\t}\n\t\t\t\n\t\t\tthis.setPrivateRaw(\"tooltipPosition\", position);\n\n\t\t\tif (tooltip) {\n\t\t\t\trenderer.updateTooltipBounds(tooltip);\n\n\t\t\t\tif (!$type.isNaN(position)) {\t\t\t\t\t\n\t\t\t\t\tthis._updateTooltipText(tooltip, position);\n\t\t\t\t\trenderer.positionTooltip(tooltip, position);\n\n\t\t\t\t\tif (position < this.get(\"start\", 0) || position > this.get(\"end\", 1)) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show(0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip.label.set(\"text\", this.getTooltipText(position));\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position        Position\n\t * @param   adjustPosition  Adjust position\n\t * @return                  Tooltip text\n\t */\n\tpublic abstract getTooltipText(position: number, adjustPosition?: boolean): string | undefined;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, _location: number): number {\n\t\treturn position;\n\t}\n\n\tpublic _handleSeriesRemoved() {\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorShow() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.show();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.hide();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processSeriesDataItem(_dataItem: DataItem<IXYSeriesDataItem>, _fields: Array<string>) {\n\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._sizeDirty = false;\n\t\tthis._rangesDirty = false;\n\t}\n\n\t/**\n\t * Converts pixel coordinate to a relative position on axis.\n\t *\n\t * @param   coordinate  Coordinate\n\t * @return              Relative position\n\t */\n\tpublic coordinateToPosition(coordinate: number): number {\n\t\tconst renderer = this.get(\"renderer\");\n\t\treturn renderer.toAxisPosition(coordinate / renderer.axisLength());\n\t}\n\n\t/**\n\t * Converts relative position of the plot area to relative position of the\n\t * axis with zoom taken into account.\n\t *\n\t * @param position Position\n\t * @return Relative position\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\treturn this.get(\"renderer\").toAxisPosition(position);\n\t}\n\n\t/**\n\t * Converts relative position of the axis to a global position taking current\n\t * zoom into account (opposite to what `toAxisPosition` does).\n\t *\n\t * @since 5.4.2\n\t * @param position Position\n\t * @return Global position\n\t */\n\tpublic toGlobalPosition(position: number): number {\n\t\treturn this.get(\"renderer\").toGlobalPosition(position);\n\t}\n\n\t/**\n\t * Adjusts position with inversed taken into account.\n\t *\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number): number {\n\t\treturn this.get(\"renderer\").fixPosition(position);\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic abstract getSeriesItem(series: XYSeries, position: number, location?: number): DataItem<IXYSeriesDataItem> | undefined\n\n\t/**\n\t * @ignore\n\t */\n\tpublic shouldGap(_dataItem: DataItem<IXYSeriesDataItem>, _nextItem: DataItem<IXYSeriesDataItem>, _autoGapCount: number, _fieldName: string): boolean {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): DataItem<this[\"_dataItemSettings\"]> {\n\t\treturn this.axisRanges.push(axisDataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _groupSeriesData(_series: XYSeries) { }\n\n\t/**\n\t * Returns relative position between two grid lines of the axis.\n\t *\n\t * @return Position\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\treturn 0.05;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract nextPosition(_count?:number):number\n}\n","import { Entity, IEntitySettings, IEntityPrivate } from \"../../../core/util/Entity\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Axis } from \"./Axis\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport * as $object from \"../../../core/util/Object\";\n\nexport interface IAxisBulletSettings extends IEntitySettings {\n\n\t/**\n\t * Relative location of the bullet within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tlocation?: number;\n\n\t/**\n\t * A visual element of the bullet.\n\t */\n\tsprite: Sprite;\n\n\t/**\n\t * Indicates if the bullet should be stacked on top of another bullet if it's\n\t * on the same position.\n\t *\n\t * Will work on horizontal or vertical axes only.\n\t *\n\t * @since 5.2.28\n\t * @default false\n\t */\n\tstacked?: boolean;\n\n}\n\nexport interface IAxisBulletPrivate extends IEntityPrivate {\n}\n\n/**\n * Draws a bullet on an axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_bullets} for more info\n */\nexport class AxisBullet extends Entity {\n\n\t/**\n\t * Target axis object.\n\t */\n\tpublic axis: Axis<AxisRenderer> | undefined;\n\n\tdeclare public _settings: IAxisBulletSettings;\n\tdeclare public _privateSettings: IAxisBulletPrivate;\n\n\tpublic static className: string = \"AxisBullet\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([AxisBullet.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tconst sprite = this.get(\"sprite\");\n\n\t\tif (this.isDirty(\"sprite\")) {\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setAll({ position: \"absolute\", role: \"figure\" });\n\t\t\t\tthis._disposers.push(sprite);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"location\")) {\n\t\t\tconst dataItem = sprite.dataItem;\n\t\t\tif (this.axis && sprite && dataItem) {\n\t\t\t\tthis.axis._prepareDataItem(dataItem as any)\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _dispose() {\n\t\tconst axis = this.axis;\n\t\tif (axis) {\n\t\t\t$object.each(axis._bullets, (key, bullet) => {\n\t\t\t\tif (bullet.uid == this.uid) {\n\t\t\t\t\tdelete axis._bullets[key];\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tsuper._dispose();\n\t}\n}\n","import { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\n\nexport interface IAxisRendererXSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean;\n}\n\nexport interface IAxisRendererXPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render horizontal axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererX extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererX\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererX.className]);\n\n\tdeclare public _settings: IAxisRendererXSettings;\n\tdeclare public _privateSettings: IAxisRendererXPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tpublic thumb: Rectangle = Rectangle.new(this._root, { width: p100, isMeasured: false, themeTags: [\"axis\", \"x\", \"thumb\"] });\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"x\"]);\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"X\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"height\", p100);\n\t\tgridTemplate.set(\"width\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, graphics.height());\n\t\t});\n\n\t\tthis.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\t\taxis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\n\t\taxis.ghostLabel.set(\"x\", -1000);\n\n\t\tconst opposite = \"opposite\"\n\t\tconst inside = \"inside\";\n\n\t\tif (this.isDirty(opposite) || this.isDirty(inside)) {\n\t\t\tconst chart = this.chart;\n\t\t\tconst axisChildren = axis.children;\n\n\t\t\tif (this.get(inside)) {\n\t\t\t\taxis.addTag(inside);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.removeTag(inside);\n\t\t\t}\n\n\t\t\tif (chart) {\n\t\t\t\tif (this.get(opposite)) {\n\t\t\t\t\tconst children = chart.topAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.insertIndex(0, axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.addTag(opposite);\n\t\t\t\t\taxisChildren.moveValue(this);\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst children = chart.bottomAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.removeTag(opposite);\n\n\t\t\t\t\taxisChildren.moveValue(this, 0);\n\n\t\t\t\t}\n\n\t\t\t\taxis.ghostLabel._applyThemes();\n\t\t\t\tthis.labels.each((label) => {\n\t\t\t\t\tlabel._applyThemes();\n\t\t\t\t})\n\t\t\t\tthis.root._markDirtyRedraw();\n\t\t\t}\n\t\t\taxis.markDirtySize();\n\t\t}\n\n\t\tthis.thumb.setPrivate(\"height\", axis.labelsContainer.height());\n\t}\n\n\n\tprotected _getPan(point1: IPoint, point2: IPoint): number {\n\t\treturn (point2.x - point1.x) / this.width();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toGlobalPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = position - start;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\tposition = position / (end - start) * this._lc\n\n\t\tposition += this._ls;\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst w = parent.innerWidth();\n\t\t\tthis._lc = this.axisLength() / w;\n\t\t\tthis._ls = (axis.x() - parent.get(\"paddingLeft\", 0)) / w;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\tconst x = axis.x() - $utils.relativeToValue(axis.get(\"centerX\", 0), axis.width()) - axis.parent!.get(\"paddingLeft\", 0);\n\t\taxis.gridContainer.set(\"x\", x);\n\t\taxis.topGridContainer.set(\"x\", x);\n\t\taxis.bulletsContainer.set(\"y\", this.y());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet width = axis.get(\"marginLeft\", 0);\n\n\t\t\tlet x = axis.x() - width;\n\n\t\t\tconst parent = axis.parent;\n\t\t\tif (parent) {\n\t\t\t\tx -= parent.get(\"paddingLeft\", 0);\n\t\t\t}\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\twidth = axis.axisHeader.width();\n\t\t\t\taxis.set(\"marginLeft\", width + 1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"width\", width);\n\t\t\t}\n\t\t\taxisHeader.setAll({ x: x, y: -1, height: plotContainer.height() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\tif (axis.get(\"width\") == null) {\n\t\t\taxis.set(\"width\", p100);\n\t\t};\n\t\tconst verticalLayout = this._root.verticalLayout;\n\t\taxis.set(\"layout\", verticalLayout);\n\t\taxis.labelsContainer.set(\"width\", p100);\n\t\taxis.axisHeader.setAll({ layout: verticalLayout });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.width();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: this.positionToCoordinate(position), y: 0 };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"x\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"y\", p100);\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttick.set(\"y\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(0, length);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tif (opposite) {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t\tlabel.set(\"y\", p100);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"y\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"x\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tgrid.set(\"x\", this.positionToCoordinate(position));\n\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\t\t\t\tlet bulletPosition = this.axis.roundAxisPosition(position, location);\n\t\t\t\tlet previousBullet = this.axis._bullets[bulletPosition];\n\t\t\t\tlet d = -1;\n\t\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\t\td = 1;\n\t\t\t\t}\n\n\t\t\t\tif (bullet.get(\"stacked\")) {\n\t\t\t\t\tif (previousBullet) {\n\t\t\t\t\t\tlet previousSprite = previousBullet.get(\"sprite\");\n\t\t\t\t\t\tif (previousSprite) {\n\t\t\t\t\t\t\tsprite.set(\"y\", previousSprite.y() + previousSprite.height() * d);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsprite.set(\"y\", 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.axis._bullets[bulletPosition] = bullet;\n\t\t\t\tsprite.set(\"x\", this.positionToCoordinate(position));\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet x0 = this.positionToCoordinate(position);\n\t\t\tlet x1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, x0, x1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, x0: number, x1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t//display.drawRect(x0, 0, x1 - x0, this.axis!.gridContainer.height());\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst h = this.axis!.gridContainer.height();\n\t\t\tconst w = this.width();\n\n\t\t\tif (x1 < x0) {\n\t\t\t\t[x1, x0] = [x0, x1];\n\t\t\t}\n\t\t\tif (x0 > w || x1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/*\n\t\t\tconst limit = 10000;\n\n\t\t\tx0 = Math.max(-limit, x0);\n\t\t\tx1 = Math.min(limit, x1);\n\t\t\t*/\n\n\t\t\tdisplay.moveTo(x0, 0);\n\t\t\tdisplay.lineTo(x1, 0);\n\t\t\tdisplay.lineTo(x1, h);\n\t\t\tdisplay.lineTo(x0, h);\n\t\t\tdisplay.lineTo(x0, 0);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: this.positionToCoordinate(position), y: 0 })\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet x = global.x;\n\t\tlet y = 0;\n\t\tlet w = this.axisLength();\n\t\tlet h = num;\n\n\t\tlet pointerOrientation: \"up\" | \"down\" = \"up\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n}\n","import { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nexport interface IAxisRendererYSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean;\n}\n\nexport interface IAxisRendererYPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render vertical axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererY extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererY\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererY.className]);\n\n\tdeclare public _settings: IAxisRendererYSettings;\n\tdeclare public _privateSettings: IAxisRendererYPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tprotected _downY?: number;\n\n\tpublic thumb: Rectangle = Rectangle.new(this._root, { height: p100, isMeasured: false, themeTags: [\"axis\", \"y\", \"thumb\"] });\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"y\"]);\n\t\tif (this._settings.opposite) {\n\t\t\tthis._settings.themeTags.push(\"opposite\");\n\t\t}\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"Y\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"width\", p100);\n\t\tgridTemplate.set(\"height\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\n\t\tthis.set(\"draw\", (display, renderer) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, renderer.height());\n\t\t});\n\t}\n\n\tprotected _getPan(point1: IPoint, point2: IPoint): number {\n\t\treturn (point1.y - point2.y) / this.height();\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\t\taxis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\n\t\taxis.ghostLabel.set(\"y\", -1000);\n\n\t\tconst thumb = this.thumb;\n\t\tconst opposite = \"opposite\";\n\t\tconst inside = \"inside\";\n\t\tconst chart = this.chart;\n\n\t\tif (this.isDirty(opposite) || this.isDirty(inside)) {\n\n\t\t\tconst axisChildren = axis.children;\n\n\t\t\tif (this.get(inside)) {\n\t\t\t\taxis.addTag(inside);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.removeTag(inside);\n\t\t\t}\n\n\t\t\tif (chart) {\n\t\t\t\tif (this.get(opposite)) {\n\t\t\t\t\tconst children = chart.rightAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis, 0);\n\t\t\t\t\t}\n\t\t\t\t\taxis.addTag(opposite);\n\t\t\t\t\taxisChildren.moveValue(this, 0);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst children = chart.leftAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.removeTag(opposite);\n\n\t\t\t\t\taxisChildren.moveValue(this);\n\t\t\t\t}\n\n\t\t\t\taxis.ghostLabel._applyThemes();\n\t\t\t\tthis.labels.each((label) => {\n\t\t\t\t\tlabel._applyThemes();\n\t\t\t\t})\n\t\t\t\tthis.root._markDirtyRedraw();\n\t\t\t}\n\t\t\taxis.markDirtySize();\n\t\t}\n\n\t\tconst w = axis.labelsContainer.width();\n\n\t\tif (chart) {\n\t\t\tif (this.get(opposite)) {\n\t\t\t\tthumb.set(\"centerX\", 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthumb.set(\"centerX\", w);\n\t\t\t}\n\t\t}\n\n\t\tthumb.setPrivate(\"width\", w);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\tif (axis.get(\"height\") == null) {\n\t\t\taxis.set(\"height\", p100);\n\t\t}\n\t\tconst horizontalLayout = this._root.horizontalLayout;\n\t\taxis.set(\"layout\", horizontalLayout);\n\t\taxis.labelsContainer.set(\"height\", p100);\n\t\taxis.axisHeader.set(\"layout\", horizontalLayout);\n\t}\n\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\tconst y = axis.y() - $utils.relativeToValue(axis.get(\"centerY\", 0), axis.height());\n\t\taxis.gridContainer.set(\"y\", y);\n\t\taxis.topGridContainer.set(\"y\", y);\n\t\taxis.bulletsContainer.set(\"x\", this.x());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet height = axis.get(\"marginTop\", 0);\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\theight = axis.axisHeader.height();\n\t\t\t\taxis.set(\"marginTop\", height + 1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"height\", height);\n\t\t\t}\n\t\t\taxisHeader.setAll({ y: axis.y() - height, x: -1, width: plotContainer.width() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.innerHeight();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: 0, y: this.positionToCoordinate(position) };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (opposite) {\n\t\t\t\tlabel.set(\"x\", 0);\n\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"x\", 0);\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"x\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"y\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tgrid.set(\"y\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"x\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(length, 0);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\n\t\t\t\tlet bulletPosition = this.axis.roundAxisPosition(position, location);\n\t\t\t\tlet previousBullet = this.axis._bullets[bulletPosition];\n\t\t\t\tlet d = 1;\n\t\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\t\td = -1;\n\t\t\t\t}\n\n\t\t\t\tif (bullet.get(\"stacked\")) {\n\t\t\t\t\tif (previousBullet) {\n\t\t\t\t\t\tlet previousSprite = previousBullet.get(\"sprite\");\n\t\t\t\t\t\tif (previousSprite) {\n\t\t\t\t\t\t\tsprite.set(\"x\", previousSprite.x() + previousSprite.width() * d);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsprite.set(\"x\", 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.axis._bullets[bulletPosition] = bullet;\n\n\n\t\t\t\tsprite.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet y0 = this.positionToCoordinate(position);\n\t\t\tlet y1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, y0, y1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, y0: number, y1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst w = this.axis!.gridContainer.width();\n\t\t\tconst h = this.height();\n\n\t\t\tif (y1 < y0) {\n\t\t\t\t[y1, y0] = [y0, y1];\n\t\t\t}\n\n\t\t\tif (y0 > h || y1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//y0 = Math.max(0, y0);\n\t\t\t//y1 = Math.min(h, y1);\n\n\t\t\tdisplay.moveTo(0, y0);\n\t\t\tdisplay.lineTo(w, y0);\n\t\t\tdisplay.lineTo(w, y1);\n\t\t\tdisplay.lineTo(0, y1);\n\t\t\tdisplay.lineTo(0, y0);\n\t\t})\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (!this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: 0, y: this.positionToCoordinate(position) });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet y = global.y;\n\t\tlet x = 0;\n\t\tlet h = this.axisLength();\n\t\tlet w = num;\n\n\t\tlet pointerOrientation: \"left\" | \"right\" = \"right\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst h = parent.innerHeight();\n\t\t\tthis._lc = this.axisLength() / h;\n\t\t\tthis._ls = axis.y() / h;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\n\t\tif (this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toGlobalPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tif (this.get(\"inversed\")) {\n\t\t\tposition = position - start;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\tposition = position / (end - start) * this._lc\n\n\t\tposition += this._ls;\n\n\t\treturn position;\n\t}\n\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (!this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n}\n","import { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport type { XYSeries, IXYSeriesDataItem } from \"../series/XYSeries\";\nimport { ValueAxis, IValueAxisSettings, IValueAxisPrivate, IValueAxisDataItem, IMinMaxStep, IValueAxisEvents } from \"./ValueAxis\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $order from \"../../../core/util/Order\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $object from \"../../../core/util/Object\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $time from \"../../../core/util/Time\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\nimport type { TimeUnit } from \"../../../core/util/Time\";\n\nexport interface IDateAxisSettings<R extends AxisRenderer> extends IValueAxisSettings<R> {\n\n\t/**\n\t * Indicates granularity of data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Data_granularity} for more info\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * IMPORTANT: `startLocation` is not supported by [[GaplessDateAxis]].\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * IMPORTANT: `endLocation` is not supported by [[GaplessDateAxis]].\n\t * \n\t * @default 1\n\t */\n\tendLocation?: number;\n\n\t/**\n\t * Should axis group data items togeter dynamically?\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupData?: boolean;\n\n\t/**\n\t * Maximum number of data items in the view before data grouping kicks in.\n\t *\n\t * @default 500\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupCount?: number;\n\n\t/**\n\t * Force data item grouping to specific interval. This interval must be within groupIntervals array for this to work.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupInterval?: ITimeInterval;\n\n\t/**\n\t * A list of intervals the axis is allowed to group data items into.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * A list of intervals the axis is allowed to show grid/labels on.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Grid_granularity} for more info\n\t */\n\tgridIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * Display \"period change\" labels using different format.\n\t *\n\t * If set to `true`, will use `periodChangeDateFormats` instead\n\t * of `dateFormats` for such labels, e.g. for month start.\n\t *\n\t * @default true\n\t */\n\tmarkUnitChange?: boolean;\n\n\t/**\n\t * Date formats used for intermediate labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tdateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * Date formats used for minor grid labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Minor_grid_formats} for more info\n\t * @since 5.6.0\n\t */\n\tminorDateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * Date formats used for \"period change\" labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tperiodChangeDateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * A date format to use for axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t */\n\ttooltipDateFormat?: string | Intl.DateTimeFormatOptions;\n\n\t/**\n\t * Time unit-specific formats to use for axis tooltip.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t * @since 5.1.4\n\t */\n\ttooltipDateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * A value which indicates relative position within axis cell to get timestamp\n\t * for the tooltip from.\n\t *\n\t * Values are from `-1` to `1`.\n\t *\n\t * If not set, it will use `tooltipLocation` value, if `tooltipLocation`` is\n\t * not set, it will use -0.5.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t * @since 5.1.4\n\t */\n\ttooltipIntervalOffset?: number;\n}\n\nexport interface IDateAxisDataItem extends IValueAxisDataItem {\n}\n\nexport interface IDateAxisPrivate extends IValueAxisPrivate {\n\n\t/**\n\t * Current group interval.\n\t */\n\tgroupInterval?: ITimeInterval;\n\n\t/**\n\t * Current base interval.\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * Current grid interval.\n\t */\n\tgridInterval: ITimeInterval;\n}\n\nexport interface IDateAxisEvents extends IValueAxisEvents {\n\n\t/**\n\t * Kicks in when data grouping is on, and current group interval changes, e.g. via zooming the chart.\n\t *\n\t * @since 5.2.43\n\t */\n\tgroupintervalchanged: {}\n\n}\n\n/**\n * Creates a date axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/} for more info\n * @important\n */\nexport class DateAxis<R extends AxisRenderer> extends ValueAxis<R> {\n\tpublic static className: string = \"DateAxis\";\n\tpublic static classNames: Array<string> = ValueAxis.classNames.concat([DateAxis.className]);\n\n\tdeclare public _settings: IDateAxisSettings<R>;\n\tdeclare public _privateSettings: IDateAxisPrivate;\n\tdeclare public _dataItemSettings: IDateAxisDataItem;\n\tdeclare public _events: IDateAxisEvents;\n\n\tprotected _dataGrouped: boolean = false;\n\tprotected _seriesDataGrouped: boolean = false;\n\tprotected _groupingCalculated: boolean = false;\n\tprotected _intervalDuration: number = 1;\n\tprotected _baseDuration: number = 1;\n\n\tprotected _intervalMax: { [index: string]: number } = {};\n\tprotected _intervalMin: { [index: string]: number } = {};\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tsuper._afterNew();\n\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\tthis.on(\"baseInterval\", () => {\n\t\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\t})\n\t}\n\n\tprotected _setBaseInterval(interval: ITimeInterval) {\n\t\tthis.setPrivateRaw(\"baseInterval\", interval);\n\t\tthis._baseDuration = $time.getIntervalDuration(interval);\n\t}\n\n\tprotected _fixZoomFactor() {\n\t\tconst maxZoomFactor = this.get(\"maxZoomFactor\");\n\t\tif (maxZoomFactor != null && maxZoomFactor != Infinity) {\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", maxZoomFactor);\n\t\t}\n\t\telse {\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", Math.round((this.getPrivate(\"max\", 0) - this.getPrivate(\"min\", 0)) / this.baseMainDuration()));\n\t\t}\n\t}\n\n\tprotected _groupData() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif (($type.isNumber(min) && $type.isNumber(max))) {\n\n\t\t\tthis._fixZoomFactor();\n\n\t\t\tconst groupInterval = this.getPrivate(\"groupInterval\")!;\n\t\t\tif (groupInterval) {\n\t\t\t\tthis._setBaseInterval(groupInterval);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\t\t}\n\n\n\t\t\tif (this.isDirty(\"groupInterval\")) {\n\t\t\t\tlet groupInterval = this.get(\"groupInterval\")!;\n\t\t\t\tif (groupInterval) {\n\t\t\t\t\tthis.setRaw(\"groupIntervals\", [groupInterval]);\n\t\t\t\t\tthis._handleRangeChange();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.isDirty(\"groupData\")) {\n\t\t\t\tif (!this._dataGrouped) {\n\t\t\t\t\tif (this.get(\"groupData\")) {\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tthis._groupSeriesData(series);\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tthis._handleRangeChange();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\t\t\t\t\tlet mainDataSetId: string = baseInterval.timeUnit + baseInterval.count;\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tseries.setDataSet(mainDataSetId);\n\t\t\t\t\t\t\tseries.resetGrouping();\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tthis._setBaseInterval(baseInterval);\n\t\t\t\t\t\tthis.setPrivateRaw(\"groupInterval\", undefined);\n\t\t\t\t\t\tthis.markDirtyExtremes();\n\t\t\t\t\t}\n\t\t\t\t\tthis._dataGrouped = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _groupSeriesData(series: XYSeries) {\n\t\tif (this.get(\"groupData\") && !series.get(\"groupDataDisabled\")) {\n\t\t\tthis._dataGrouped = true; // helps to avoid double grouping\n\n\t\t\tthis._seriesDataGrouped = true;\n\n\t\t\t// make array of intervals which will be used;\n\t\t\tlet intervals: ITimeInterval[] = [];\n\t\t\tlet baseDuration = this.baseMainDuration();\n\n\t\t\tlet groupIntervals = this.get(\"groupIntervals\")!;\n\t\t\tif (groupIntervals) { }\n\t\t\t$array.each(groupIntervals, (interval) => {\n\t\t\t\tlet intervalDuration = $time.getIntervalDuration(interval);\n\t\t\t\tif (intervalDuration > baseDuration) {\n\t\t\t\t\tintervals.push(interval);\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tseries._dataSets = {};\n\n\t\t\tconst key = this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!;\n\t\t\tlet fields: Array<string>;\n\n\t\t\tconst baseAxis = series.get(\"baseAxis\");\n\n\t\t\tif (series.get(\"xAxis\") === baseAxis) {\n\t\t\t\tfields = series._valueYFields;\n\t\t\t}\n\t\t\telse if (series.get(\"yAxis\") === baseAxis) {\n\t\t\t\tfields = series._valueXFields;\n\t\t\t}\n\n\t\t\tlet dataItems = series._mainDataItems;\n\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\t\tlet mainDataSetId: string = baseInterval.timeUnit + baseInterval.count;\n\n\t\t\tseries._dataSets[mainDataSetId] = dataItems;\n\n\t\t\tconst groupCallback = series.get(\"groupDataCallback\");\n\t\t\tlet groupOriginals = series.get(\"groupDataWithOriginals\", false);\n\t\t\tif (groupCallback) {\n\t\t\t\tgroupOriginals = true;\n\t\t\t}\n\n\t\t\t$array.each(intervals, (interval) => {\n\t\t\t\tlet previousTime = -Infinity;\n\t\t\t\tlet dataSetId = interval.timeUnit + interval.count;\n\t\t\t\tseries._dataSets[dataSetId] = [];\n\n\t\t\t\tlet newDataItem: DataItem<IXYSeriesDataItem>;\n\n\t\t\t\tlet sum: { [index: string]: number } = {};\n\t\t\t\tlet count: { [index: string]: number } = {};\n\n\t\t\t\tlet groupFieldValues: { [index: string]: string } = {};\n\t\t\t\tlet workingFields: { [index: string]: string } = {};\n\n\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\tsum[field] = 0;\n\t\t\t\t\tcount[field] = 0;\n\t\t\t\t\tgroupFieldValues[field] = series.get((field + \"Grouped\") as any);\n\t\t\t\t\tworkingFields[field] = field + \"Working\";\n\t\t\t\t})\n\n\t\t\t\tlet intervalDuration = $time.getDuration(interval.timeUnit);\n\n\t\t\t\tlet firstItem = dataItems[0];\n\t\t\t\tlet firstTime: any;\n\t\t\t\tif (firstItem) {\n\t\t\t\t\tfirstTime = dataItems[0].get(key as any);\n\t\t\t\t}\n\n\t\t\t\tlet prevNewDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tlet time = dataItem.get(key as any);\n\t\t\t\t\t//let roundedTime = $time.round(new Date(time), interval.timeUnit, interval.count, firstDay, utc, firstDate, timezone).getTime();\n\t\t\t\t\tlet roundedTime = $time.roun(time, interval.timeUnit, interval.count, this._root, firstTime);\n\t\t\t\t\tlet dataContext: any;\n\n\t\t\t\t\tif (previousTime < roundedTime - intervalDuration / 24) {\n\t\t\t\t\t\tdataContext = $object.copy(dataItem.dataContext);\n\n\t\t\t\t\t\tnewDataItem = new DataItem(series, dataContext, series._makeDataItem(dataContext));\n\t\t\t\t\t\tnewDataItem.setRaw(key as any, roundedTime);\n\n\t\t\t\t\t\tseries._dataSets[dataSetId].push(newDataItem);\n\n\t\t\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\t\t\tlet value = dataItem.get(field as any);\n\t\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(workingFields[field] as any, value);\n\t\t\t\t\t\t\t\tcount[field] = 1;\n\t\t\t\t\t\t\t\tsum[field] = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tsum[field] = 0;\n\t\t\t\t\t\t\t\tcount[field] = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (groupOriginals) {\n\t\t\t\t\t\t\tnewDataItem.set(\"originals\", [dataItem]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (groupCallback && prevNewDataItem) {\n\t\t\t\t\t\t\tgroupCallback(prevNewDataItem, interval);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tprevNewDataItem = newDataItem;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\t\t\tlet groupKey = groupFieldValues[field];\n\t\t\t\t\t\t\tlet value = dataItem.get(field as any);\n\n\t\t\t\t\t\t\tif (value != null) {\n\n\t\t\t\t\t\t\t\tlet currentValue = newDataItem.get(field as any);\n\n\t\t\t\t\t\t\t\tswitch (groupKey) {\n\t\t\t\t\t\t\t\t\tcase \"close\":\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"sum\":\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, currentValue + value);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"open\":\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"low\":\n\t\t\t\t\t\t\t\t\t\tif (value < currentValue) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"high\":\n\t\t\t\t\t\t\t\t\t\tif (value > currentValue) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"average\":\n\t\t\t\t\t\t\t\t\t\tcount[field]++;\n\t\t\t\t\t\t\t\t\t\tsum[field] += value;\n\t\t\t\t\t\t\t\t\t\tlet average = sum[field] / count[field];\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, average);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"extreme\":\n\t\t\t\t\t\t\t\t\t\tif (Math.abs(value) > Math.abs(currentValue)) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(workingFields[field] as any, newDataItem.get(field as any));\n\t\t\t\t\t\t\t\tlet dataContext: any = $object.copy(dataItem.dataContext);\n\t\t\t\t\t\t\t\tdataContext[key as any] = roundedTime;\n\t\t\t\t\t\t\t\tnewDataItem.dataContext = dataContext;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (groupOriginals) {\n\t\t\t\t\t\t\tnewDataItem.get(\"originals\")!.push(dataItem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpreviousTime = roundedTime;\n\t\t\t\t})\n\n\t\t\t\tif (groupCallback && prevNewDataItem) {\n\t\t\t\t\tgroupCallback(prevNewDataItem, interval);\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (series._dataSetId) {\n\t\t\t\tseries.setDataSet(series._dataSetId);\n\t\t\t}\n\t\t\tthis.markDirtySize();\n\t\t\t// solves problem if new series was added\n\t\t\tif (this._seriesAdded) {\n\t\t\t\tthis._root.events.once(\"frameended\", () => {\n\t\t\t\t\tthis.markDirtySize();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._groupingCalculated = false;\n\t\tthis._dataGrouped = false;\n\t}\n\n\t/**\n\t * Returns a time interval axis would group data to for a specified duration.\n\t *\n\t * @since 5.2.1\n\t */\n\tpublic getGroupInterval(duration: number): ITimeInterval {\n\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\tlet groupInterval = $time.chooseInterval(0, duration, this.get(\"groupCount\", Infinity), this.get(\"groupIntervals\")!);\n\t\tif ($time.getIntervalDuration(groupInterval) < $time.getIntervalDuration(baseInterval)) {\n\t\t\tgroupInterval = { ...baseInterval };\n\t\t}\n\t\treturn groupInterval;\n\t}\n\n\t/**\n\t * Return `max` of a specified time interval.\n\t * \n\t * Will work only if the axis was grouped to this interval at least once.\n\t * \n\t * @since 5.2.1\n\t * @param   interval  Interval\n\t * @return            Max\n\t */\n\tpublic getIntervalMax(interval: ITimeInterval): number {\n\t\treturn this._intervalMax[interval.timeUnit + interval.count];\n\t}\n\n\t/**\n\t * Return `min` of a specified time interval.\n\t * \n\t * Will work only if the axis was grouped to this interval at least once.\n\t * \n\t * @since 5.2.1\n\t * @param   interval  Interval\n\t * @return            Min\n\t */\n\tpublic getIntervalMin(interval: ITimeInterval): number {\n\t\treturn this._intervalMin[interval.timeUnit + interval.count];\n\t}\n\n\tprotected _handleRangeChange() {\n\t\tsuper._handleRangeChange();\n\n\t\tlet selectionMin = Math.round(this.getPrivate(\"selectionMin\")! as number);\n\t\tlet selectionMax = Math.round(this.getPrivate(\"selectionMax\")! as number);\n\n\t\tif ($type.isNumber(selectionMin) && $type.isNumber(selectionMax)) {\n\n\t\t\tif (this.get(\"endLocation\") == 0) {\n\t\t\t\tselectionMax += 1;\n\t\t\t}\n\n\t\t\tif (this.get(\"groupData\") && !this._groupingCalculated) {\n\t\t\t\tthis._groupingCalculated = true;\n\n\t\t\t\tlet groupInterval = this.get(\"groupInterval\");\n\t\t\t\tlet current = this.getPrivate(\"groupInterval\");\n\n\t\t\t\tlet modifiedDifference = (selectionMax - selectionMin) + (this.get(\"startLocation\", 0) + (1 - this.get(\"endLocation\", 1)) * this.baseDuration());\n\n\t\t\t\tif (current) {\n\t\t\t\t\tlet duration = $time.getIntervalDuration(current);\n\t\t\t\t\tmodifiedDifference = Math.ceil(modifiedDifference / duration) * duration;\n\t\t\t\t}\n\n\t\t\t\tif (!groupInterval) {\n\t\t\t\t\tgroupInterval = this.getGroupInterval(modifiedDifference);\n\t\t\t\t}\n\n\t\t\t\tif (groupInterval && (!current || (current.timeUnit !== groupInterval.timeUnit || current.count !== groupInterval.count) || this._seriesDataGrouped)) {\n\t\t\t\t\tthis._seriesDataGrouped = false;\n\t\t\t\t\tthis.setPrivateRaw(\"groupInterval\", groupInterval);\n\t\t\t\t\tthis._setBaseInterval(groupInterval)\n\n\t\t\t\t\tlet newId = groupInterval.timeUnit + groupInterval.count;\n\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\t\t\tseries.setDataSet(newId);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\n\t\t\t\t\tthis.markDirtyExtremes();\n\n\t\t\t\t\tthis._root.events.once(\"frameended\", () => {\n\t\t\t\t\t\tthis._root.events.once(\"frameended\", () => {\n\t\t\t\t\t\t\tconst type = \"groupintervalchanged\";\n\t\t\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\n\t\t\t\t\tconst start = $array.getFirstSortedIndex(series.dataItems, (dataItem) => {\n\t\t\t\t\t\treturn $order.compare(dataItem.get(fieldName), selectionMin);\n\t\t\t\t\t});\n\n\t\t\t\t\tlet startIndex = start.index;\n\n\t\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\t\tstartIndex -= 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tselectionMax += this.baseDuration() * (1 - this.get(\"endLocation\", 1));\n\n\t\t\t\t\tconst end = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\t\t\t\treturn $order.compare(dataItem.get(fieldName), selectionMax);\n\t\t\t\t\t});\n\n\t\t\t\t\tlet endIndex = end.index;\n\t\t\t\t\tlet endIndex2 = endIndex;\n\n\t\t\t\t\tif (endIndex2 > 1) {\n\t\t\t\t\t\tendIndex2--;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst firstDataItem = series.dataItems[startIndex];\n\t\t\t\t\tconst lastDataItem = series.dataItems[endIndex2];\n\n\t\t\t\t\tlet lastDate: number | undefined;\n\t\t\t\t\tlet firstDate: number | undefined;\n\t\t\t\t\tif (firstDataItem) {\n\t\t\t\t\t\tfirstDate = firstDataItem.get(fieldName);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (lastDataItem) {\n\t\t\t\t\t\tlastDate = lastDataItem.get(fieldName);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet outOfSelection = false;\n\t\t\t\t\tif (lastDate != null && firstDate != null) {\n\t\t\t\t\t\tif (lastDate < selectionMin || firstDate > selectionMax) {\n\t\t\t\t\t\t\toutOfSelection = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tseries.setPrivate(\"outOfSelection\", outOfSelection);\n\t\t\t\t\tseries.setPrivate(\"startIndex\", startIndex);\n\t\t\t\t\tseries.setPrivate(\"adjustedStartIndex\", series._adjustStartIndex(startIndex));\n\t\t\t\t\tseries.setPrivate(\"endIndex\", endIndex);\n\t\t\t\t\tthis.root.events.once(\"frameended\", () => {\n\t\t\t\t\t\tseries._markDirtyPrivateKey(\"adjustedStartIndex\");\n\t\t\t\t\t})\n\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, _strictMode?: boolean): IMinMaxStep {\n\t\treturn { min: min, max: max, step: (max - min) / gridCount };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic intervalDuration(): number {\n\t\treturn this._intervalDuration;\n\t}\n\n\tprotected _saveMinMax(min: number, max: number) {\n\t\tlet groupInterval = this.getPrivate(\"groupInterval\");\n\n\t\tif (!groupInterval) {\n\t\t\tgroupInterval = this.get(\"baseInterval\");\n\t\t}\n\n\t\tlet id = groupInterval.timeUnit + groupInterval.count;\n\t\tthis._intervalMin[id] = min;\n\t\tthis._intervalMax[id] = max;\n\t}\n\n\tprotected _getM(timeUnit: TimeUnit) {\n\t\tif (timeUnit == \"month\" || timeUnit == \"year\" || timeUnit == \"day\") {\n\t\t\treturn 1.05;\n\t\t}\n\t\treturn 1.01;\n\t}\n\n\tprotected _getMinorInterval(interval: ITimeInterval): ITimeInterval | undefined {\n\t\tlet minorGridInterval: ITimeInterval | undefined;\n\t\tlet count = interval.count;\n\t\tlet timeUnit = interval.timeUnit;\n\t\tif (count > 1) {\n\t\t\tif (count == 10) {\n\t\t\t\tcount = 5;\n\t\t\t}\n\t\t\telse if (count == 15) {\n\t\t\t\tcount = 5;\n\t\t\t}\n\t\t\telse if (count == 12) {\n\t\t\t\tcount = 2;\n\t\t\t}\n\t\t\telse if (count == 6) {\n\t\t\t\tcount = 1;\n\t\t\t}\n\t\t\telse if (count == 30) {\n\t\t\t\tcount = 10;\n\t\t\t}\n\t\t\telse if (count < 10) {\n\t\t\t\tcount = 1;\n\t\t\t}\n\t\t\tminorGridInterval = { timeUnit: timeUnit, count: count };\n\t\t}\n\t\tif (timeUnit == \"week\") {\n\t\t\tif (this.getPrivate(\"baseInterval\")?.timeUnit != \"week\") {\n\t\t\t\tminorGridInterval = { timeUnit: \"day\", count: 1 };\n\t\t\t}\n\t\t\telse {\n\t\t\t\tminorGridInterval = { timeUnit: \"week\", count: 1 };\n\t\t\t}\n\t\t}\n\t\treturn minorGridInterval;\n\t}\n\n\tprotected _prepareAxisItems() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tconst root = this._root;\n\t\t\tconst selectionMin = Math.round(this.getPrivate(\"selectionMin\")! as number);\n\t\t\tconst selectionMax = Math.round(this.getPrivate(\"selectionMax\")! as number);\n\t\t\tconst renderer = this.get(\"renderer\");\n\t\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\t\tlet value = selectionMin;\n\t\t\tlet i = 0;\n\n\t\t\tconst intervals = this.get(\"gridIntervals\")!;\n\t\t\tlet gridInterval = $time.chooseInterval(0, selectionMax - selectionMin, renderer.gridCount(), intervals);\n\n\t\t\tif ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\n\t\t\t\tgridInterval = { ...baseInterval };\n\t\t\t}\n\n\t\t\tconst intervalDuration = $time.getIntervalDuration(gridInterval);\n\t\t\tthis._intervalDuration = intervalDuration;\n\n\t\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\n\t\t\tconst utc = root.utc;\n\t\t\tconst timezone = root.timezone;\n\n\t\t\t//value = $time.round(new Date(selectionMin - intervalDuration), gridInterval.timeUnit, gridInterval.count, firstDay, utc, new Date(min), timezone).getTime();\n\t\t\tvalue = $time.roun(selectionMin - intervalDuration, gridInterval.timeUnit, gridInterval.count, root, min);\n\t\t\tlet previousValue = value - intervalDuration;\n\t\t\tlet format: string | Intl.DateTimeFormatOptions;\n\t\t\tconst formats = this.get(\"dateFormats\")!;\n\n\t\t\tthis.setPrivateRaw(\"gridInterval\", gridInterval);\n\n\t\t\tconst minorLabelsEnabled = renderer.get(\"minorLabelsEnabled\");\n\t\t\tconst minorGridEnabled = renderer.get(\"minorGridEnabled\", minorLabelsEnabled);\n\n\t\t\tlet minorGridInterval: ITimeInterval | undefined;\n\t\t\tlet minorDuration = 0;\n\n\t\t\tif (minorGridEnabled) {\n\t\t\t\tminorGridInterval = this._getMinorInterval(gridInterval);\n\t\t\t\tminorDuration = $time.getIntervalDuration(minorGridInterval);\n\t\t\t}\n\n\t\t\tlet m = 0;\n\t\t\twhile (value < selectionMax + intervalDuration) {\n\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\tif (this.dataItems.length < i + 1) {\n\t\t\t\t\tdataItem = new DataItem(this, undefined, {});\n\t\t\t\t\tthis._dataItems.push(dataItem);\n\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem = this.dataItems[i];\n\t\t\t\t}\n\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tthis._toggleDataItem(dataItem, true);\n\n\t\t\t\tdataItem.setRaw(\"value\", value);\n\t\t\t\tdataItem.setRaw(\"labelEndValue\", undefined);\n\n\t\t\t\tlet endValue = value + $time.getDuration(gridInterval.timeUnit, gridInterval.count * this._getM(gridInterval.timeUnit));\n\t\t\t\t//endValue = $time.round(new Date(endValue), gridInterval.timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\t\t\t\tendValue = $time.roun(endValue, gridInterval.timeUnit, 1, root);\n\n\t\t\t\tdataItem.setRaw(\"endValue\", endValue);\n\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tformat = formats[gridInterval.timeUnit];\n\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\n\t\t\t\t\tif (gridInterval.timeUnit != \"year\") {\n\t\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, utc, timezone)) {\n\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", root.dateFormatter.format(date, format!));\n\t\t\t\t}\n\n\t\t\t\tlet count = gridInterval.count;\n\t\t\t\t// so that labels of week would always be at the beginning of the grid\n\t\t\t\tif (gridInterval.timeUnit == \"week\") {\n\t\t\t\t\tdataItem.setRaw(\"labelEndValue\", value);\n\t\t\t\t}\n\n\t\t\t\tif (minorGridEnabled) {\n\t\t\t\t\tcount = 1;\n\t\t\t\t\tlet timeUnit = gridInterval.timeUnit;\n\t\t\t\t\tif (timeUnit == \"week\") {\n\t\t\t\t\t\ttimeUnit = \"day\";\n\t\t\t\t\t}\n\n\t\t\t\t\tlet labelEndValue = value + $time.getDuration(timeUnit, this._getM(timeUnit));\n\t\t\t\t\t//labelEndValue = $time.round(new Date(labelEndValue), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\t\t\t\t\tlabelEndValue = $time.roun(labelEndValue, timeUnit, 1, root);\n\t\t\t\t\tdataItem.setRaw(\"labelEndValue\", labelEndValue);\n\t\t\t\t}\n\n\t\t\t\tthis._prepareDataItem(dataItem, count);\n\n\t\t\t\tpreviousValue = value;\n\t\t\t\tvalue = endValue;\n\n\t\t\t\t// min grid\n\t\t\t\tif (minorGridInterval) {\n\t\t\t\t\tconst minorTimeUnit = minorGridInterval.timeUnit;\n\t\t\t\t\tconst minorCount = minorGridInterval.count;\n\t\t\t\t\tconst mmm = this._getM(minorTimeUnit);\n\n\t\t\t\t\t//let minorValue = $time.round(new Date(previousValue + minorDuration * this._getM(minorGridInterval.timeUnit)), minorGridInterval.timeUnit, minorGridInterval.count, firstDay, utc, new Date(previousValue), timezone).getTime();\n\t\t\t\t\tlet minorValue = $time.roun(previousValue + minorDuration * mmm, minorTimeUnit, minorCount, root, previousValue);\n\n\t\t\t\t\tlet previousMinorValue: number | undefined;\n\t\t\t\t\tlet minorFormats = this.get(\"minorDateFormats\", this.get(\"dateFormats\"))!;\n\n\t\t\t\t\twhile (minorValue < value - 0.01 * minorDuration) {\n\t\t\t\t\t\tlet minorDataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\t\t\tif (this.minorDataItems.length < m + 1) {\n\t\t\t\t\t\t\tminorDataItem = new DataItem(this, undefined, {});\n\t\t\t\t\t\t\tthis.minorDataItems.push(minorDataItem);\n\t\t\t\t\t\t\tthis.processDataItem(minorDataItem);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tminorDataItem = this.minorDataItems[m];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._createAssets(minorDataItem, [\"minor\"], true);\n\n\t\t\t\t\t\tthis._toggleDataItem(minorDataItem, true);\n\n\t\t\t\t\t\tminorDataItem.setRaw(\"value\", minorValue);\n\n\t\t\t\t\t\tlet minorEndValue = minorValue + $time.getDuration(minorTimeUnit, minorCount * mmm);\n\t\t\t\t\t\t//minorEndValue = $time.round(new Date(minorEndValue), minorGridInterval.timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\t\t\t\t\t\tminorEndValue = $time.roun(minorEndValue, minorTimeUnit, 1, root);\n\n\t\t\t\t\t\tminorDataItem.setRaw(\"endValue\", minorEndValue);\n\n\t\t\t\t\t\tlet date = new Date(minorValue);\n\n\t\t\t\t\t\tformat = minorFormats[minorTimeUnit];\n\n\t\t\t\t\t\tconst minorLabel = minorDataItem.get(\"label\");\n\n\t\t\t\t\t\tif (minorLabel) {\n\t\t\t\t\t\t\tif (minorLabelsEnabled) {\n\t\t\t\t\t\t\t\tminorLabel.set(\"text\", root.dateFormatter.format(date, format!));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tminorLabel.setPrivate(\"visible\", false);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._prepareDataItem(minorDataItem, 1);\n\n\t\t\t\t\t\tif (minorValue == previousMinorValue) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpreviousMinorValue = minorValue;\n\t\t\t\t\t\tminorValue = minorEndValue;\n\t\t\t\t\t\tm++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (value == previousValue) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\tfor (let j = i; j < this.dataItems.length; j++) {\n\t\t\t\tthis._toggleDataItem(this.dataItems[j], false);\n\t\t\t}\n\n\t\t\tfor (let j = m; j < this.minorDataItems.length; j++) {\n\t\t\t\tthis._toggleDataItem(this.minorDataItems[j], false);\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.inited) {\n\t\t\t\t\tseries._markDirtyAxes();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\tprotected _updateFinals(start: number, end: number) {\n\t\tthis.setPrivateRaw(\"selectionMinFinal\", this.positionToValue(start));\n\t\tthis.setPrivateRaw(\"selectionMaxFinal\", this.positionToValue(end));\n\t}\n\n\tprotected _getDelta() {\n\t\tthis._deltaMinMax = this.baseDuration() / 2;\n\t}\n\n\tprotected _fixMin(min: number) {\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\t\tconst timeUnit = baseInterval.timeUnit;\n\t\t//let startTime = $time.round(new Date(min), timeUnit, baseInterval.count, firstDay, utc, undefined, timezone).getTime();\n\t\tlet startTime = $time.roun(min, timeUnit, baseInterval.count, this._root);\n\n\t\tlet endTime = startTime + $time.getDuration(timeUnit, baseInterval.count * this._getM(timeUnit))\n\t\t//endTime = $time.round(new Date(endTime), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\t\tendTime = $time.roun(endTime, timeUnit, 1, this._root);\n\t\treturn startTime + (endTime - startTime) * this.get(\"startLocation\", 0);\n\t}\n\n\tprotected _fixMax(max: number) {\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\t\tconst timeUnit = baseInterval.timeUnit;\n\t\t//let startTime = $time.round(new Date(max), timeUnit, baseInterval.count, firstDay, utc, undefined, timezone).getTime();\n\t\tlet startTime = $time.roun(max, timeUnit, baseInterval.count, this._root);\n\t\tlet endTime = startTime + $time.getDuration(timeUnit, baseInterval.count * this._getM(timeUnit))\n\t\t//endTime = $time.round(new Date(endTime), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\t\tendTime = $time.roun(endTime, timeUnit, 1, this._root);\n\n\t\treturn startTime + (endTime - startTime) * this.get(\"endLocation\", 1);\n\t}\n\n\tprotected _updateDates(_date: number, _series: XYSeries) {\n\n\t}\n\n\tpublic _handleSeriesRemoved() {\n\t\tthis.setPrivate(\"baseInterval\", this.get(\"baseInterval\"));\n\t\tthis.setPrivate(\"min\", undefined);\t\t\n\t\tthis.setPrivate(\"minFinal\", undefined);\t\t\n\t}\t\n\n\t/**\n\t * Returns a duration of currently active `baseInterval` in milliseconds.\n\t * \n\t * @return Duration\n\t */\n\tpublic baseDuration(): number {\n\t\treturn this._baseDuration;\n\t\t//return $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\n\t}\n\n\t/**\n\t * Returns a duration of user-defined `baseInterval` in milliseconds.\n\t *\n\t * @return Duration\n\t */\n\tpublic baseMainDuration(): number {\n\t\treturn $time.getIntervalDuration(this.get(\"baseInterval\"));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processSeriesDataItem(dataItem: DataItem<IXYSeriesDataItem>, fields: Array<string>) {\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\tif (!dataItem.open) {\n\t\t\tdataItem.open = {};\n\t\t}\n\t\tif (!dataItem.close) {\n\t\t\tdataItem.close = {};\n\t\t}\n\n\t\t$array.each(fields, (field) => {\n\t\t\tlet value = dataItem.get(field as any);\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tlet startTime = dataItem.open![field];\n\t\t\t\tlet endTime = dataItem.close![field];\n\t\t\t\t// this is done to save cpu, as rounding is quite expensive, especially with timezone set. \n\t\t\t\t// if value is between prev start and end, it means it didn't change, all is fine.\n\t\t\t\tif (value >= startTime && value <= endTime) {\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst timeUnit = baseInterval.timeUnit;\n\t\t\t\t\tconst count = baseInterval.count;\n\t\t\t\t\t//startTime = $time.round(new Date(value), timeUnit, count, firstDay, utc, undefined, timezone).getTime();\n\t\t\t\t\tstartTime = $time.roun(value, timeUnit, count, this._root);\n\t\t\t\t\tendTime = startTime + $time.getDuration(timeUnit, count * this._getM(timeUnit));\n\t\t\t\t\t//endTime = $time.round(new Date(endTime), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\t\t\t\t\tendTime = $time.roun(endTime, timeUnit, 1, this._root);\n\n\t\t\t\t\tdataItem.open![field] = startTime;\n\t\t\t\t\tdataItem.close![field] = endTime;\n\t\t\t\t}\n\n\t\t\t\tthis._updateDates(startTime, dataItem.component as XYSeries);\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _handleSizeDirty() {\n\t\t// void \n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\n\t\tlet openValue;\n\t\tlet closeValue;\n\n\t\tif (dataItem.open && dataItem.close) {\n\t\t\topenValue = dataItem.open[field];\n\t\t\tcloseValue = dataItem.close[field];\n\t\t}\n\t\telse {\n\t\t\topenValue = dataItem.get(field as any)\n\t\t\tcloseValue = openValue;\n\t\t}\n\n\t\tlet value = openValue + (closeValue - openValue) * cellLocation;\n\n\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\tlet openValue;\n\t\tlet closeValue;\n\n\t\tif (dataItem.open && dataItem.close) {\n\t\t\topenValue = dataItem.open[field];\n\t\t\tcloseValue = dataItem.close[field];\n\t\t}\n\t\telse {\n\t\t\topenValue = dataItem.get(field as any)\n\t\t\tcloseValue = openValue;\n\t\t}\n\n\t\tlet value = openValue + (closeValue - openValue) * cellLocation;\n\n\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\tlet value = this.positionToValue(position);\n\t\tvalue = value - (location - 0.5) * this.baseDuration();\n\n\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\tif (!$type.isNaN(value)) {\n\t\t\tconst firstDay = this._root.locale.firstDayOfWeek;\n\t\t\tconst timeUnit = baseInterval.timeUnit;\n\t\t\tconst utc = this._root.utc;\n\t\t\tconst timezone = this._root.timezone;\n\t\t\tconst count = baseInterval.count;\n\n\t\t\t//value = $time.round(new Date(value), timeUnit, count, firstDay, utc, new Date(this.getPrivate(\"min\", 0)), timezone).getTime();\n\t\t\tvalue = $time.roun(value, timeUnit, count, this._root, this.getPrivate(\"min\", 0));\n\n\t\t\tlet duration = $time.getDateIntervalDuration(baseInterval, new Date(value), firstDay, utc, timezone);\n\t\t\tif (timezone) {\n\t\t\t\t//value = $time.round(new Date(value + this.baseDuration() * 0.05), timeUnit, count, firstDay, utc, new Date(this.getPrivate(\"min\", 0)), timezone).getTime();\n\t\t\t\tvalue = $time.roun(value + this.baseDuration() * 0.05, timeUnit, count, this._root, this.getPrivate(\"min\", 0));\n\t\t\t\tduration = $time.getDateIntervalDuration(baseInterval, new Date(value + duration * location), firstDay, utc, timezone);\n\t\t\t}\n\n\t\t\treturn this.valueToPosition(value + duration * location);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * NOTE: Unless `adjustPosition` (2nd parameter) is set to `false`, the method\n\t * will adjust position by `tooltipIntervalOffset`.\n\t *\n\t * @param  position        Position\n\t * @param  adjustPosition  Adjust position\n\t * @return                 Tooltip text\n\t */\n\tpublic getTooltipText(position: number, adjustPosition?: boolean): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tif (this.getPrivate(\"min\") != null) {\n\t\t\tlet format = this.get(\"tooltipDateFormats\")![this.getPrivate(\"baseInterval\").timeUnit];\n\t\t\tlet value = this.positionToValue(position);\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\t\t\tlet duration = $time.getDateIntervalDuration(baseInterval, date, this._root.locale.firstDayOfWeek, this._root.utc, this._root.timezone);\n\n\t\t\t\tif (adjustPosition !== false) {\n\t\t\t\t\tdate = new Date(value + this.get(\"tooltipIntervalOffset\", -this.get(\"tooltipLocation\", 0.5)) * duration)\n\t\t\t\t}\n\n\t\t\t\treturn this._root.dateFormatter.format(date, this.get(\"tooltipDateFormat\", format));\n\t\t\t}\n\n\t\t}\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number, location?: number, snap?: boolean): DataItem<IXYSeriesDataItem> | undefined {\n\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\tlet value = this.positionToValue(position);\n\n\t\tif (location == null) {\n\t\t\tlocation = 0.5;\n\t\t}\n\n\t\tvalue = value - (location - 0.5) * this.baseDuration();\n\n\t\tconst result = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\tlet diValue = 0;\n\t\t\tif (dataItem.open) {\n\t\t\t\tdiValue = dataItem.open[fieldName];\n\t\t\t}\n\n\t\t\treturn $order.compare(diValue, value);\n\t\t});\n\n\t\tif (snap || series.get(\"snapTooltip\")) {\n\t\t\tlet first = series.dataItems[result.index - 1];\n\t\t\tlet second = series.dataItems[result.index];\n\n\t\t\tif (first && second) {\n\t\t\t\tif (first.open && second.close) {\n\t\t\t\t\tlet open = first.open[fieldName];\n\t\t\t\t\tlet close = second.close[fieldName];\n\n\t\t\t\t\tif (Math.abs(value - open) > Math.abs(value - close)) {\n\t\t\t\t\t\treturn second;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (first) {\n\t\t\t\treturn first;\n\t\t\t}\n\n\t\t\tif (second) {\n\t\t\t\treturn second;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconst dataItem = series.dataItems[result.index - 1];\n\n\t\t\tif (dataItem) {\n\t\t\t\tif (dataItem.open && dataItem.close) {\n\t\t\t\t\tlet open = dataItem.open[fieldName];\n\t\t\t\t\tlet close = dataItem.close[fieldName];\n\n\t\t\t\t\tif (value >= open && value <= close) {\n\t\t\t\t\t\treturn dataItem;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic shouldGap(dataItem: DataItem<IXYSeriesDataItem>, nextItem: DataItem<IXYSeriesDataItem>, autoGapCount: number, fieldName: string): boolean {\n\t\tconst value1 = dataItem.get(fieldName as any);\n\t\tconst value2 = nextItem.get(fieldName as any);\n\n\t\tif (value2 - value1 > this.baseDuration() * autoGapCount) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` dates.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start Date\n\t * @param  end       End Date\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToDates(start: Date, end: Date, duration?: number) {\n\t\tthis.zoomToValues(start.getTime(), end.getTime(), duration);\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` values.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start value\n\t * @param  end       End value\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToValues(start: number, end: number, duration?: number) {\n\t\tconst min = this.getPrivate(\"minFinal\", 0);\n\t\tconst max = this.getPrivate(\"maxFinal\", 0);\n\t\tif (this.getPrivate(\"min\") != null && this.getPrivate(\"max\") != null) {\n\t\t\tif (this.get(\"groupData\")) {\n\t\t\t\tconst futureGroupInterval = this.getGroupInterval(end - start);\n\t\t\t\tconst baseInterval = this.get(\"baseInterval\");\n\n\t\t\t\tlet baseMin = this.getIntervalMin(baseInterval);\n\t\t\t\tlet baseMax = this.getIntervalMax(baseInterval) - 1;\n\t\t\t\tbaseMax = $time.roun(baseMax, futureGroupInterval.timeUnit, futureGroupInterval.count, this.root);\n\t\t\t\tbaseMax += this._getM(futureGroupInterval.timeUnit) * $time.getIntervalDuration(futureGroupInterval);\n\t\t\t\tbaseMax = $time.roun(baseMax, futureGroupInterval.timeUnit, futureGroupInterval.count, this.root);\n\n\t\t\t\tlet futureMin = $time.roun(baseMin, futureGroupInterval.timeUnit, futureGroupInterval.count, this.root);\n\t\t\t\tlet futureMax = $time.roun(baseMax, futureGroupInterval.timeUnit, futureGroupInterval.count, this.root);\n\n\t\t\t\tlet s = (start - futureMin) / (futureMax - futureMin);\n\t\t\t\tlet e = (end - futureMin) / (futureMax - futureMin);\n\n\t\t\t\tthis.zoom(s, e, duration);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.zoom((start - min) / (max - min), (end - min) / (max - min), duration);\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t * Returns a `Date` object corresponding to specific position within plot\n\t * area.\n\t *\n\t * @param   position  Pposition\n\t * @return            Date\n\t */\n\tpublic positionToDate(position: number): Date {\n\t\treturn new Date(this.positionToValue(position));\n\t}\n\n\t/**\n\t * Returns a relative position within plot area that corresponds to specific\n\t * date.\n\t *\n\t * @param   date  Date\n\t * @return        Position\n\t */\n\tpublic dateToPosition(date: Date): number {\n\t\treturn this.valueToPosition(date.getTime());\n\t}\n\n\t/**\n\t * Returns relative position between two grid lines of the axis.\n\t *\n\t * @since 5.2.30\n\t * @return Position\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\tlet max = this.getPrivate(\"selectionMax\", this.getPrivate(\"max\"));\n\t\tlet min = this.getPrivate(\"selectionMin\", this.getPrivate(\"min\"));\n\n\t\tif ($type.isNumber(max) && $type.isNumber(min)) {\n\t\t\treturn this._intervalDuration / (max - min);\n\t\t}\n\t\treturn 0.05;\n\t}\n\n\tpublic nextPosition(count?: number) {\n\t\tif (count == null) {\n\t\t\tcount = 1;\n\t\t}\n\n\t\tlet dtime = this.get(\"tooltipLocation\", 0.5) * this.baseDuration();\n\t\tif (this.get(\"renderer\").getPrivate(\"letter\") == \"Y\") {\n\t\t\tcount *= -1;\n\t\t}\n\n\t\tlet tooltipValue = this.positionToValue(this.getPrivate(\"tooltipPosition\", 0));\n\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\t\tlet time = this._nextTime(tooltipValue, count, baseInterval);\n\n\t\tlet selectionMin = this.getPrivate(\"selectionMin\", 0);\n\t\tlet selectionMax = this.getPrivate(\"selectionMax\", 0);\n\n\t\tlet min = $time.roun(selectionMin, baseInterval.timeUnit, baseInterval.count, this._root);\n\t\tlet max = $time.roun(selectionMax, baseInterval.timeUnit, baseInterval.count, this._root);\n\n\t\ttime += dtime;\n\t\ttime = $math.fitToRange(time, min + dtime, max - dtime);\n\n\t\treturn this.toGlobalPosition(this.valueToPosition(time));\n\t}\n\n\tprotected _nextTime(time: number, count: number, baseInterval: ITimeInterval) {\n\t\treturn $time.roun(time + count * this.baseDuration(), baseInterval.timeUnit, baseInterval.count, this._root);\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\r\n\r\nimport { DateAxis, IDateAxisSettings, IDateAxisPrivate, IDateAxisDataItem, IDateAxisEvents } from \"./DateAxis\";\r\nimport { DataItem } from \"../../../core/render/Component\";\r\nimport type { XYSeries } from \"../../xy/series/XYSeries\";\r\n\r\nimport * as $array from \"../../../core/util/Array\"\r\nimport * as $order from \"../../../core/util/Order\";\r\nimport * as $time from \"../../../core/util/Time\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $math from \"../../../core/util/Math\";\r\nimport type { ITimeInterval } from \"../../../core/util/Time\";\r\n\r\nexport interface IGaplessDateAxisSettings<R extends AxisRenderer> extends IDateAxisSettings<R> {\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisDataItem extends IDateAxisDataItem {\r\n\r\n\t/**\r\n\t * An index of a data item.\r\n\t */\r\n\tindex?: number\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisPrivate extends IDateAxisPrivate {\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisEvents extends IDateAxisEvents {\r\n}\r\n\r\n/**\r\n * A version of a [[DateAxis]] which removes intervals that don't have any data\r\n * items in them.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/gapless-date-axis/} for more info\r\n * @important\r\n */\r\nexport class GaplessDateAxis<R extends AxisRenderer> extends DateAxis<R> {\r\n\tpublic static className: string = \"GaplessDateAxis\";\r\n\tpublic static classNames: Array<string> = DateAxis.classNames.concat([GaplessDateAxis.className]);\r\n\r\n\tdeclare public _settings: IGaplessDateAxisSettings<R>;\r\n\tdeclare public _privateSettings: IGaplessDateAxisPrivate;\r\n\tdeclare public _dataItemSettings: IGaplessDateAxisDataItem;\r\n\tdeclare public _events: IGaplessDateAxisEvents;\r\n\r\n\tprotected _frequency: number = 1;\r\n\tprotected _m: number = 0;\r\n\r\n\tpublic _afterNew() {\r\n\t\tthis.valueFields.push(\"date\");\r\n\t\tsuper._afterNew();\r\n\t}\r\n\r\n\tpublic _dates: Array<number> = [];\r\n\tpublic _customDates?: Array<number>;\r\n\r\n\r\n\tpublic _getDates(): Array<number> {\r\n\t\tif (this._customDates) {\r\n\t\t\treturn this._customDates;\r\n\t\t}\r\n\t\treturn this._dates;\r\n\t}\r\n\r\n\tprotected _updateDates(date: number, series: XYSeries) {\r\n\t\tif (!series.get(\"ignoreMinMax\")) {\r\n\t\t\tconst dates = this._getDates();\r\n\t\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, date));\r\n\t\t\tif (!result.found) {\r\n\t\t\t\t$array.insertIndex(dates, result.index, date);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _updateAllDates() {\r\n\t\tif (!this._customDates) {\r\n\t\t\tconst dates = this._dates;\r\n\t\t\tdates.length = 0;\r\n\r\n\t\t\t$array.each(this.series, (series) => {\r\n\t\t\t\tlet field = \"valueX\";\r\n\t\t\t\tif (series.get(\"yAxis\") == this) {\r\n\t\t\t\t\tfield = \"valueY\"\r\n\t\t\t\t}\r\n\t\t\t\t$array.each(series.dataItems, (dataItem) => {\r\n\t\t\t\t\tlet value = dataItem.get(field as any);\r\n\t\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\t\tif (dataItem.open) {\r\n\t\t\t\t\t\t\tthis._updateDates(dataItem.open![field], series);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t})\r\n\r\n\t\t\tconst extraMax = this.get(\"extraMax\", 0);\r\n\t\t\tconst extraMin = this.get(\"extraMin\", 0);\r\n\r\n\t\t\tlet len = dates.length;\r\n\r\n\t\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\r\n\t\t\tconst baseCount = baseInterval.count;\r\n\t\t\tconst timeUnit = baseInterval.timeUnit;\r\n\r\n\t\t\tif (extraMax > 0) {\r\n\t\t\t\tconst extra = len * extraMax;\r\n\t\t\t\tlet time = dates[len - 1];\r\n\t\t\t\tif ($type.isNumber(time)) {\r\n\t\t\t\t\tfor (let i = len - 1; i < len + extra; i++) {\r\n\t\t\t\t\t\ttime += $time.getDuration(timeUnit, baseCount * this._getM(timeUnit));\r\n\t\t\t\t\t\t//time = $time.round(new Date(time), timeUnit, baseInterval.count, firstDay, utc, undefined, timezone).getTime();\r\n\t\t\t\t\t\ttime = $time.roun(time, timeUnit, baseCount, this._root);\r\n\t\t\t\t\t\tdates.push(time);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (extraMin > 0) {\r\n\t\t\t\tconst extra = len * extraMin;\r\n\t\t\t\tlet time = dates[0];\r\n\t\t\t\tif ($type.isNumber(time)) {\r\n\t\t\t\t\tfor (let i = 0; i < extra; i++) {\r\n\t\t\t\t\t\ttime -= $time.getDuration(timeUnit, baseCount);\r\n\t\t\t\t\t\t//time = $time.round(new Date(time), timeUnit, baseCount, firstDay, utc, undefined, timezone).getTime();\r\n\t\t\t\t\t\ttime = $time.roun(time, timeUnit, baseCount, this._root);\r\n\t\t\t\t\t\tdates.unshift(time);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convers value to a relative position on axis.\r\n\t *\r\n\t * @param   value  Value\r\n\t * @return         Relative position\r\n\t */\r\n\tpublic valueToPosition(value: number): number {\r\n\t\tconst dates = this._getDates();\r\n\t\tconst startLocation = this.get(\"startLocation\", 0);\r\n\t\tconst endLocation = this.get(\"endLocation\", 1);\r\n\t\tconst len = dates.length - startLocation - (1 - endLocation);\r\n\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, value));\r\n\t\tlet index = result.index;\r\n\r\n\t\tif (result.found) {\r\n\t\t\treturn (index - startLocation) / len;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (index > 0) {\r\n\t\t\t\tindex -= 1;\r\n\t\t\t}\r\n\r\n\t\t\tlet itemValue = dates[index];\r\n\t\t\tconst nextDate = dates[index + 1];\r\n\t\t\tif(nextDate){\r\n\t\t\t\tlet nextItemValue = nextDate;\r\n\t\t\t\t// use next item value if it's closer\r\n\t\t\t\tif (Math.abs(nextItemValue - value) < Math.abs(itemValue - value)) {\r\n\t\t\t\t\titemValue = nextItemValue;\r\n\t\t\t\t\tindex++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t/*\r\n\t\t\tlet d = 0;\r\n\t\t\tif (itemValue > value && value > this.getPrivate(\"min\", 0)) {\r\n\t\t\t\td = itemValue - value;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\td = value - itemValue;\r\n\t\t\t}\r\n\t\t\t*/\r\n\r\n\t\t\tlet d = value - itemValue;\r\n\r\n\t\t\treturn (index - startLocation) / len + d / this.baseDuration() / len;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts numeric value from axis scale to index.\r\n\t * \r\n\t * @param  value  Value\r\n\t * @return        Index\r\n\t */\r\n\tpublic valueToIndex(value: number): number {\r\n\t\tconst dates = this._getDates();\r\n\r\n\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, value));\r\n\t\tlet index = result.index;\r\n\r\n\t\tif (result.found) {\r\n\t\t\treturn index;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (index > 0) {\r\n\t\t\t\tindex -= 1;\r\n\t\t\t}\r\n\t\t\treturn index;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a relative position to a corresponding numeric value from axis\r\n\t * scale.\r\n\t *\r\n\t * @param   position  Relative position\r\n\t * @return            Value\r\n\t */\r\n\tpublic positionToValue(position: number): number {\r\n\t\tconst startLocation = this.get(\"startLocation\", 0);\r\n\t\tconst endLocation = this.get(\"endLocation\", 1);\r\n\t\tconst dates = this._getDates();\r\n\t\tlet len = Math.round(dates.length - startLocation - (1 - endLocation));\r\n\t\tlet index = position * len;\r\n\t\tlet findex = Math.floor(index);\r\n\t\tif (findex < 0) {\r\n\t\t\tfindex = 0;\r\n\t\t}\r\n\r\n\t\tif (findex > len - 1) {\r\n\t\t\tfindex = len - 1\r\n\t\t}\r\n\r\n\t\treturn dates[findex] + (index - findex + startLocation) * this.baseDuration();\r\n\t}\r\n\r\n\tprotected _fixZoomFactor() {\r\n\t\tthis.setPrivateRaw(\"maxZoomFactor\", this._getDates().length - this.get(\"startLocation\", 0) - (1 - this.get(\"endLocation\", 1)));\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms the axis to specific `start` and `end` dates.\r\n\t *\r\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\r\n\t *\r\n\t * @param  start     Start Date\r\n\t * @param  end       End Date\r\n\t * @param  duration  Duration in milliseconds\r\n\t */\r\n\r\n\tpublic zoomToDates(start: Date, end: Date, duration?: number) {\r\n\t\tconst dates = this._getDates();\r\n\t\tconst len = dates.length;\r\n\t\tlet result = $array.getSortedIndex(dates, (x) => $order.compare(x, start.getTime()));\r\n\r\n\t\tlet startValue = dates[Math.min(result.index, len - 1)];\r\n\r\n\t\tresult = $array.getSortedIndex(dates, (x) => $order.compare(x, end.getTime()));\r\n\t\tlet endValue = dates[result.index];\r\n\r\n\t\tif (result.index >= len) {\r\n\t\t\tendValue = dates[len - 1] + this.baseDuration();\r\n\t\t}\r\n\r\n\t\tthis.zoomToValues(startValue, endValue, duration);\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms the axis to specific `start` and `end` values.\r\n\t *\r\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\r\n\t *\r\n\t * @param  start     Start value\r\n\t * @param  end       End value\r\n\t * @param  duration  Duration in milliseconds\r\n\t */\r\n\tpublic zoomToValues(start: number, end: number, duration?: number) {\r\n\t\tconst min = this.getPrivate(\"min\", 0);\r\n\t\tconst max = this.getPrivate(\"max\", 0);\r\n\t\tstart = $math.fitToRange(start, min, max);\r\n\t\tend = $math.fitToRange(end, min, max);\r\n\t\tthis.zoom(this.valueToPosition(start), this.valueToPosition(end), duration);\r\n\t}\r\n\r\n\r\n\tprotected _prepareAxisItems() {\r\n\t\tlet startTime = this.getPrivate(\"selectionMin\", 0);\r\n\t\tlet endTime = this.getPrivate(\"selectionMax\", 0);\r\n\r\n\t\tif ($type.isNumber(startTime) && $type.isNumber(endTime)) {\r\n\r\n\t\t\tif (this._seriesValuesDirty) {\r\n\t\t\t\tthis._seriesValuesDirty = false;\r\n\t\t\t\tthis._updateAllDates();\r\n\t\t\t}\r\n\r\n\t\t\tconst root = this._root;\r\n\t\t\tconst utc = root.utc;\r\n\t\t\tconst timezone = root.timezone;\r\n\t\t\tconst dates = this._getDates();\r\n\t\t\tconst renderer = this.get(\"renderer\");\r\n\t\t\tconst len = dates.length;\r\n\t\t\tconst baseDuration = this.baseDuration();\r\n\r\n\t\t\tlet startIndex = this.valueToIndex(startTime);\r\n\t\t\tif (startIndex > 0) {\r\n\t\t\t\tstartIndex--;\r\n\t\t\t}\r\n\r\n\t\t\tlet endIndex = this.valueToIndex(endTime);\r\n\t\t\tif (endIndex < len - 1) {\r\n\t\t\t\tendIndex++;\r\n\t\t\t}\r\n\t\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\r\n\t\t\tlet frequency = Math.min(len, Math.ceil((endIndex - startIndex) / maxCount));\r\n\t\t\tfrequency = Math.max(1, frequency);\r\n\r\n\t\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\r\n\r\n\t\t\tthis._frequency = frequency;\r\n\r\n\t\t\t$array.each(this.dataItems, (dataItem) => {\r\n\t\t\t\tthis._toggleDataItem(dataItem, false);\r\n\t\t\t})\r\n\r\n\t\t\t$array.each(this.minorDataItems, (dataItem) => {\r\n\t\t\t\tthis._toggleDataItem(dataItem, false);\r\n\t\t\t})\r\n\r\n\t\t\tlet realDuration = (endTime - startTime) - ((endTime - startTime) / baseDuration - (endIndex - startIndex)) * baseDuration;\r\n\r\n\t\t\t// if all items are on axis\r\n\t\t\tlet gridInterval = $time.chooseInterval(0, realDuration, maxCount, this.get(\"gridIntervals\")!);\r\n\r\n\t\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\r\n\t\t\tlet intervalDuration = $time.getIntervalDuration(gridInterval);\r\n\r\n\t\t\tif (intervalDuration < baseDuration) {\r\n\t\t\t\tgridInterval = { ...baseInterval };\r\n\t\t\t\tintervalDuration = $time.getIntervalDuration(gridInterval);\r\n\t\t\t}\r\n\r\n\t\t\tthis._intervalDuration = intervalDuration;\r\n\r\n\t\t\tconst timeUnit = gridInterval.timeUnit;\r\n\t\t\tconst formats = this.get(\"dateFormats\")!;\r\n\r\n\t\t\tlet firstTime = Date.now();\r\n\r\n\t\t\tif (dates[0]) {\r\n\t\t\t\tfirstTime = dates[0];\r\n\t\t\t}\r\n\r\n\t\t\t//let value = $time.round(new Date(this.getPrivate(\"selectionMin\", 0)), timeUnit, gridInterval.count, firstDay, utc, firstDate, timezone).getTime();\r\n\t\t\tlet value = $time.roun(this.getPrivate(\"selectionMin\", 0), timeUnit, gridInterval.count, root, firstTime);\r\n\r\n\t\t\tconst minorLabelsEnabled = renderer.get(\"minorLabelsEnabled\");\r\n\t\t\tconst minorGridEnabled = renderer.get(\"minorGridEnabled\", minorLabelsEnabled);\r\n\r\n\t\t\tlet minorGridInterval: ITimeInterval | undefined;\r\n\t\t\tlet minorDuration = 0;\r\n\t\t\tlet previousDataItem: DataItem<IGaplessDateAxisDataItem> | undefined;\r\n\r\n\t\t\tif (minorGridEnabled) {\r\n\t\t\t\tminorGridInterval = this._getMinorInterval(gridInterval);\r\n\t\t\t\tminorDuration = $time.getIntervalDuration(minorGridInterval);\r\n\t\t\t}\r\n\r\n\r\n\t\t\tlet selectedItems: Array<number> = this._getIndexes(value, this.getPrivate(\"selectionMax\", value) + intervalDuration, gridInterval, this.getPrivate(\"min\", value));\r\n\t\t\tif (selectedItems.length > 0) {\r\n\t\t\t\tlet i = 0;\r\n\t\t\t\tthis._m = 0;\r\n\t\t\t\tlet previousValue = value - intervalDuration * 10;\r\n\t\t\t\tconst nextGridUnit = $time.getNextUnit(timeUnit);\r\n\r\n\t\t\t\t// MINOR GRID\r\n\t\t\t\tif (minorGridInterval) {\r\n\t\t\t\t\tlet first = dates[selectedItems[0]];\r\n\t\t\t\t\tthis._addMinorGrid(first - intervalDuration, first, minorDuration, minorGridInterval);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet minDistance = renderer.axisLength() / renderer.gridCount() * 0.5;\r\n\r\n\t\t\t\t$array.each(selectedItems, (index) => {\r\n\t\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\r\n\t\t\t\t\tif (this.dataItems.length < i + 1) {\r\n\t\t\t\t\t\tdataItem = new DataItem<this[\"_dataItemSettings\"]>(this, undefined, {});\r\n\t\t\t\t\t\tthis._dataItems.push(dataItem);\r\n\t\t\t\t\t\tthis.processDataItem(dataItem);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tdataItem = this.dataItems[i];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet value = dates[index];\r\n\t\t\t\t\tlet date = new Date(value);\r\n\r\n\t\t\t\t\tlet endValue = value;\r\n\t\t\t\t\tif (i < selectedItems.length - 1) {\r\n\t\t\t\t\t\tendValue = dates[selectedItems[i + 1]];\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tendValue += intervalDuration;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdataItem.setRaw(\"value\", value);\r\n\t\t\t\t\tdataItem.setRaw(\"endValue\", endValue);\r\n\t\t\t\t\tdataItem.setRaw(\"index\", i);\r\n\t\t\t\t\tdataItem.setRaw(\"labelEndValue\", undefined);\r\n\r\n\t\t\t\t\tlet format = formats[timeUnit];\r\n\t\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\r\n\t\t\t\t\t\tif (timeUnit != \"year\") {\r\n\t\t\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, utc, timezone)) {\r\n\t\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![timeUnit];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis._createAssets(dataItem, []);\r\n\r\n\t\t\t\t\tconst label = dataItem.get(\"label\");\r\n\t\t\t\t\tif (label) {\r\n\t\t\t\t\t\tlabel.set(\"text\", root.dateFormatter.format(date, format!));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis._toggleDataItem(dataItem, true);\r\n\r\n\t\t\t\t\tlet count = gridInterval.count;\r\n\r\n\t\t\t\t\t// so that labels of week would always be at the beginning of the grid\r\n\t\t\t\t\tif (timeUnit == \"week\") {\r\n\t\t\t\t\t\tdataItem.setRaw(\"labelEndValue\", value);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (minorGridEnabled) {\r\n\t\t\t\t\t\tlet timeUnit2 = gridInterval.timeUnit;\r\n\t\t\t\t\t\tif (timeUnit2 == \"week\") {\r\n\t\t\t\t\t\t\ttimeUnit2 = \"day\";\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (count > 1 || gridInterval.timeUnit == \"week\") {\r\n\t\t\t\t\t\t\t//let labelEndValue = $time.round(new Date(value), timeUnit2, 1, firstDay, utc, undefined, timezone).getTime() + $time.getDuration(timeUnit2, this._getM(timeUnit2));\r\n\t\t\t\t\t\t\tlet labelEndValue = $time.roun(value, timeUnit2, 1, root) + $time.getDuration(timeUnit2, this._getM(timeUnit2));\r\n\t\t\t\t\t\t\tlet index = this.valueToIndex(labelEndValue)\r\n\t\t\t\t\t\t\tlabelEndValue = dates[index];\r\n\t\t\t\t\t\t\tif (labelEndValue == value) {\r\n\t\t\t\t\t\t\t\tlet next = dates[index + 1];\r\n\t\t\t\t\t\t\t\tif (next) {\r\n\t\t\t\t\t\t\t\t\tlabelEndValue = next;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tlabelEndValue += minorDuration;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tdataItem.setRaw(\"labelEndValue\", labelEndValue);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcount = 1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis._prepareDataItem(dataItem, count);\r\n\r\n\t\t\t\t\tif (label && previousDataItem) {\r\n\t\t\t\t\t\tif (renderer.getPrivate(\"letter\") == \"X\") {\r\n\t\t\t\t\t\t\tlet previousLabel = previousDataItem.get(\"label\");\r\n\t\t\t\t\t\t\tif (previousLabel) {\r\n\t\t\t\t\t\t\t\tlet x = label.x();\r\n\t\t\t\t\t\t\t\tlet previousX = previousLabel.x();\r\n\r\n\t\t\t\t\t\t\t\tif (x - previousX < minDistance) {\r\n\t\t\t\t\t\t\t\t\tlet worse = this._pickWorse(previousDataItem, dataItem, gridInterval)\r\n\t\t\t\t\t\t\t\t\tif (worse) {\r\n\t\t\t\t\t\t\t\t\t\tworse.get(\"label\")?.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// todo y?\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// MINOR GRID\r\n\t\t\t\t\tif (minorGridInterval) {\r\n\t\t\t\t\t\tthis._addMinorGrid(value, endValue, minorDuration, minorGridInterval);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ti++;\r\n\r\n\t\t\t\t\tif (label && label.getPrivate(\"visible\")) {\r\n\t\t\t\t\t\tpreviousDataItem = dataItem;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpreviousValue = value;\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\t$array.each(this.series, (series) => {\r\n\t\t\t\tif (series.inited) {\r\n\t\t\t\t\tseries._markDirtyAxes();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tthis._updateGhost();\r\n\t}\r\n\r\n\tprotected _pickWorse(dataItemA: DataItem<IGaplessDateAxisDataItem>, dataItemB: DataItem<IGaplessDateAxisDataItem>, interval: ITimeInterval): DataItem<IGaplessDateAxisDataItem> {\r\n\t\tconst timeUnit = interval.timeUnit;\r\n\r\n\t\tconst valueA = dataItemA.get(\"value\", 0);\r\n\t\tconst valueB = dataItemB.get(\"value\", 0);\r\n\r\n\t\tif (timeUnit == \"hour\") {\r\n\t\t\tif (new Date(valueA).getDate() != new Date(valueB).getDate()) {\r\n\t\t\t\treturn dataItemA;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn dataItemB;\r\n\t}\r\n\r\n\tprotected _addMinorGrid(startValue: number, endValue: number, minorDuration: number, gridInterval: ITimeInterval) {\r\n\t\tconst minorFormats = this.get(\"minorDateFormats\", this.get(\"dateFormats\"))!;\r\n\t\tconst mTimeUnit = gridInterval.timeUnit;\r\n\t\tlet value = startValue + $time.getDuration(mTimeUnit, this._getM(mTimeUnit));\r\n\t\t//value = $time.round(new Date(value), mTimeUnit, 1, firstDay, utc, undefined, timezone).getTime();\r\n\t\tvalue = $time.roun(value, mTimeUnit, 1, this._root);\r\n\r\n\t\tlet maxValue = endValue - minorDuration * 0.5;\r\n\r\n\t\tlet minorSelectedItems: Array<number> = this._getIndexes(value, maxValue, gridInterval, value);\r\n\t\tconst dates = this._getDates();\r\n\r\n\t\t$array.each(minorSelectedItems, (index) => {\r\n\t\t\tlet minorDataItem: DataItem<this[\"_dataItemSettings\"]>;\r\n\t\t\tif (this.minorDataItems.length < this._m + 1) {\r\n\t\t\t\tminorDataItem = new DataItem<this[\"_dataItemSettings\"]>(this, undefined, {});\r\n\t\t\t\tthis.minorDataItems.push(minorDataItem);\r\n\t\t\t\tthis.processDataItem(minorDataItem);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tminorDataItem = this.minorDataItems[this._m];\r\n\t\t\t}\r\n\r\n\t\t\tvalue = dates[index];\r\n\t\t\tminorDataItem.setRaw(\"value\", value);\r\n\t\t\tminorDataItem.setRaw(\"endValue\", value + minorDuration);\r\n\t\t\tminorDataItem.setRaw(\"index\", index);\r\n\r\n\t\t\tthis._createAssets(minorDataItem, [\"minor\"], true);\r\n\r\n\t\t\tconst label = minorDataItem.get(\"label\");\r\n\t\t\tif (label) {\r\n\t\t\t\tif (this.get(\"renderer\").get(\"minorLabelsEnabled\")) {\r\n\t\t\t\t\tlet date = new Date(value);\r\n\t\t\t\t\tlet format = minorFormats[mTimeUnit];\r\n\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlabel.setPrivate(\"visible\", false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._toggleDataItem(minorDataItem, true);\r\n\t\t\tthis._prepareDataItem(minorDataItem, 1);\r\n\t\t\tthis._m++;\r\n\t\t})\r\n\t}\r\n\r\n\r\n\tprotected _getIndexes(value: number, maxValue: number, interval: ITimeInterval, firstValue: number): Array<number> {\r\n\t\tconst items: Array<number> = [];\r\n\t\tconst timeUnit = interval.timeUnit;\r\n\t\tconst count = interval.count;\r\n\t\tconst mmm = this._getM(timeUnit);\r\n\r\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\r\n\r\n\t\tconst root = this._root;\r\n\t\tconst dates = this._getDates();\r\n\r\n\t\tlet c = count - 1;\r\n\t\tlet previousValue = -Infinity;\r\n\r\n\t\tlet duration = $time.getDuration(timeUnit, mmm);\r\n\t\tlet fullDuration = $time.getDuration(timeUnit, count * mmm);\r\n\t\tlet originalValue = value;\r\n\r\n\t\tif (timeUnit == \"day\") {\r\n\t\t\tvalue = firstValue;\r\n\t\t}\r\n\r\n\t\twhile (value <= maxValue) {\r\n\t\t\t//value = $time.round(new Date(value), timeUnit, count, firstDay, utc, undefined, timezone).getTime();\r\n\t\t\tvalue = $time.roun(value, timeUnit, count, root);\r\n\r\n\t\t\tlet index = this.valueToIndex(value);\r\n\t\t\tlet realValue = dates[index];\r\n\r\n\t\t\tif (timeUnit == \"day\" && baseInterval.timeUnit == \"day\") {\r\n\t\t\t\tif (this._hasDate(value)) {\r\n\t\t\t\t\tc++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (c == count) {\r\n\t\t\t\t\tif (value >= originalValue - fullDuration * 2) {\r\n\t\t\t\t\t\t$array.move(items, index);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tc = 0;\r\n\t\t\t\t}\r\n\t\t\t\tvalue += duration;\r\n\t\t\t\t//value = $time.round(new Date(value), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\r\n\t\t\t\tvalue = $time.roun(value, timeUnit, 1, root);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (realValue < value) {\r\n\t\t\t\t\tfor (let i = index, len = dates.length; i < len; i++) {\r\n\t\t\t\t\t\trealValue = dates[i];\r\n\t\t\t\t\t\tif (realValue >= value) {\r\n\t\t\t\t\t\t\tindex = i;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$array.move(items, index);\r\n\r\n\t\t\t\tvalue += fullDuration;\r\n\t\t\t\t//value = $time.round(new Date(value), timeUnit, count, firstDay, utc, undefined, timezone).getTime();\r\n\t\t\t\tvalue = $time.roun(value, timeUnit, count, root);\r\n\t\t\t}\r\n\r\n\t\t\tif (value == previousValue) {\r\n\t\t\t\tvalue += fullDuration + duration;\r\n\t\t\t\t//value = $time.round(new Date(value), timeUnit, count, firstDay, utc, undefined, timezone).getTime();\r\n\t\t\t\tvalue = $time.roun(value, timeUnit, count, root);\r\n\t\t\t}\r\n\t\t\tif (value == previousValue) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tpreviousValue = value;\r\n\t\t}\r\n\r\n\t\treturn items;\r\n\t}\r\n\r\n\tprotected _hasDate(time: number) {\r\n\t\tconst result = $array.getSortedIndex(this._getDates(), (date) => {\r\n\t\t\treturn $order.compareNumber(date, time);\r\n\t\t});\r\n\r\n\t\treturn result.found;\r\n\t}\r\n\tprotected _nextTime(time: number, count: number, _baseInterval: ITimeInterval) {\r\n\t\tlet index = $math.fitToRange(this.valueToIndex(time) + count, 0, this._dates.length - 1);\r\n\t\treturn this._dates[index];\r\n\t}\r\n}","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport { MultiDisposer } from \"../../../core/util/Disposer\";\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IValueAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * Override minimum value for the axis scale.\n\t *\n\t * NOTE: the axis might modify the minimum value to fit into its scale better,\n\t * unless `strictMinMax` is set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tmin?: number;\n\n\t/**\n\t * Override maximum value for the axis scale.\n\t *\n\t * NOTE: the axis might modify the maximum value to fit into its scale better,\n\t * unless `strictMinMax` is set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tmax?: number;\n\n\t/**\n\t * Force axis scale to be precisely at values as set in `min` and/or `max`.\n\t *\n\t * In case `min` and/or `max` is not set, the axis will fix its scale to\n\t * precise lowest and highest values available through all of the series\n\t * attached to it.\n\t *\n\t * This effectively locks the axis from auto-zooming itself when chart\n\t * is zoomed in.\n\t *\n\t * If you need to zoom to actual low/high values within currently visible\n\t * scope, use `strictMinMaxSelection` instead.\n\t *\n\t * Use `extraMin` and `extraMax` to add extra \"padding\".\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tstrictMinMax?: boolean;\n\n\t/**\n\t * Force axis to auto-zoom to exact lowest and highest values from attached\n\t * series' data items within currently visible range.\n\t * \n\t * This is a good feature when your series is plotted from derivative values,\n\t * like `valueYChangeSelection` as it helps to avoid frequent jumping of\n\t * series to adjusted min and max of the axis.\n\t * \n\t * This will not work if strictMinMax is set to true (the axis will not zoom at all in this case).\n\t * \n\t * Use `extraMin` and `extraMax` to add extra \"padding\".\n\t *\n\t * @since 5.1.11\n\t */\n\tstrictMinMaxSelection?: boolean;\n\n\t/**\n\t * If set to `true` axis will use logarithmic scale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Logarithmic_scale} for more info\n\t */\n\tlogarithmic?: boolean;\n\n\t/**\n\t * Treat zero values as some other value.\n\t *\n\t * Useful in situations where zero would result in error, i.e. logarithmic\n\t * scale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Logarithmic_scale} for more info\n\t */\n\ttreatZeroAs?: number;\n\n\t/**\n\t * Relative extension to the automatically-calculated minimum value of the\n\t * axis scale.\n\t *\n\t * E..g. `0.1` will extend the scale by 10%, so if max value is `1000` and\n\t * minimum value is `0`, the new minimum value will be `-100`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Relative_scope_extension} for more info\n\t */\n\textraMin?: number;\n\n\t/**\n\t * Relative extension to the automatically-calculated maximum value of the\n\t * axis scale.\n\t *\n\t * E..g. `0.1` will extend the scale by 10%, so if max value is `1000`, the\n\t * axis will now show maximum value of `1100`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Relative_scope_extension} for more info\n\t */\n\textraMax?: number;\n\n\t/**\n\t * Base value, which indicates the threshold between \"positive\" and \"negative\"\n\t * values.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Base_value} for more info\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * Maximum number of decimals to allow in axis labels.\n\t *\n\t * This setting not only affects formatting of the labels, but also where and\n\t * how many grid/labels are placed on the axis.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Label_format} for more info\n\t */\n\tmaxPrecision?: number;\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<IValueAxisDataItem>) => void;\n\n\t/**\n\t * Number format to use for axis labels.\n\t *\n\t * If not set, will use format set in global number formatter.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Label_format} for more info\n\t */\n\tnumberFormat?: string;\n\n\t/**\n\t * A numeric format used for numbers displayed in axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Tooltip_number_format} for more info\n\t */\n\ttooltipNumberFormat?: string | Intl.NumberFormatOptions;\n\n\t/**\n\t * If set, will use greater precision for the axis tooltip than the one for\n\t * axis' actual labels.\n\t *\n\t * E.g. if axis displays labels with one decimal (`1.0`, `1.1`, `1.2`) setting\n\t * this setting to `1` would allow two decimals in axis tooltip, e.g. `1.15`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Tooltip_number_format} for more info\n\t */\n\textraTooltipPrecision?: number;\n\n\t/**\n\t * If your series relies on dynamically calculated values, like value\n\t * changes, percents, or total sums, set this to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Calculated_values} for more info\n\t */\n\tcalculateTotals?: boolean;\n\n\t/**\n\t * This setting can be set to an instance of another [[ValueAxis]].\n\t *\n\t * If set the grid of this axis will be synced with grid of the target axis.\n\t *\n\t * NOTE: this is not 100% guaranteed to work. In some rare cases perfect\n\t * sync might not be possible.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Syncing_grid} for more info\n\t */\n\tsyncWithAxis?: ValueAxis<AxisRenderer>;\n\n\t/**\n\t * If set to `false`, the axis won't be auto-zoomed to a selection (this\n\t * works only if the other axis is a `DateAxis` or a `CategoryAxis`).\n\t * \n\t * IMPORTANT: This setting will be ignored if both X and Y axes are\n\t * a `ValueAxis`.\n\t *\n\t * @since 5.2.20\n\t * @default true\n\t */\n\tautoZoom?: boolean;\n\n}\n\nexport interface IValueAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Value of the data item.\n\t */\n\tvalue?: number;\n\n\t/**\n\t * End value for axis items that span multiple values, like axis ranges.\n\t */\n\tendValue?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tlabelEndValue?: number;\n\n\t/**\n\t * If set to `true` the values fo this data item will be factored in when\n\t * calculating scale of the [[ValueAxis]]. Useful for axis ranges.\n\t * \n\t * @since 5.1.4\n\t */\n\taffectsMinMax?: boolean;\n\n}\n\nexport interface IMinMaxStep {\n\tmin: number;\n\tmax: number;\n\tstep: number;\n}\n\nexport interface IValueAxisPrivate extends IAxisPrivate {\n\n\t/**\n\t * Calculated current minimum value of the axis scale.\n\t * \n\t * @readonly\n\t */\n\tmin?: number;\n\n\t/**\n\t * Calculated current maximum value of the axis scale.\n\t * \n\t * @readonly\n\t */\n\tmax?: number;\n\n\t/**\n\t * A minimum value of the axis scale.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `min` is reflecting current intermediate value, whereas `minFinal` will\n\t * show target value.\n\t * \n\t * @readonly\n\t */\n\tminFinal?: number;\n\n\t/**\n\t * A maximum value of the axis scale.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `max` is reflecting current intermediate value, whereas `maxFinal` will\n\t * show target value.\n\t * \n\t * @readonly\n\t */\n\tmaxFinal?: number;\n\n\t/**\n\t * Calculated minimum value of the currently viewable (zoomed) scope.\n\t * \n\t * @readonly\n\t */\n\tselectionMin?: number;\n\n\t/**\n\t * Calculated maximum value of the currently viewable (zoomed) scope.\n\t * \n\t * @readonly\n\t */\n\tselectionMax?: number;\n\n\t/**\n\t * A target minimum value of the viewable value scope.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `selectionMin` is reflecting current intermediate value,\n\t * whereas `selectionMinFinal` will show target value.\n\t * \n\t * @readonly\n\t */\n\tselectionMinFinal?: number;\n\n\t/**\n\t * A target maximum value of the viewable value scope.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `selectionMax` is reflecting current intermediate value,\n\t * whereas `selectionMaxFinal` will show target value.\n\t * \n\t * @readonly\n\t */\n\tselectionMaxFinal?: number;\n\n\t/**\n\t * When selection step changes, it might change during axis zoom animation.\n\t *\n\t * `selectionStepFinal` will show what step will be when animation is\n\t * finished.\n\t * \n\t * @readonly\n\t */\n\tselectionStepFinal?: number;\n\n\t/**\n\t * Value step between grid lines.\n\t * \n\t * @readonly\n\t */\n\tstep?: number;\n\n\t/**\n\t * Decimal places used when formatting axis labels.\n\t * \n\t * @readonly\n\t */\n\tstepDecimalPlaces?: number;\n\n}\n\nexport interface IValueAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a value axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/} for more info\n * @important\n */\nexport class ValueAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"ValueAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([ValueAxis.className]);\n\n\tdeclare public _settings: IValueAxisSettings<R>;\n\tdeclare public _privateSettings: IValueAxisPrivate;\n\tdeclare public _dataItemSettings: IValueAxisDataItem;\n\tdeclare public _events: IValueAxisEvents;\n\n\tprotected _dirtyExtremes: boolean = false;\n\tprotected _dirtySelectionExtremes: boolean = false;\n\tprotected _dseHandled = false;\n\tprotected _deltaMinMax: number = 1;\n\tprotected _minReal: number | undefined;\n\tprotected _maxReal: number | undefined;\n\n\tprotected _minRealLog: number | undefined;\n\n\tprotected _baseValue: number = 0;\n\tprotected _syncDp?: MultiDisposer;\n\tprotected _minLogAdjusted: number = 1;\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t\tthis._dirtyExtremes = true;\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t\tthis._dirtySelectionExtremes = true;\n\t\tthis.markDirty();\n\t}\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.setPrivateRaw(\"name\", \"value\");\n\t\tthis.addTag(\"value\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"syncWithAxis\")) {\n\t\t\tlet previousValue = this._prevSettings.syncWithAxis;\n\t\t\tif (previousValue) {\n\t\t\t\tif (this._syncDp) {\n\t\t\t\t\tthis._syncDp.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet syncWithAxis = this.get(\"syncWithAxis\");\n\t\t\tif (syncWithAxis) {\n\t\t\t\tthis._syncDp = new MultiDisposer([\n\t\t\t\t\tsyncWithAxis.onPrivate(\"selectionMinFinal\", () => {\n\t\t\t\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\t\t\t}),\n\t\t\t\t\tsyncWithAxis.onPrivate(\"selectionMaxFinal\", () => {\n\t\t\t\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\t\t\t})\n\t\t\t\t])\n\t\t\t}\n\t\t}\n\n\t\tlet someDirty = false;\n\t\tif (this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"maxPrecision\") || this.isDirty(\"numberFormat\")) {\n\t\t\tsomeDirty = true;\n\t\t\tthis.ghostLabel.set(\"text\", \"\");\n\t\t}\n\n\t\t//if (this._dirtyExtremes || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"maxPrecision\")) {\n\t\tif (this._sizeDirty || this._dirtyExtremes || this._valuesDirty || someDirty || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"strictMinMaxSelection\")) {\n\t\t\tthis._getMinMax();\n\t\t\tthis._dirtyExtremes = false;\n\t\t}\n\t\t\n\t\tthis._handleSizeDirty();\n\n\t\tif (this._dirtySelectionExtremes && !this._isPanning && this.get(\"autoZoom\", true)) {\n\t\t\tconst chart = this.chart;\n\t\t\tlet getMM = false;\n\t\t\t// #1563\n\t\t\tif (chart) {\n\t\t\t\tconst letter = this.get(\"renderer\").getPrivate(\"letter\");\n\t\t\t\tif (letter == \"Y\") {\n\t\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.className != \"ValueAxis\") {\n\t\t\t\t\t\t\tgetMM = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\telse if (letter == \"X\") {\n\t\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.className != \"ValueAxis\") {\n\t\t\t\t\t\t\tgetMM = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (getMM) {\n\t\t\t\tthis._getSelectionMinMax();\n\t\t\t}\n\t\t\tthis._dirtySelectionExtremes = false;\n\t\t}\n\n\t\tthis._groupData();\n\n\t\tif (this._sizeDirty || this._valuesDirty || this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"min\") || this.isPrivateDirty(\"selectionMax\") || this.isPrivateDirty(\"selectionMin\") || this.isPrivateDirty(\"max\") || this.isPrivateDirty(\"step\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"logarithmic\")) {\n\t\t\tthis._handleRangeChange();\n\t\t\tthis._prepareAxisItems();\n\t\t\tthis._updateAxisRanges();\n\t\t}\n\n\t\tthis._baseValue = this.baseValue();\n\n\t}\n\n\tprotected _handleSizeDirty() {\n\t\tif (this._sizeDirty && !this._dseHandled) {\t\t\t\n\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\tthis._dseHandled = true;\n\n\t\t\tif(this.getPrivate(\"selectionMinFinal\") != this.getPrivate(\"selectionMin\") || this.getPrivate(\"selectionMaxFinal\") != this.getPrivate(\"selectionMax\")) {\n\t\t\t\tthis._dirtySelectionExtremes = false;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _clearDirty(): void {\n\t\tsuper._clearDirty();\n\t\tthis._dseHandled = false;\n\t}\n\n\tprotected _groupData() {\n\n\t}\n\n\tprotected _formatText(value: number) {\n\t\tconst numberFormat = this.get(\"numberFormat\");\n\t\tconst formatter = this.getNumberFormatter();\n\n\t\tlet text = \"\";\n\n\t\tif (numberFormat) {\n\t\t\ttext = formatter.format(value, numberFormat);\n\t\t}\n\t\telse {\n\t\t\ttext = formatter.format(value, undefined, this.getPrivate(\"stepDecimalPlaces\"));\n\t\t}\n\t\treturn text;\n\t}\n\n\tprotected _prepareAxisItems() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\n\t\t\tconst logarithmic = this.get(\"logarithmic\");\n\t\t\tconst step = this.getPrivate(\"step\")!;\n\t\t\tconst selectionMin = this.getPrivate(\"selectionMin\")!;\n\t\t\tconst selectionMax = this.getPrivate(\"selectionMax\")! + step;\n\n\t\t\tlet value = selectionMin - step;\n\t\t\tlet differencePower = 1;\n\t\t\tlet minLog: number = min;\n\n\t\t\tif (logarithmic) {\n\t\t\t\tvalue = this._minLogAdjusted;\n\n\t\t\t\tif (value < selectionMin) {\n\t\t\t\t\twhile (value < selectionMin) {\n\t\t\t\t\t\tvalue += step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tminLog = value;\n\n\t\t\t\tif (minLog <= 0) {\n\t\t\t\t\tminLog = 1;\n\t\t\t\t\tif (step < 1) {\n\t\t\t\t\t\tif ($type.isNumber(this._minRealLog)) {\n\t\t\t\t\t\t\tminLog = this._minRealLog;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tminLog = Math.pow(10, -50);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdifferencePower = Math.log(selectionMax - step) * Math.LOG10E - Math.log(minLog) * Math.LOG10E;\n\n\t\t\t\tif (differencePower > 2) {\n\t\t\t\t\tvalue = Math.pow(10, Math.log(minLog) * Math.LOG10E - 50);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/// minor grid\n\t\t\tconst renderer = this.get(\"renderer\");\n\t\t\tconst minorLabelsEnabled = renderer.get(\"minorLabelsEnabled\");\n\t\t\tconst minorGridEnabled = renderer.get(\"minorGridEnabled\", minorLabelsEnabled);\n\n\t\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\n\t\t\tconst stepAdjusted = Math.round(step / stepPower);\n\n\t\t\tlet minorGridCount = 2;\n\n\t\t\tif ($math.round(stepAdjusted / 5, 10) % 1 == 0) {\n\t\t\t\tminorGridCount = 5;\n\t\t\t}\n\n\t\t\tif ($math.round(stepAdjusted / 10, 10) % 1 == 0) {\n\t\t\t\tminorGridCount = 10;\n\t\t\t}\n\n\t\t\tlet minorStep = step / minorGridCount;\n\n\t\t\t// end of minor grid\n\t\t\tlet i = 0;\n\t\t\tlet m = 0;\n\t\t\tlet previous = -Infinity;\n\n\t\t\twhile (value < selectionMax) {\n\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\tif (this.dataItems.length < i + 1) {\n\t\t\t\t\tdataItem = new DataItem(this, undefined, {});\n\t\t\t\t\tthis._dataItems.push(dataItem);\n\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem = this.dataItems[i];\n\t\t\t\t}\n\n\t\t\t\tthis._createAssets(dataItem, []);\n\t\t\t\tthis._toggleDataItem(dataItem, true);\n\n\t\t\t\tdataItem.setRaw(\"value\", value);\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._formatText(value));\n\t\t\t\t}\n\n\t\t\t\tthis._prepareDataItem(dataItem);\n\n\t\t\t\tlet nextValue = value;\n\t\t\t\tif (!logarithmic) {\n\t\t\t\t\tnextValue += step;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (differencePower > 2) {\n\t\t\t\t\t\tnextValue = Math.pow(10, Math.log(minLog) * Math.LOG10E + i - 50);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnextValue += step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// minor grid\n\t\t\t\tif (minorGridEnabled) {\n\t\t\t\t\tlet minorValue = value + minorStep;\n\n\t\t\t\t\tif (logarithmic) {\n\t\t\t\t\t\tif (differencePower > 2) {\n\t\t\t\t\t\t\tlet minorMinMaxStep = this._adjustMinMax(value, nextValue, 10);\n\t\t\t\t\t\t\tminorStep = minorMinMaxStep.step;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tminorValue = value + minorStep;\n\t\t\t\t\t}\n\n\t\t\t\t\twhile (minorValue < nextValue - step * 0.00000000001) {\n\t\t\t\t\t\tlet minorDataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\t\t\tif (this.minorDataItems.length < m + 1) {\n\t\t\t\t\t\t\tminorDataItem = new DataItem(this, undefined, {});\n\t\t\t\t\t\t\tthis.minorDataItems.push(minorDataItem);\n\t\t\t\t\t\t\tthis.processDataItem(minorDataItem);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tminorDataItem = this.minorDataItems[m];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._createAssets(minorDataItem, [\"minor\"], true);\n\t\t\t\t\t\tthis._toggleDataItem(minorDataItem, true);\n\t\t\t\t\t\tminorDataItem.setRaw(\"value\", minorValue);\n\n\t\t\t\t\t\tconst minorLabel = minorDataItem.get(\"label\");\n\t\t\t\t\t\tif (minorLabel) {\n\t\t\t\t\t\t\tif (minorLabelsEnabled) {\n\t\t\t\t\t\t\t\tminorLabel.set(\"text\", this._formatText(minorValue));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tminorLabel.setPrivate(\"visible\", false);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._prepareDataItem(minorDataItem);\n\t\t\t\t\t\tminorValue += minorStep;\n\t\t\t\t\t\tm++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvalue = nextValue;\n\n\t\t\t\tif (previous == value) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\t\t\t\tif (stepPower < 1 && !logarithmic) {\n\t\t\t\t\t// exponent is less then 1 too. Count decimals of exponent\n\t\t\t\t\tlet decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 2;\n\t\t\t\t\t// round value to avoid floating point issues\n\t\t\t\t\tvalue = $math.round(value, decCount);\n\t\t\t\t}\n\t\t\t\ti++;\n\n\t\t\t\tprevious = value;\n\t\t\t}\n\n\t\t\tfor (let j = i; j < this.dataItems.length; j++) {\n\t\t\t\tthis._toggleDataItem(this.dataItems[j], false);\n\t\t\t}\n\n\t\t\tfor (let j = m; j < this.minorDataItems.length; j++) {\n\t\t\t\tthis._toggleDataItem(this.minorDataItems[j], false);\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.inited) {\n\t\t\t\t\tseries._markDirtyAxes();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis._updateGhost();\n\t\t}\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\t\tlet value = dataItem.get(\"value\")!;\n\t\tlet endValue = dataItem.get(\"endValue\");\n\n\t\tlet position = this.valueToPosition(value);\n\n\t\tlet endPosition = position;\n\t\tlet fillEndPosition = this.valueToPosition(value + this.getPrivate(\"step\")!);\n\n\t\tif ($type.isNumber(endValue)) {\n\t\t\tendPosition = this.valueToPosition(endValue);\n\t\t\tfillEndPosition = endPosition;\n\t\t}\n\n\t\tif (dataItem.get(\"isRange\")) {\n\t\t\tif (endValue == null) {\n\t\t\t\tfillEndPosition = position;\n\t\t\t}\n\t\t}\n\n\t\tlet labelEndPosition = endPosition;\n\n\t\tlet labelEndValue = dataItem.get(\"labelEndValue\");\n\t\tif (labelEndValue != null) {\n\t\t\tlabelEndPosition = this.valueToPosition(labelEndValue);\n\t\t}\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, labelEndPosition, count);\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\trenderer.updateGrid(grid, position, endPosition);\n\t\tif (grid) {\n\t\t\tif (value == this.get(\"baseValue\", 0)) {\n\t\t\t\tgrid.addTag(\"base\");\n\t\t\t\tgrid._applyThemes();\n\t\t\t}\n\t\t\telse if (grid.hasTag(\"base\")) {\n\t\t\t\tgrid.removeTag(\"base\");\n\t\t\t\tgrid._applyThemes();\n\t\t\t}\n\t\t}\n\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, labelEndPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tif (!dataItem.get(\"isRange\")) {\n\t\t\tconst fillRule = this.get(\"fillRule\");\n\t\t\tif (fillRule) {\n\t\t\t\tfillRule(dataItem)\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleRangeChange() {\n\t\tlet selectionMin: number = this.positionToValue(this.get(\"start\", 0));\n\t\tlet selectionMax: number = this.positionToValue(this.get(\"end\", 1));\n\n\t\tconst gridCount = this.get(\"renderer\").gridCount();\n\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\tlet stepDecimalPlaces = $utils.decimalPlaces(minMaxStep.step);\n\t\tthis.setPrivateRaw(\"stepDecimalPlaces\", stepDecimalPlaces);\n\n\t\tselectionMin = $math.round(selectionMin, stepDecimalPlaces);\n\t\tselectionMax = $math.round(selectionMax, stepDecimalPlaces);\n\n\t\tminMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\tlet step = minMaxStep.step;\n\t\tselectionMin = minMaxStep.min;\n\t\tselectionMax = minMaxStep.max;\n\n\t\tif (this.getPrivate(\"selectionMin\") !== selectionMin || this.getPrivate(\"selectionMax\") !== selectionMax || this.getPrivate(\"step\") !== step) {\n\t\t\t// do not change to setPrivate, will cause SO\n\t\t\tthis.setPrivateRaw(\"selectionMin\", selectionMin);\n\t\t\tthis.setPrivateRaw(\"selectionMax\", selectionMax);\n\n\t\t\tthis.setPrivateRaw(\"step\", step);\n\t\t}\n\t}\n\n\t/**\n\t * Converts a relative position to a corresponding numeric value from axis\n\t * scale.\n\t *\n\t * @param   position  Relative position\n\t * @return            Value\n\t */\n\tpublic positionToValue(position: number): number {\n\t\tconst min = this.getPrivate(\"min\")!;\n\t\tconst max = this.getPrivate(\"max\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn position * (max - min) + min;\n\t\t}\n\t\telse {\n\t\t\treturn Math.pow(Math.E, (position * ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E)) + Math.log(min) * Math.LOG10E) / Math.LOG10E);\n\t\t}\n\t}\n\n\t/**\n\t * Convers value to a relative position on axis.\n\t *\n\t * @param   value  Value\n\t * @return         Relative position\n\t */\n\tpublic valueToPosition(value: number): number {\n\n\t\tconst min = this.getPrivate(\"min\")!;\n\t\tconst max = this.getPrivate(\"max\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn (value - min) / (max - min);\n\t\t}\n\t\telse {\n\t\t\tif (value <= 0) {\n\t\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\t\tvalue = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic valueToFinalPosition(value: number): number {\n\n\t\tconst min = this.getPrivate(\"minFinal\")!;\n\t\tconst max = this.getPrivate(\"maxFinal\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn (value - min) / (max - min);\n\t\t}\n\t\telse {\n\t\t\tif (value <= 0) {\n\t\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\t\tvalue = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\n\t\t}\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific value.\n\t *\n\t * @param   value     Numeric value\n\t * @param   location  Location\n\t * @param   baseValue Base value\n\t * @return            X coordinate\n\t */\n\tpublic getX(value: number, location: number, baseValue: number) {\n\t\tvalue = baseValue + (value - baseValue) * location;\n\n\t\tconst position = this.valueToPosition(value);\n\t\treturn this._settings.renderer.positionToCoordinate(position);\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific value.\n\t *\n\t * @param   value     Numeric value\n\t * @param   location  Location\n\t * @param   baseValue Base value\n\t * @return            X coordinate\n\t */\n\tpublic getY(value: number, location: number, baseValue: number) {\n\t\tvalue = baseValue + (value - baseValue) * location;\n\n\t\tconst position = this.valueToPosition(value)\n\t\treturn this._settings.renderer.positionToCoordinate(position);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, _cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number) {\n\t\tlet value = dataItem.get(field as any);\n\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\t\tif (stackToItem) {\n\t\t\tconst series = dataItem.component as XYSeries;\n\t\t\tvalue = value * axisLocation + series.getStackedXValueWorking(dataItem, field);\n\t\t}\n\t\telse {\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, _cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\tlet value = dataItem.get(field as any);\n\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\t\tif (stackToItem) {\n\t\t\tconst series = dataItem.component as XYSeries;\n\t\t\tvalue = value * axisLocation + series.getStackedYValueWorking(dataItem, field);\n\t\t}\n\t\telse {\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * Returns relative position of axis' `baseValue`.\n\t *\n\t * @return  Base value position\n\t */\n\tpublic basePosition(): number {\n\t\treturn this.valueToPosition(this.baseValue());\n\t}\n\n\t/**\n\t * Base value of the [[ValueAxis]], which determines positive and negative\n\t * values.\n\t *\n\t * @return Base value\n\t */\n\tpublic baseValue(): number {\n\t\tconst min = Math.min(this.getPrivate(\"minFinal\", -Infinity), this.getPrivate(\"selectionMin\", -Infinity));\n\t\tconst max = Math.max(this.getPrivate(\"maxFinal\", Infinity), this.getPrivate(\"selectionMax\", Infinity));\n\t\tlet baseValue = this.get(\"baseValue\", 0);\n\n\t\tif (baseValue < min) {\n\t\t\tbaseValue = min;\n\t\t}\n\n\t\tif (baseValue > max) {\n\t\t\tbaseValue = max\n\t\t}\n\n\t\treturn baseValue;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic cellEndValue(value: number): number {\n\t\treturn value;\n\t}\n\n\tprotected fixSmallStep(step: number): number {\n\t\t// happens because of floating point error\n\t\tif (1 + step === 1) {\n\t\t\tstep *= 2;\n\t\t\treturn this.fixSmallStep(step);\n\t\t}\n\t\treturn step;\n\t}\n\n\tprotected _fixMin(min: number) {\n\t\treturn min;\n\t}\n\n\tprotected _fixMax(max: number) {\n\t\treturn max;\n\t}\n\n\tpublic _calculateTotals() {\n\t\tif (this.get(\"calculateTotals\")) {\n\t\t\tlet series = this.series[0];\n\t\t\tif (series) {\n\t\t\t\tlet startIndex = series.startIndex();\n\n\t\t\t\tif (series.dataItems.length > 0) {\n\n\t\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\t\tstartIndex--;\n\t\t\t\t\t}\n\t\t\t\t\tlet endIndex = series.endIndex();\n\t\t\t\t\tif (endIndex < series.dataItems.length) {\n\t\t\t\t\t\tendIndex++;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet field: string | undefined;\n\t\t\t\t\tlet vc: string | undefined;\n\n\t\t\t\t\tif (series.get(\"yAxis\") == this) {\n\t\t\t\t\t\tfield = \"valueY\";\n\t\t\t\t\t\tvc = \"vcy\";\n\t\t\t\t\t}\n\t\t\t\t\telse if (series.get(\"xAxis\") == this) {\n\t\t\t\t\t\tfield = \"valueX\";\n\t\t\t\t\t\tvc = \"vcx\";\n\t\t\t\t\t}\n\n\t\t\t\t\tlet fieldWorking = field + \"Working\";\n\n\t\t\t\t\tif (field) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tlet sum = 0;\n\t\t\t\t\t\t\tlet total = 0;\n\n\t\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\t\tif (!series.get(\"excludeFromTotal\")) {\n\t\t\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\t\t\tlet value = dataItem.get(fieldWorking as any) * series.get(vc as any);\n\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNaN(value)) {\n\t\t\t\t\t\t\t\t\t\t\tsum += value;\n\t\t\t\t\t\t\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\t\tif (!series.get(\"excludeFromTotal\")) {\n\t\t\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\t\t\tlet value = dataItem.get(fieldWorking as any) * series.get(vc as any);\n\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNaN(value)) {\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"Total\") as any, total);\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"Sum\") as any, sum);\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"TotalPercent\") as any, value / total * 100);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getSelectionMinMax() {\n\t\tconst min = this.getPrivate(\"minFinal\");\n\t\tconst max = this.getPrivate(\"maxFinal\");\n\n\t\tconst minDefined = this.get(\"min\");\n\t\tconst maxDefined = this.get(\"max\");\n\n\t\tlet extraMin = this.get(\"extraMin\", 0);\n\t\tlet extraMax = this.get(\"extraMax\", 0);\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tif (this.get(\"extraMin\") == null) {\n\t\t\t\textraMin = 0.1;\n\t\t\t}\n\t\t\tif (this.get(\"extraMax\") == null) {\n\t\t\t\textraMax = 0.2;\n\t\t\t}\n\t\t}\n\n\t\tconst gridCount = this.get(\"renderer\").gridCount();\n\t\tconst selectionStrictMinMax = this.get(\"strictMinMaxSelection\");\n\t\tlet strictMinMax = this.get(\"strictMinMax\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tlet selectionMin = max;\n\t\t\tlet selectionMax = min;\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (!series.get(\"ignoreMinMax\")) {\n\t\t\t\t\tlet seriesMin: number | undefined;\n\t\t\t\t\tlet seriesMax: number | undefined;\n\t\t\t\t\tconst outOfSelection = series.getPrivate(\"outOfSelection\");\n\n\t\t\t\t\tif (series.get(\"xAxis\") === this) {\n\t\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\t\tlet minX = series.getPrivate(\"minX\");\n\t\t\t\t\t\t\tlet maxX = series.getPrivate(\"maxX\");\n\n\t\t\t\t\t\t\t// solves #90085\n\t\t\t\t\t\t\tif (series.startIndex() != 0 || series.endIndex() != series.dataItems.length) {\n\t\t\t\t\t\t\t\tminX = undefined;\n\t\t\t\t\t\t\t\tmaxX = undefined;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tseriesMin = series.getPrivate(\"selectionMinX\", minX);\n\t\t\t\t\t\t\tseriesMax = series.getPrivate(\"selectionMaxX\", maxX);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (series.get(\"yAxis\") === this) {\n\t\t\t\t\t\tif (!outOfSelection) {\n\n\t\t\t\t\t\t\tlet minY = series.getPrivate(\"minY\");\n\t\t\t\t\t\t\tlet maxY = series.getPrivate(\"maxY\");\n\n\t\t\t\t\t\t\t// solves #90085\n\t\t\t\t\t\t\tif (series.startIndex() != 0 || series.endIndex() != series.dataItems.length) {\n\t\t\t\t\t\t\t\tminY = undefined;\n\t\t\t\t\t\t\t\tmaxY = undefined;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tseriesMin = series.getPrivate(\"selectionMinY\", minY);\n\t\t\t\t\t\t\tseriesMax = series.getPrivate(\"selectionMaxY\", maxY);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!series.isHidden() && !series.isShowing()) {\n\t\t\t\t\t\tif ($type.isNumber(seriesMin)) {\n\t\t\t\t\t\t\tselectionMin = Math.min(selectionMin, seriesMin);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($type.isNumber(seriesMax)) {\n\t\t\t\t\t\t\tselectionMax = Math.max(selectionMax, seriesMax);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis.axisRanges.each((range) => {\n\t\t\t\tif (range.get(\"affectsMinMax\")) {\n\t\t\t\t\tlet value = range.get(\"value\");\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tselectionMin = Math.min(selectionMin, value);\n\t\t\t\t\t\tselectionMax = Math.max(selectionMax, value);\n\t\t\t\t\t}\n\t\t\t\t\tvalue = range.get(\"endValue\");\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tselectionMin = Math.min(selectionMin, value);\n\t\t\t\t\t\tselectionMax = Math.max(selectionMax, value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (selectionMin > selectionMax) {\n\t\t\t\t[selectionMin, selectionMax] = [selectionMax, selectionMin]\n\t\t\t}\n\n\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\tif (strictMinMax) {\n\t\t\t\t\tselectionMin = minDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMin = min;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (strictMinMax) {\n\t\t\t\tif ($type.isNumber(this._minReal)) {\n\t\t\t\t\tselectionMin = this._minReal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\tif (strictMinMax) {\n\t\t\t\t\tselectionMax = maxDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMax = max;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (strictMinMax) {\n\t\t\t\tif ($type.isNumber(this._maxReal)) {\n\t\t\t\t\tselectionMax = this._maxReal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (selectionMin === selectionMax) {\n\t\t\t\tlet smin = selectionMin;\n\t\t\t\tselectionMin -= this._deltaMinMax;\n\t\t\t\tselectionMax += this._deltaMinMax;\n\n\t\t\t\tif (selectionMin < min) {\n\t\t\t\t\tlet d = smin - min;\n\t\t\t\t\tif (d == 0) {\n\t\t\t\t\t\td = this._deltaMinMax;\n\t\t\t\t\t}\n\n\t\t\t\t\tselectionMin = smin - d;\n\t\t\t\t\tselectionMax = smin + d;\n\n\t\t\t\t\tstrictMinMax = true;\n\t\t\t\t}\n\n\t\t\t\tlet minMaxStep2 = this._adjustMinMax(selectionMin, selectionMax, gridCount, strictMinMax);\n\t\t\t\tselectionMin = minMaxStep2.min;\n\t\t\t\tselectionMax = minMaxStep2.max;\n\t\t\t}\n\n\t\t\tlet selectionMinReal = selectionMin;\n\t\t\tlet selectionMaxReal = selectionMax;\n\n\t\t\tlet delta = selectionMax - selectionMin;\n\n\t\t\tselectionMin -= delta * extraMin;\n\t\t\tselectionMax += delta * extraMax;\t\t\t\n\n\t\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount);\n\n\t\t\tselectionMin = minMaxStep.min;\n\t\t\tselectionMax = minMaxStep.max;\n\n\t\t\tselectionMin = $math.fitToRange(selectionMin, min, max);\n\t\t\tselectionMax = $math.fitToRange(selectionMax, min, max);\n\n\t\t\t// do it for the second time !important\t\t\t\n\t\t\tminMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\t\tif (!strictMinMax) {\n\t\t\t\tselectionMin = minMaxStep.min;\n\t\t\t\tselectionMax = minMaxStep.max;\n\t\t\t}\n\n\t\t\tconst syncWithAxis = this.get(\"syncWithAxis\");\n\t\t\tif (syncWithAxis) {\n\t\t\t\tminMaxStep = this._syncAxes(selectionMin, selectionMax, minMaxStep.step, syncWithAxis.getPrivate(\"selectionMinFinal\", syncWithAxis.getPrivate(\"minFinal\", 0)), syncWithAxis.getPrivate(\"selectionMaxFinal\", syncWithAxis.getPrivate(\"maxFinal\", 1)), syncWithAxis.getPrivate(\"selectionStepFinal\", syncWithAxis.getPrivate(\"step\", 1)));\n\n\t\t\t\tif (minMaxStep.min < min) {\n\t\t\t\t\tminMaxStep.min = min;\n\t\t\t\t}\n\n\t\t\t\tif (minMaxStep.max > max) {\n\t\t\t\t\tminMaxStep.max = max;\n\t\t\t\t}\n\n\t\t\t\tselectionMin = minMaxStep.min;\n\t\t\t\tselectionMax = minMaxStep.max;\n\t\t\t}\n\t\n\t\t\tif (strictMinMax) {\n\t\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\t\tselectionMin = Math.max(selectionMin, minDefined);\n\t\t\t\t}\n\n\t\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\t\tselectionMax = Math.min(selectionMax, maxDefined);\n\t\t\t\t}\t\t\t\n\t\t\t}\n\n\t\t\tif (selectionStrictMinMax) {\n\t\t\t\tselectionMin = selectionMinReal - (selectionMaxReal - selectionMinReal) * extraMin;\n\t\t\t\tselectionMax = selectionMaxReal + (selectionMaxReal - selectionMinReal) * extraMax;\n\t\t\t}\n\n\t\t\tif (strictMinMax) {\n\t\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\t\tselectionMin = minDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMin = selectionMinReal;\n\t\t\t\t}\n\t\n\t\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\t\tselectionMax = maxDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMax = selectionMaxReal;\n\t\t\t\t}\n\t\n\t\t\t\tif (selectionMax - selectionMin <= 0.00000001) {\n\t\t\t\t\tselectionMin -= this._deltaMinMax;\n\t\t\t\t\tselectionMax += this._deltaMinMax;\n\t\t\t\t}\n\t\n\t\t\t\tlet delta = selectionMax - selectionMin;\n\n\t\t\t\tselectionMin -= delta * extraMin;\n\t\t\t\tselectionMax += delta * extraMax;\n\t\t\t}\t\t\n\n\t\t\tif (this.get(\"logarithmic\")) {\n\n\t\t\t\tif (selectionMin <= 0) {\n\t\t\t\t\tselectionMin = selectionMinReal * (1 - Math.min(extraMin, 0.99));\n\t\t\t\t}\n\n\t\t\t\tif (selectionMin < min) {\n\t\t\t\t\tselectionMin = min;\n\t\t\t\t}\n\t\t\t\tif (selectionMax > max) {\n\t\t\t\t\tselectionMax = max;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet len = Math.min(20, Math.ceil(Math.log(this.getPrivate(\"maxZoomFactor\", 100) + 1) / Math.LN10) + 2);\n\n\t\t\tlet start = $math.round(this.valueToFinalPosition(selectionMin), len);\n\t\t\tlet end = $math.round(this.valueToFinalPosition(selectionMax), len);\n\n\t\t\tthis.setPrivateRaw(\"selectionMinFinal\", selectionMin);\n\t\t\tthis.setPrivateRaw(\"selectionMaxFinal\", selectionMax);\n\t\t\tthis.setPrivateRaw(\"selectionStepFinal\", minMaxStep.step);\n\t\t\t\n\t\t\tthis.zoom(start, end);\n\t\t}\n\t}\n\n\n\tprotected _getMinMax() {\n\t\tlet minDefined = this.get(\"min\");\n\t\tlet maxDefined = this.get(\"max\");\n\n\t\tlet min = Infinity;\n\t\tlet max = -Infinity;\n\n\t\tlet extraMin = this.get(\"extraMin\", 0);\n\t\tlet extraMax = this.get(\"extraMax\", 0);\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tif (this.get(\"extraMin\") == null) {\n\t\t\t\textraMin = 0.1;\n\t\t\t}\n\t\t\tif (this.get(\"extraMax\") == null) {\n\t\t\t\textraMax = 0.2;\n\t\t\t}\n\t\t}\n\n\t\tlet minDiff = Infinity;\n\n\t\t$array.each(this.series, (series) => {\n\t\t\tif (!series.get(\"ignoreMinMax\")) {\n\t\t\t\tlet seriesMin: number | undefined;\n\t\t\t\tlet seriesMax: number | undefined;\n\t\t\t\tif (series.get(\"xAxis\") === this) {\n\t\t\t\t\tseriesMin = series.getPrivate(\"minX\");\n\t\t\t\t\tseriesMax = series.getPrivate(\"maxX\");\n\t\t\t\t}\n\t\t\t\telse if (series.get(\"yAxis\") === this) {\n\t\t\t\t\tseriesMin = series.getPrivate(\"minY\");\n\t\t\t\t\tseriesMax = series.getPrivate(\"maxY\");\n\t\t\t\t}\n\n\t\t\t\tif ($type.isNumber(seriesMin) && $type.isNumber(seriesMax)) {\n\t\t\t\t\tmin = Math.min(min, seriesMin);\n\t\t\t\t\tmax = Math.max(max, seriesMax);\n\n\t\t\t\t\tlet diff = seriesMax - seriesMin;\n\n\t\t\t\t\tif (diff <= 0) {\n\t\t\t\t\t\tdiff = Math.abs(seriesMax / 100);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (diff < minDiff) {\n\t\t\t\t\t\tminDiff = diff;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tthis.axisRanges.each((range) => {\n\t\t\tif (range.get(\"affectsMinMax\")) {\n\t\t\t\tlet value = range.get(\"value\");\n\t\t\t\tif (value != null) {\n\t\t\t\t\tmin = Math.min(min, value);\n\t\t\t\t\tmax = Math.max(max, value);\n\t\t\t\t}\n\t\t\t\tvalue = range.get(\"endValue\");\n\t\t\t\tif (value != null) {\n\t\t\t\t\tmin = Math.min(min, value);\n\t\t\t\t\tmax = Math.max(max, value);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\tif (min <= 0) {\n\t\t\t\t\tmin = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (min <= 0) {\n\t\t\t\tnew Error(\"Logarithmic value axis can not have values <= 0.\");\n\t\t\t}\n\t\t}\n\n\t\tif (min === 0 && max === 0) {\n\t\t\tmax = 0.9;\n\t\t\tmin = -0.9;\n\t\t}\n\n\t\tif ($type.isNumber(minDefined)) {\n\t\t\tmin = minDefined;\n\t\t}\n\t\tif ($type.isNumber(maxDefined)) {\n\t\t\tmax = maxDefined;\n\t\t}\n\n\t\t// meaning no min/max found on series/ranges and no min/max was defined\n\t\tif (min === Infinity || max === -Infinity) {\n\t\t\tthis.setPrivate(\"minFinal\", undefined);\n\t\t\tthis.setPrivate(\"maxFinal\", undefined);\n\t\t\treturn;\n\t\t}\n\n\t\tif (min > max) {\n\t\t\t[min, max] = [max, min];\n\t\t}\n\n\t\tconst initialMin = min;\n\t\tconst initialMax = max;\n\n\t\t// adapter\n\t\tlet minAdapted = this.adapters.fold(\"min\", min);\n\t\tlet maxAdapted = this.adapters.fold(\"max\", max);\n\n\t\tthis._minRealLog = min;\n\n\t\tif ($type.isNumber(minAdapted)) {\n\t\t\tmin = minAdapted;\n\t\t}\n\n\t\tif ($type.isNumber(maxAdapted)) {\n\t\t\tmax = maxAdapted;\n\t\t}\n\n\t\t// DateAxis does some magic here\n\t\tmin = this._fixMin(min);\n\t\tmax = this._fixMax(max);\n\n\t\t// this happens if starLocation and endLocation are 0.5 and DateAxis has only one date\t\t\n\t\tif (max - min <= 1 / Math.pow(10, 15)) {\n\t\t\tif (max - min !== 0) {\n\t\t\t\tthis._deltaMinMax = (max - min) / 2;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._getDelta(max);\n\t\t\t}\n\n\t\t\tmin -= this._deltaMinMax;\n\t\t\tmax += this._deltaMinMax;\n\t\t}\n\n\t\t// add extras\n\t\tmin -= (max - min) * extraMin;\n\t\tmax += (max - min) * extraMax;\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\t// don't let min go below 0 if real min is >= 0\n\t\t\tif (min < 0 && initialMin >= 0) {\n\t\t\t\tmin = 0;\n\t\t\t}\n\t\t\t// don't let max go above 0 if real max is <= 0\n\t\t\tif (max > 0 && initialMax <= 0) {\n\t\t\t\tmax = 0;\n\t\t\t}\n\t\t}\n\n\t\tthis._minReal = min;\n\t\tthis._maxReal = max;\n\n\t\tlet strictMinMax = this.get(\"strictMinMax\");\n\t\tlet strictMinMaxSelection = this.get(\"strictMinMaxSelection\", false);\n\t\tif (strictMinMaxSelection) {\n\t\t\tstrictMinMax = strictMinMaxSelection;\n\t\t}\n\n\t\tlet strict = strictMinMax;\n\t\tif ($type.isNumber(maxDefined)) {\n\t\t\tstrict = true;\n\t\t}\n\n\t\tlet gridCount = this.get(\"renderer\").gridCount();\n\n\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(min, max, gridCount, strict);\n\n\t\tmin = minMaxStep.min;\n\t\tmax = minMaxStep.max;\n\n\t\t// do it for the second time with strict true (importat!)\n\t\tminMaxStep = this._adjustMinMax(min, max, gridCount, true);\n\n\t\tmin = minMaxStep.min;\n\t\tmax = minMaxStep.max;\n\n\t\t// return min max if strict\n\t\tif (strictMinMax) {\n\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\tmin = minDefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmin = this._minReal;\n\t\t\t}\n\n\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\tmax = maxDefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmax = this._maxReal;\n\t\t\t}\n\n\t\t\tif (max - min <= 0.00000001) {\n\t\t\t\tmin -= this._deltaMinMax;\n\t\t\t\tmax += this._deltaMinMax;\n\t\t\t}\n\n\t\t\tlet delta = max - min;\n\t\t\tmin -= delta * extraMin;\n\t\t\tmax += delta * extraMax;\n\t\t}\n\n\t\tminAdapted = this.adapters.fold(\"min\", min);\n\t\tmaxAdapted = this.adapters.fold(\"max\", max);\n\n\t\tif ($type.isNumber(minAdapted)) {\n\t\t\tmin = minAdapted;\n\t\t}\n\n\t\tif ($type.isNumber(maxAdapted)) {\n\t\t\tmax = maxAdapted;\n\t\t}\n\n\t\tif (minDiff == Infinity) {\n\t\t\tminDiff = (max - min)\n\t\t}\n\n\t\t// this is to avoid floating point number error\n\t\tlet decCount = Math.round(Math.abs(Math.log(Math.abs(max - min)) * Math.LOG10E)) + 5;\n\n\t\tmin = $math.round(min, decCount);\n\t\tmax = $math.round(max, decCount);\n\n\t\t\n\n\t\tconst syncWithAxis = this.get(\"syncWithAxis\");\n\t\tif (syncWithAxis) {\n\t\t\tminMaxStep = this._syncAxes(min, max, minMaxStep.step, syncWithAxis.getPrivate(\"minFinal\", syncWithAxis.getPrivate(\"min\", 0)), syncWithAxis.getPrivate(\"maxFinal\", syncWithAxis.getPrivate(\"max\", 1)), syncWithAxis.getPrivate(\"step\", 1));\n\t\t\tmin = minMaxStep.min;\n\t\t\tmax = minMaxStep.max;\n\t\t}\n\n\n\t\tthis.setPrivateRaw(\"maxZoomFactor\", Math.max(1, Math.ceil((max - min) / minDiff * this.get(\"maxZoomFactor\", 100))));\n\t\tthis._fixZoomFactor();\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tthis._minLogAdjusted = min;\n\t\t\tmin = this._minReal;\n\t\t\tmax = this._maxReal;\n\n\t\t\tif (min <= 0) {\n\t\t\t\tmin = initialMin * (1 - Math.min(extraMin, 0.99));\n\t\t\t}\n\t\t}\n\n\t\t\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tif (this.getPrivate(\"minFinal\") !== min || this.getPrivate(\"maxFinal\") !== max) {\n\n\t\t\t\tthis.setPrivate(\"minFinal\", min);\n\t\t\t\tthis.setPrivate(\"maxFinal\", max);\n\t\t\t\tthis._saveMinMax(min, max);\n\n\t\t\t\tconst duration = this.get(\"interpolationDuration\", 0);\n\t\t\t\tconst easing = this.get(\"interpolationEasing\");\n\n\t\t\t\tthis.animatePrivate({ key: \"min\", to: min, duration, easing });\n\t\t\t\tthis.animatePrivate({ key: \"max\", to: max, duration, easing });\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _fixZoomFactor() {\n\t}\n\n\tprotected _getDelta(max: number) {\n\t\t// the number by which we need to raise 10 to get difference\n\t\tlet exponent: number = Math.log(Math.abs(max)) * Math.LOG10E;\n\n\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\n\t\tlet power = Math.pow(10, Math.floor(exponent));\n\n\t\t// reduce this number by 10 times\n\t\tpower = power / 10;\n\n\t\tthis._deltaMinMax = power;\n\t}\n\n\tprotected _saveMinMax(_min: number, _max: number) {\n\n\t}\n\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\n\t\t// will fail if 0\n\t\tif (gridCount <= 1) {\n\t\t\tgridCount = 1;\n\t\t}\n\n\t\tgridCount = Math.round(gridCount);\n\n\t\tlet initialMin: number = min;\n\t\tlet initialMax: number = max;\n\n\t\tlet difference = max - min;\n\n\t\t// in case min and max is the same, use max\n\t\tif (difference === 0) {\n\t\t\tdifference = Math.abs(max);\n\t\t}\n\n\t\t// the number by which we need to raise 10 to get difference\n\t\tlet exponent: number = Math.log(Math.abs(difference)) * Math.LOG10E;\n\n\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\n\t\tlet power = Math.pow(10, Math.floor(exponent));\n\n\t\t// reduce this number by 10 times\n\t\tpower = power / 10;\n\n\t\tlet extra: number = power;\n\t\tif (strictMode) {\n\t\t\textra = 0;\n\t\t}\n\n\t\t// round down min\n\t\tif (strictMode) {\n\t\t\tmin = Math.floor(min / power) * power;\n\t\t\t// round up max\n\t\t\tmax = Math.ceil(max / power) * power;\n\t\t}\n\t\telse {\n\t\t\tmin = Math.ceil(min / power) * power - extra;\n\t\t\t// round up max\n\t\t\tmax = Math.floor(max / power) * power + extra;\n\t\t}\n\n\t\t// don't let min go below 0 if real min is >= 0\n\t\tif (min < 0 && initialMin >= 0) {\n\t\t\tmin = 0;\n\t\t}\n\t\t// don't let max go above 0 if real max is <= 0\n\t\tif (max > 0 && initialMax <= 0) {\n\t\t\tmax = 0;\n\t\t}\n\n\t\texponent = Math.log(Math.abs(difference)) * Math.LOG10E;\n\t\tpower = Math.pow(10, Math.floor(exponent));\n\t\tpower = power / 100; // used to be 10 in v4, but this caused issue that there could be limited number of grids with even very small minGridDistance\n\n\t\t// approximate difference between two grid lines\n\t\tlet step = Math.ceil((difference / gridCount) / power) * power;\n\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\n\t\t// the step should divide by  2, 5, and 10.\n\t\tlet stepDivisor: number = Math.ceil(step / stepPower); // number 0 - 10\n\n\n\t\tif (stepDivisor > 5) {\n\t\t\tstepDivisor = 10;\n\t\t}\n\t\telse if (stepDivisor <= 5 && stepDivisor > 2) {\n\t\t\tstepDivisor = 5;\n\t\t}\n\n\t\t// now get real step\n\t\tstep = Math.ceil(step / (stepPower * stepDivisor)) * stepPower * stepDivisor;\n\n\n\t\tlet maxPrecision = this.get(\"maxPrecision\");\n\t\tif ($type.isNumber(maxPrecision)) {\n\n\t\t\tlet ceiledStep = $math.ceil(step, maxPrecision);\n\t\t\tif (maxPrecision < Number.MAX_VALUE && step !== ceiledStep) {\n\t\t\t\tstep = ceiledStep;\n\t\t\t\tif (step == 0) {\n\t\t\t\t\tstep = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet decCount: number = 0;\n\t\t// in case numbers are smaller than 1\n\t\tif (stepPower < 1) {\n\t\t\t// exponent is less then 1 too. Count decimals of exponent\n\t\t\tdecCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 1;\n\t\t\t// round step\n\t\t\tstep = $math.round(step, decCount);\n\t\t}\n\n\t\t// final min and max\n\t\tlet minCount = Math.floor(min / step);\n\n\t\tmin = $math.round(step * minCount, decCount);\n\n\t\tlet maxCount: number;\n\n\t\tif (!strictMode) {\n\t\t\tmaxCount = Math.ceil(max / step);\n\t\t}\n\t\telse {\n\t\t\tmaxCount = Math.floor(max / step);\n\t\t}\n\n\t\tif (maxCount === minCount) {\n\t\t\tmaxCount++;\n\t\t}\n\n\t\tmax = $math.round(step * maxCount, decCount);\n\n\t\tif (max < initialMax) {\n\t\t\tmax = max + step;\n\t\t}\n\n\t\tif (min > initialMin) {\n\t\t\tmin = min - step;\n\t\t}\n\n\n\t\tstep = this.fixSmallStep(step);\n\n\t\treturn { min: min, max: max, step: step };\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number, _adjustPosition?: boolean): string | undefined {\n\t\tconst numberFormat = this.get(\"tooltipNumberFormat\", this.get(\"numberFormat\"));\n\t\tconst formatter = this.getNumberFormatter();\n\t\tconst extraDecimals = this.get(\"extraTooltipPrecision\", 0);\n\t\tconst decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\n\t\tconst value = $math.round(this.positionToValue(position), decimals);\n\n\t\tif (numberFormat) {\n\t\t\treturn formatter.format(value, numberFormat);\n\t\t}\n\t\telse {\n\t\t\treturn formatter.format(value, undefined, decimals);\n\t\t}\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\tlet value = this.positionToValue(position);\n\n\t\tlet index: number | undefined = undefined;\n\t\tlet oldDiff: number;\n\t\t$array.each(series.dataItems, (dataItem, i) => {\n\t\t\tconst diff = Math.abs(dataItem.get(fieldName) - value);\n\t\t\tif (index === undefined || diff < oldDiff) {\n\t\t\t\tindex = i;\n\t\t\t\toldDiff = diff;\n\t\t\t}\n\t\t});\n\n\t\tif (index != null) {\n\t\t\treturn series.dataItems[index];\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` values.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start value\n\t * @param  end       End value\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToValues(start: number, end: number, duration?: number) {\n\t\tconst min = this.getPrivate(\"minFinal\", 0);\n\t\tconst max = this.getPrivate(\"maxFinal\", 0);\n\t\tif (this.getPrivate(\"min\") != null && this.getPrivate(\"max\") != null) {\n\t\t\tthis.zoom((start - min) / (max - min), (end - min) / (max - min), duration);\n\t\t}\n\t}\n\n\n\t/**\n\t * Syncs with a target axis.\n\t *\n\t * @param  min  Min\n\t * @param  max  Max\n\t * @param  step Step\n\t */\n\tprotected _syncAxes(min: number, max: number, step: number, syncMin: number, syncMax: number, syncStep: number) {\n\t\tlet axis = this.get(\"syncWithAxis\");\n\t\tif (axis) {\n\t\t\tlet count: number = Math.round(syncMax - syncMin) / syncStep;\n\t\t\tlet currentCount = Math.round((max - min) / step);\n\n\t\t\tlet gridCount = this.get(\"renderer\").gridCount();\n\n\t\t\tif ($type.isNumber(count) && $type.isNumber(currentCount)) {\n\t\t\t\tlet synced = false;\n\t\t\t\tlet c = 0\n\t\t\t\tlet diff = (max - min) * 0.01;\n\t\t\t\tlet omin = min;\n\t\t\t\tlet omax = max;\n\t\t\t\tlet ostep = step;\n\n\t\t\t\twhile (synced != true) {\n\t\t\t\t\tsynced = this._checkSync(omin, omax, ostep, count);\n\t\t\t\t\tc++;\n\t\t\t\t\tif (c > 500) {\n\t\t\t\t\t\tsynced = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (!synced) {\n\t\t\t\t\t\tif (c / 3 == Math.round(c / 3)) {\n\t\t\t\t\t\t\tomin = min - diff * c;\n\t\t\t\t\t\t\tif (min >= 0 && omin < 0) {\n\t\t\t\t\t\t\t\tomin = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tomax = max + diff * c;\n\t\t\t\t\t\t\tif (omax <= 0 && omax > 0) {\n\t\t\t\t\t\t\t\tomax = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet minMaxStep = this._adjustMinMax(omin, omax, gridCount, true);\n\t\t\t\t\t\tomin = minMaxStep.min;\n\t\t\t\t\t\tomax = minMaxStep.max;\n\t\t\t\t\t\tostep = minMaxStep.step;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tmin = omin;\n\t\t\t\t\t\tmax = omax;\n\t\t\t\t\t\tstep = ostep;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { min: min, max: max, step: step };\n\t}\n\n\t/**\n\t * Returns `true` if axis needs to be resunced with some other axis.\n\t */\n\tprotected _checkSync(min: number, max: number, step: number, count: number): boolean {\n\t\tlet currentCount = (max - min) / step;\n\t\tfor (let i = 1; i < count; i++) {\n\t\t\tif ($math.round(currentCount / i, 1) == count || currentCount * i == count) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns relative position between two grid lines of the axis.\n\t *\n\t * @return Position\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\tlet max = this.getPrivate(\"selectionMax\", this.getPrivate(\"max\"));\n\t\tlet min = this.getPrivate(\"selectionMin\", this.getPrivate(\"min\"));\n\n\t\tif ($type.isNumber(max) && $type.isNumber(min)) {\n\t\t\treturn this.getPrivate(\"step\", 1) / (max - min);\n\t\t}\n\t\treturn 0.05;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic nextPosition(count?: number) {\n\t\tif (count == null) {\n\t\t\tcount = 1;\n\t\t}\n\n\t\tif (this.get(\"renderer\").getPrivate(\"letter\") == \"Y\") {\n\t\t\tcount *= -1;\n\t\t}\n\n\t\tlet value = this.positionToValue(this.getPrivate(\"tooltipPosition\", 0));\n\t\tvalue += this.getPrivate(\"step\", 1) * count;\n\t\tvalue = $math.fitToRange(value, this.getPrivate(\"selectionMin\", 0), this.getPrivate(\"selectionMax\", 1));\n\n\t\treturn this.toGlobalPosition(this.valueToPosition(value));\n\t}\n}\n","import { RoundedRectangle, IRoundedRectangleSettings, IRoundedRectanglePrivate } from \"../../../core/render/RoundedRectangle\";\n\n\nexport interface ICandlestickSettings extends IRoundedRectangleSettings {\n\n\t/**\n\t * X0 position of the low value in pixels.\n\t */\n\tlowX0?: number;\n\n\t/**\n\t * Y0 position of the low value in pixels.\n\t */\n\tlowY0?: number;\n\n\t/**\n\t * X2 position of the low value in pixels.\n\t */\n\tlowX1?: number;\n\n\t/**\n\t * Y1 position of the low value in pixels.\n\t */\n\tlowY1?: number;\n\n\t/**\n\t * X0 position of the high value in pixels.\n\t */\n\thighX0?: number;\n\n\t/**\n\t * Y0 position of the high value in pixels.\n\t */\n\thighY0?: number;\n\n\t/**\n\t * Xz position of the high value in pixels.\n\t */\n\thighX1?: number;\n\n\t/**\n\t * Y1 position of the high value in pixels.\n\t */\n\thighY1?: number;\n\n\t/**\n\t * Orientation of the cnadlestick.\n\t */\n\torientation?: \"horizontal\" | \"vertical\"\n\n}\n\nexport interface ICandlestickPrivate extends IRoundedRectanglePrivate {\n}\n\n/**\n * A candle element used in a [[CandlestickSeries]].\n */\nexport class Candlestick extends RoundedRectangle {\n\n\tdeclare public _settings: ICandlestickSettings;\n\tdeclare public _privateSettings: ICandlestickPrivate;\n\n\tpublic static className: string = \"Candlestick\";\n\tpublic static classNames: Array<string> = RoundedRectangle.classNames.concat([Candlestick.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"lowX0\") || this.isDirty(\"lowY0\") || this.isDirty(\"lowX1\") || this.isDirty(\"lowY1\") || this.isDirty(\"highX0\") || this.isDirty(\"highX1\") || this.isDirty(\"highY0\") || this.isDirty(\"highY1\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tpublic _draw() {\n\t\tsuper._draw();\n\n\t\tconst display = this._display;\n\n\t\tdisplay.moveTo(this.get(\"lowX0\", 0), this.get(\"lowY0\", 0));\n\t\tdisplay.lineTo(this.get(\"lowX1\", 0), this.get(\"lowY1\", 0));\n\n\t\tdisplay.moveTo(this.get(\"highX0\", 0), this.get(\"highY0\", 0));\n\t\tdisplay.lineTo(this.get(\"highX1\", 0), this.get(\"highY1\", 0));\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\n\nimport { ColumnSeries, IColumnSeriesPrivate, IColumnSeriesSettings, IColumnSeriesDataItem, IColumnSeriesAxisRange } from \"./ColumnSeries\";\nimport { Candlestick } from \"./Candlestick\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\n\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $array from \"../../../core/util/Array\";\n\nexport interface ICandlestickSeriesDataItem extends IColumnSeriesDataItem {\n}\n\nexport interface ICandlestickSeriesSettings extends IColumnSeriesSettings {\n}\n\nexport interface ICandlestickSeriesPrivate extends IColumnSeriesPrivate {\n}\n\nexport interface ICandlestickSeriesAxisRange extends IColumnSeriesAxisRange {\n\n\t/**\n\t * A list of [[Candlestick]] element in series.\n\t *\n\t * @readonly\n\t */\n\tcolumns: ListTemplate<Candlestick>\n\n}\n\n/**\n * Candlestick series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n * @important\n */\nexport class CandlestickSeries extends ColumnSeries {\n\n\tdeclare public _settings: ICandlestickSeriesSettings;\n\tdeclare public _privateSettings: ICandlestickSeriesPrivate;\n\tdeclare public _dataItemSettings: ICandlestickSeriesDataItem;\n\tdeclare public _axisRangeType: ICandlestickSeriesAxisRange;\n\n\tpublic static className: string = \"CandlestickSeries\";\n\tpublic static classNames: Array<string> = ColumnSeries.classNames.concat([CandlestickSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<Candlestick>): Candlestick {\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\n\t\tcolumn._setDataItem(dataItem);\n\t\tlistTemplate.push(column);\n\t\treturn column;\n\t}\n\n\t/**\n\t * A list of candles in the series.\n\t *\n\t * `columns.template` can be used to configure candles.\n\t *\n\t * @default new ListTemplate<Candlestick>\n\t */\n\tpublic readonly columns: ListTemplate<Candlestick> = this.addDisposer(new ListTemplate(\n\t\tTemplate.new({\n\t\t\tthemeTags: [\"autocolor\"]\n\t\t}),\n\t\t() => Candlestick._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"candlestick\", \"series\", \"column\"])\n\t\t}, [this.columns.template])\n\t));\n\n\tprotected _updateGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateGraphics(dataItem, previousDataItem);\n\n\t\tconst xAxis = this.getRaw(\"xAxis\");\n\t\tconst yAxis = this.getRaw(\"yAxis\");\n\t\tconst baseAxis = this.getRaw(\"baseAxis\");\n\n\t\tlet vcy = this.get(\"vcy\", 1);\n\t\tlet vcx = this.get(\"vcx\", 1);\n\n\t\tlet lx0: number;\n\t\tlet lx1: number;\n\t\tlet ly0: number;\n\t\tlet ly1: number;\n\n\t\tlet hx0: number;\n\t\tlet hx1: number;\n\t\tlet hy0: number;\n\t\tlet hy1: number;\n\n\t\tlet locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\tlet locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\tlet openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n\t\tlet openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n\n\t\tlet orientation: \"horizontal\" | \"vertical\";\n\n\t\tif (yAxis === baseAxis) {\n\t\t\tlet open = xAxis.getDataItemPositionX(dataItem, this._xOpenField, 1, vcx);\n\t\t\tlet close = xAxis.getDataItemPositionX(dataItem, this._xField, 1, vcx);\n\n\t\t\tlx1 = xAxis.getDataItemPositionX(dataItem, this._xLowField, 1, vcx);\n\t\t\thx1 = xAxis.getDataItemPositionX(dataItem, this._xHighField, 1, vcx);\n\n\t\t\thx0 = Math.max(open, close);\n\t\t\tlx0 = Math.min(open, close);\n\n\t\t\tlet startLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\tlet endLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\tly0 = yAxis.getDataItemPositionY(dataItem, this._yField, startLocation + (endLocation - startLocation) / 2, vcy);\n\t\t\tly1 = ly0;\n\t\t\thy0 = ly0;\n\t\t\thy1 = ly0;\n\n\t\t\torientation = \"horizontal\";\n\t\t}\n\t\telse {\n\t\t\tlet open = yAxis.getDataItemPositionY(dataItem, this._yOpenField, 1, vcy);\n\t\t\tlet close = yAxis.getDataItemPositionY(dataItem, this._yField, 1, vcy);\n\n\t\t\tly1 = yAxis.getDataItemPositionY(dataItem, this._yLowField, 1, vcy);\n\t\t\thy1 = yAxis.getDataItemPositionY(dataItem, this._yHighField, 1, vcy);\n\n\t\t\thy0 = Math.max(open, close);\n\t\t\tly0 = Math.min(open, close);\n\n\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\tlx0 = xAxis.getDataItemPositionX(dataItem, this._xField, startLocation + (endLocation - startLocation) / 2, vcx);\n\t\t\tlx1 = lx0;\n\t\t\thx0 = lx0;\n\t\t\thx1 = lx0;\n\n\t\t\torientation = \"vertical\";\n\t\t}\n\n\t\tthis._updateCandleGraphics(dataItem, lx0, lx1, ly0, ly1, hx0, hx1, hy0, hy1, orientation)\n\t}\n\n\tprotected _updateCandleGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, lx0: number, lx1: number, ly0: number, ly1: number, hx0: number, hx1: number, hy0: number, hy1: number, orientation: \"horizontal\" | \"vertical\") {\n\t\tlet column = dataItem.get(\"graphics\") as Candlestick;\n\n\t\tif (column) {\n\t\t\tlet pl0 = this.getPoint(lx0, ly0);\n\t\t\tlet pl1 = this.getPoint(lx1, ly1);\n\n\t\t\tlet ph0 = this.getPoint(hx0, hy0);\n\t\t\tlet ph1 = this.getPoint(hx1, hy1);\n\n\t\t\tlet x = column.x();\n\t\t\tlet y = column.y();\n\n\t\t\tcolumn.set(\"lowX0\", pl0.x - x);\n\t\t\tcolumn.set(\"lowY0\", pl0.y - y);\n\n\t\t\tcolumn.set(\"lowX1\", pl1.x - x);\n\t\t\tcolumn.set(\"lowY1\", pl1.y - y);\n\n\t\t\tcolumn.set(\"highX0\", ph0.x - x);\n\t\t\tcolumn.set(\"highY0\", ph0.y - y);\n\n\t\t\tcolumn.set(\"highX1\", ph1.x - x);\n\t\t\tcolumn.set(\"highY1\", ph1.y - y);\n\n\t\t\tcolumn.set(\"orientation\", orientation);\n\n\t\t\tlet rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\t\tif (rangeGraphics) {\n\t\t\t\t$array.each(rangeGraphics, (column: any) => {\n\t\t\t\t\tcolumn.set(\"lowX0\", pl0.x - x);\n\t\t\t\t\tcolumn.set(\"lowY0\", pl0.y - y);\n\n\t\t\t\t\tcolumn.set(\"lowX1\", pl1.x - x);\n\t\t\t\t\tcolumn.set(\"lowY1\", pl1.y - y);\n\n\t\t\t\t\tcolumn.set(\"highX0\", ph0.x - x);\n\t\t\t\t\tcolumn.set(\"highY0\", ph0.y - y);\n\n\t\t\t\t\tcolumn.set(\"highX1\", ph1.x - x);\n\t\t\t\t\tcolumn.set(\"highY1\", ph1.y - y);\n\n\t\t\t\t\tcolumn.set(\"orientation\", orientation);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.columns = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Candlestick._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"candlestick\", \"series\", \"column\"]),\n\t\t\t}, [this.columns.template, axisRange.columns.template])\n\t\t);\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\r\n\r\nimport { BaseColumnSeries, IBaseColumnSeriesPrivate, IBaseColumnSeriesSettings, IBaseColumnSeriesDataItem, IBaseColumnSeriesAxisRange } from \"./BaseColumnSeries\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { RoundedRectangle } from \"../../../core/render/RoundedRectangle\";\r\n\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n\r\nexport interface IColumnSeriesDataItem extends IBaseColumnSeriesDataItem { }\r\n\r\nexport interface IColumnSeriesSettings extends IBaseColumnSeriesSettings { }\r\n\r\nexport interface IColumnSeriesPrivate extends IBaseColumnSeriesPrivate { }\r\n\r\nexport interface IColumnSeriesAxisRange extends IBaseColumnSeriesAxisRange {\r\n\t/**\r\n\t * A list of actual columns in a range.\r\n\t */\r\n\tcolumns: ListTemplate<RoundedRectangle>\r\n}\r\n\r\nexport class ColumnSeries extends BaseColumnSeries {\r\n\r\n\tdeclare public _settings: IColumnSeriesSettings;\r\n\tdeclare public _privateSettings: IColumnSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IColumnSeriesDataItem;\r\n\tdeclare public _axisRangeType: IColumnSeriesAxisRange;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<RoundedRectangle>): RoundedRectangle {\r\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\r\n\t\tcolumn._setDataItem(dataItem);\r\n\t\tlistTemplate.push(column);\r\n\t\treturn column;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[TemplateList]] of all columns in series.\r\n\t *\r\n\t * `columns.template` can be used to set default settings for all columns,\r\n\t * or to change on existing ones.\r\n\t */\r\n\tpublic readonly columns: ListTemplate<RoundedRectangle> = this.addDisposer(new ListTemplate(\r\n\t\tTemplate.new({}),\r\n\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"series\", \"column\"])\r\n\t\t}, [this.columns.template])\r\n\t));\r\n\r\n\tpublic static className: string = \"ColumnSeries\";\r\n\tpublic static classNames: Array<string> = BaseColumnSeries.classNames.concat([ColumnSeries.className]);\r\n\r\n\r\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\r\n\t\tsuper._processAxisRange(axisRange);\r\n\t\taxisRange.columns = new ListTemplate(\r\n\t\t\tTemplate.new({}),\r\n\t\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"series\", \"column\"]),\r\n\t\t\t}, [this.columns.template, axisRange.columns.template])\r\n\t\t);\r\n\t}\r\n}\r\n","import { Scrollbar, IScrollbarPrivate, IScrollbarSettings } from \"../../core/render/Scrollbar\";\nimport { XYChart } from \"./XYChart\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IXYChartScrollbarSettings extends IScrollbarSettings {\n\n}\n\nexport interface IXYChartScrollbarPrivate extends IScrollbarPrivate {\n}\n\n/**\n * Creates a scrollbar with chart preview in it.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/#Scrollbar_with_chart_preview} for more info\n * @important\n */\nexport class XYChartScrollbar extends Scrollbar {\n\n\tdeclare public _settings: IXYChartScrollbarSettings;\n\tdeclare public _privateSettings: IXYChartScrollbarPrivate;\n\n\tpublic static className: string = \"XYChartScrollbar\";\n\tpublic static classNames: Array<string> = Scrollbar.classNames.concat([XYChartScrollbar.className]);\n\n\t/**\n\t * An instance of an [[XYChart]] that is used to plot chart preview in\n\t * scrollbar.\n\t */\n\tpublic readonly chart: XYChart = this.children.push(XYChart.new(this._root, {\n\t\tthemeTags: [\"chart\"],\n\t\tinteractive: false,\n\t\tinteractiveChildren: false,\n\t\tpanX: false,\n\t\tpanY: false,\n\t\twheelX: \"none\",\n\t\twheelY: \"none\"\n\t}));\n\n\t/**\n\t * A graphics element that is displayed over inactive portion of the\n\t * scrollbarpreview, to dim it down.\n\t */\n\tpublic readonly overlay: Graphics = this.children.push(Graphics.new(this._root, {\n\t\tthemeTags: [\"overlay\"],\n\t\tinteractive: false\n\t}));\n\n\tprotected _afterNew() {\n\t\tthis._addOrientationClass();\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"scrollbar\", \"xy\", \"chart\", this._settings.orientation]);\n\n\t\tconst children = this.children;\n\t\tchildren.moveValue(this.thumb);\n\t\tchildren.moveValue(this.startGrip);\n\t\tchildren.moveValue(this.endGrip);\n\n\t\tthis.thumb.set(\"opacity\", 0);\n\t\tthis.thumb.states.create(\"hover\", { opacity: 0.2 });\n\n\t\tconst plotContainer = this.chart.plotContainer;\n\t\tplotContainer.set(\"interactive\", false);\n\t\tplotContainer.remove(\"background\");\n\t\tplotContainer.children.removeValue(this.chart.zoomOutButton);\n\n\t\tsuper._afterNew();\n\t}\n\n\tprotected _updateThumb() {\n\t\tsuper._updateThumb();\n\n\t\tthis.overlay.set(\"draw\", (display) => {\n\t\t\tconst startGrip = this.startGrip;\n\t\t\tconst endGrip = this.endGrip;\n\n\t\t\tlet x0 = startGrip.x();\n\t\t\tlet y0 = startGrip.y();\n\n\t\t\tlet x1 = endGrip.x();\n\t\t\tlet y1 = endGrip.y();\n\n\t\t\tconst h = this.height();\n\t\t\tconst w = this.width();\n\n\t\t\tif (x0 > x1) {\n\t\t\t\t[x0, x1] = [x1, x0]\n\t\t\t}\n\n\t\t\tif (y0 > y1) {\n\t\t\t\t[y0, y1] = [y1, y0]\n\t\t\t}\n\n\t\t\tif (this.get(\"orientation\") === \"horizontal\") {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(x0, 0);\n\t\t\t\tdisplay.lineTo(x0, h);\n\t\t\t\tdisplay.lineTo(0, h);\n\t\t\t\tdisplay.lineTo(0, 0);\n\n\t\t\t\tdisplay.moveTo(x1, 0);\n\t\t\t\tdisplay.lineTo(w, 0);\n\t\t\t\tdisplay.lineTo(w, h);\n\t\t\t\tdisplay.lineTo(x1, h);\n\t\t\t\tdisplay.lineTo(x1, 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(0, y0);\n\t\t\t\tdisplay.lineTo(w, y0);\n\t\t\t\tdisplay.lineTo(w, 0);\n\t\t\t\tdisplay.lineTo(0, 0);\n\n\t\t\t\tdisplay.moveTo(0, y1);\n\t\t\t\tdisplay.lineTo(0, h);\n\t\t\t\tdisplay.lineTo(w, h);\n\t\t\t\tdisplay.lineTo(w, y1);\n\t\t\t\tdisplay.lineTo(0, y1);\n\t\t\t}\n\t\t})\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport { populateString } from \"../../../core/util/PopulateString\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport { ValueAxis } from \"./ValueAxis\";\n\nexport interface ICategoryAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => void;\n\n\t/**\n\t * A field in data which holds categories.\n\t */\n\tcategoryField: string;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * @default 1\n\t */\n\tendLocation?: number;\n}\n\nexport interface ICategoryAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Named category.\n\t */\n\tcategory?: string;\n\n\t/**\n\t * Named end category (for axis items that span multiple categories, like\n\t * axis ranges).\n\t */\n\tendCategory?: string;\n\n\t/**\n\t * Index of the data item.\n\t */\n\tindex?: number;\n\n\t/**\n\t * Relative location of the category within cell: 0 - start, 1 - end.\n\t */\n\tcategoryLocation?: number;\n\n\t/**\n\t * Relative location of the end category within cell: 0 - start, 1 - end.\n\t */\n\tendCategoryLocation?: number;\n\n\t/**\n\t * A distance to shift data item relative to its original position.\n\t *\n\t * The value is 0 to 1, where 1 is full witdth of the axis.\n\t *\n\t * Can be used to sort data items without modifying order of the actual data.\n\t */\n\tdeltaPosition?: number;\n\n}\n\nexport interface ICategoryAxisPrivate extends IAxisPrivate {\n\n\t/**\n\t * Start index of the current zoom scope.\n\t */\n\tstartIndex?: number;\n\n\t/**\n\t * End index of the current zoom scope.\n\t */\n\tendIndex?: number;\n\n}\n\nexport interface ICategoryAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a category axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-axis/} for more info\n * @important\n */\nexport class CategoryAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"CategoryAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([CategoryAxis.className]);\n\n\tdeclare public _settings: ICategoryAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryAxisDataItem;\n\tdeclare public _events: ICategoryAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tthis.setPrivateRaw(\"name\", \"category\");\n\t\tthis.addTag(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst len = this.dataItems.length;\n\t\tlet i = 0;\n\t\tif (this._valuesDirty) {\n\t\t\tthis._itemMap = {};\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tdataItem.setRaw(\"index\", i);\n\t\t\t\tthis._itemMap[dataItem.get(\"category\") as string] = dataItem;\n\t\t\t\ti++;\n\t\t\t})\n\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", len);\n\t\t}\n\n\t\tthis.setPrivateRaw(\"startIndex\", Math.max(Math.round(this.get(\"start\", 0) * len), 0));\n\t\tthis.setPrivateRaw(\"endIndex\", Math.min(Math.round(this.get(\"end\", 1) * len), len));\n\n\t\tif (this._sizeDirty || this._valuesDirty || (this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"endIndex\") || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\"))) {\n\t\t\tif (this.dataItems.length > 0) {\n\t\t\t\tthis._handleRangeChange();\n\t\t\t\tthis._prepareAxisItems();\n\t\t\t\tthis._updateAxisRanges();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleRangeChange() {\n\t\t$array.each(this.series, (series) => {\n\t\t\tlet startCategory = this.dataItems[this.startIndex()].get(\"category\");\n\t\t\tlet endCategory = this.dataItems[this.endIndex() - 1].get(\"category\");\n\n\t\t\tlet baseAxis = series.get(\"baseAxis\");\n\t\t\tlet xAxis = series.get(\"xAxis\");\n\t\t\tlet yAxis = series.get(\"yAxis\");\n\n\t\t\tif (xAxis instanceof CategoryAxis && yAxis instanceof CategoryAxis) {\n\t\t\t\tseries._markDirtyAxes();\n\t\t\t}\n\t\t\telse if (baseAxis === this) {\n\t\t\t\tlet key: string | undefined;\n\t\t\t\tlet openKey: string | undefined;\n\t\t\t\tlet otherAxis = yAxis;\n\t\t\t\tif (xAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryXField\")) {\n\t\t\t\t\t\tkey = \"categoryX\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryXField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryX\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryYField\")) {\n\t\t\t\t\t\tkey = \"categoryY\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryYField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryY\";\n\t\t\t\t\t}\n\t\t\t\t\totherAxis = xAxis;\n\t\t\t\t}\n\n\t\t\t\tif (otherAxis instanceof ValueAxis) {\n\n\t\t\t\t\tif (key || openKey) {\n\t\t\t\t\t\tlet startDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\t\t\t\t\t\tlet endDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (let i = series.dataItems.length - 1; i >= 0; i--) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet startIndex = 0;\n\t\t\t\t\t\tlet endIndex = series.dataItems.length;\n\n\t\t\t\t\t\tif (startDataItem) {\n\t\t\t\t\t\t\tstartIndex = series.dataItems.indexOf(startDataItem);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (endDataItem) {\n\t\t\t\t\t\t\tendIndex = series.dataItems.indexOf(endDataItem) + 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tseries.setPrivate(\"startIndex\", startIndex);\n\t\t\t\t\t\tseries.setPrivate(\"endIndex\", endIndex);\n\n\t\t\t\t\t\tlet hasValue = false;\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tconst dataItem = series.dataItems[i];\n\n\t\t\t\t\t\t\t$array.each(series.__valueXShowFields, (key) => {\n\t\t\t\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\t\t\t\thasValue = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t$array.each(series.__valueYShowFields, (key) => {\n\t\t\t\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\t\t\t\thasValue = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\tif (hasValue) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tseries.setPrivate(\"outOfSelection\", !hasValue);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tseries._markDirtyAxes();\t// must be outside\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tconst minorLabelsEnabled = renderer.get(\"minorLabelsEnabled\");\n\t\tconst minorGridEnabled = renderer.get(\"minorGridEnabled\", minorLabelsEnabled);\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1);\n\t\tlet frequency = Math.max(1, Math.min(len, Math.ceil((endIndex - startIndex) / maxCount)));\n\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis._toggleDataItem(this.dataItems[j], false);\n\t\t}\n\n\t\tlet f = this.dataItems[startIndex].get(\"index\", 0);\n\n\t\tfor (let i = startIndex; i < endIndex; i = i + frequency) {\n\t\t\tlet dataItem = this.dataItems[i];\n\n\t\t\tthis._createAssets(dataItem, []);\n\t\t\tthis._toggleDataItem(dataItem, true);\n\n\t\t\tlet count = frequency;\n\t\t\tif (minorGridEnabled) {\n\t\t\t\tcount = 1;\n\t\t\t}\n\n\t\t\tthis._prepareDataItem(dataItem, f, count);\n\n\t\t\tf++;\n\t\t}\n\n\t\tif (renderer.get(\"minorGridEnabled\")) {\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\tif (i % frequency != 0) {\n\t\t\t\t\tthis._createAssets(dataItem, [\"minor\"], true);\n\t\t\t\t\tthis._toggleDataItem(dataItem, true);\n\t\t\t\t\tthis._prepareDataItem(dataItem, 0, 1);\n\n\t\t\t\t\tif (!minorLabelsEnabled) {\n\t\t\t\t\t\tdataItem.get(\"label\")?.setPrivate(\"visible\", false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, fillIndex?: number, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\n\t\tlet categoryLocation = dataItem.get(\"categoryLocation\", 0);\n\t\tlet endCategoryLocation = dataItem.get(\"endCategoryLocation\", 1);\n\n\t\tlet index: number | undefined = dataItem.get(\"index\");\n\n\t\tif (!$type.isNumber(index)) {\n\t\t\tindex = this.categoryToIndex(dataItem.get(\"category\")!);\n\t\t}\n\n\t\tlet position = this.indexToPosition(index, categoryLocation);\n\n\t\tlet endCategory = dataItem.get(\"endCategory\")!;\n\t\tlet endIndex: number;\n\t\tif (endCategory) {\n\t\t\tendIndex = this.categoryToIndex(endCategory);\n\t\t\tif (!$type.isNumber(endIndex)) {\n\t\t\t\tendIndex = index;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tendIndex = index;\n\t\t}\n\n\t\tlet endPosition = this.indexToPosition(endIndex, endCategoryLocation);\n\n\t\tlet fillEndIndex: number;\n\t\tlet fillEndPosition: number;\n\n\t\tif (dataItem.get(\"isRange\")) {\n\t\t\tfillEndIndex = endIndex;\n\t\t}\n\t\telse {\n\t\t\tfillEndIndex = index + this._frequency - 1;\n\t\t}\n\n\t\tfillEndPosition = this.indexToPosition(fillEndIndex, endCategoryLocation);\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\n\t\trenderer.updateGrid(dataItem.get(\"grid\"), position, endPosition);\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tconst fillRule = this.get(\"fillRule\");\n\t\tif (fillRule) {\n\t\t\tfillRule(dataItem, fillIndex)\n\t\t}\n\t}\n\n\tpublic startIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.min(Math.max(this.getPrivate(\"startIndex\", 0), 0), len - 1);\n\t}\n\n\tpublic endIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.max(1, Math.min(this.getPrivate(\"endIndex\", len), len));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic baseValue(): any {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic basePosition() {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         X coordinate\n\t */\n\tpublic getX(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * Returns Y coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         Y coordinate\n\t */\n\tpublic getY(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * Converts category index to a relative position.\n\t *\n\t * `location` indicates relative position within category: 0 - start, 1 - end.\n\t *\n\t * If not set, will use middle (0.5) of the category.\n\t *\n\t * @param   index     Index\n\t * @param   location  Location\n\t * @return            Index\n\t */\n\tpublic indexToPosition(index: number, location?: number): number {\n\t\tif (!$type.isNumber(location)) {\n\t\t\tlocation = 0.5;\n\t\t}\n\n\t\tlet len = this.dataItems.length;\n\n\t\tlet startLocation = this.get(\"startLocation\", 0);\n\t\tlet endLocation = this.get(\"endLocation\", 1);\n\n\t\tlen -= startLocation;\n\t\tlen -= (1 - endLocation);\n\n\t\tlet position = (index + location - startLocation) / len;\n\n\t\tlet dataItem = this.dataItems[index];\n\t\tif (dataItem) {\n\t\t\tposition += dataItem.get(\"deltaPosition\", 0);\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * Returns an index of a category.\n\t *\n\t * @param   category  Category to look up\n\t * @return            Index\n\t */\n\tpublic categoryToIndex(category: string): number {\n\t\tlet dataItem = this._itemMap[category];\n\t\tif (dataItem) {\n\t\t\treturn dataItem.get(\"index\")!;\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic dataItemToPosition(dataItem: DataItem<this[\"_dataItemSettings\"]>): number {\n\t\treturn this.indexToPosition(dataItem.get(\"index\")!);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\tposition += (0.5 - location) / this.dataItems.length;\n\t\treturn this.indexToPosition(this.axisPositionToIndex(position), location);\n\t}\n\n\t/**\n\t * Returns an index of the category that corresponds to specific pixel\n\t * position within axis.\n\t *\n\t * @param position  Position (px)\n\t * @return Category index\n\t */\n\tpublic axisPositionToIndex(position: number): number {\n\t\tlet len = this.dataItems.length;\n\t\treturn $math.fitToRange(Math.floor(position * len), 0, len - 1);//$math.fitToRange(Math.floor((end - start) * len * position + len * start), 0, len - 1);\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number, _adjustPosition?: boolean): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tconst dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\t\tif (dataItem) {\n\t\t\tconst label = dataItem.get(\"label\")\n\t\t\tif (label) {\n\t\t\t\treturn populateString(label, this.get(\"tooltipText\", \"\"));\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip._setDataItem(this.dataItems[this.axisPositionToIndex(position)]);\n\t\ttooltip.label.text.markDirtyText();\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tif (this.dataItems.length > 0) {\n\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\t\tlet index = this.axisPositionToIndex(position);\n\t\t\t// try simple first\n\t\t\tlet seriesDataItem = series.dataItems[index];\n\t\t\tlet axisDataItem = this.dataItems[index];\n\t\t\tlet category = axisDataItem.get(\"category\");\n\n\t\t\tif (seriesDataItem && axisDataItem) {\n\t\t\t\tif (seriesDataItem.get(fieldName) === category) {\n\t\t\t\t\treturn seriesDataItem;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// if not found, try looking\n\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\tif (dataItem.get(fieldName) === category) {\n\t\t\t\t\treturn dataItem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` indexes.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start index\n\t * @param  end       End index\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToIndexes(start: number, end: number, duration?: number) {\n\t\tlet len = this.dataItems.length;\n\t\tthis.zoom(start / len, end / len, duration);\n\t}\n\n\tpublic zoomToCategories(startCategory: string, endCategory: string, duration?: number) {\n\t\tthis.zoomToIndexes(this.categoryToIndex(startCategory), this.categoryToIndex(endCategory) + 1, duration);\n\t}\n\n\t/**\n\t * Returns position span between start and end of a single cell in axis.\n\t *\n\t * @since 5.2.30\n\t * @return Position\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\treturn this._frequency / this.dataItems.length / (this.get(\"end\", 1) - this.get(\"start\", 0));\n\t}\n\t\n\t/**\n\t * @ignore\n\t */\t\n\tpublic nextPosition(count?:number){\n\t\tif(count == null){\n\t\t\tcount = 1;\n\t\t}\n\n\t\tif(this.get(\"renderer\").getPrivate(\"letter\") == \"Y\"){\n\t\t\tcount *= -1;\n\t\t}\n\n\t\tconst position = this.getPrivate(\"tooltipPosition\", 0);\n\n\t\tconst index = $math.fitToRange(this.axisPositionToIndex(position) + count, 0, this.dataItems.length - 1);\t\t\n\t\treturn this.toGlobalPosition(this.indexToPosition(index));\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { CategoryAxis, ICategoryAxisSettings, ICategoryAxisPrivate, ICategoryAxisDataItem, ICategoryAxisEvents } from \"./CategoryAxis\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\nimport * as $time from \"../../../core/util/Time\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\n\nexport interface ICategoryDateAxisSettings<R extends AxisRenderer> extends ICategoryAxisSettings<R> {\n\n\t/**\n\t * Indicates granularity of data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Data_granularity} for more info\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * A list of intervals the axis is allowed to show grid/labels on.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Grid_granularity} for more info\n\t */\n\tgridIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * Display \"period change\" labels using different format.\n\t *\n\t * If set to `true`, will use `periodChangeDateFormats` instead\n\t * of `dateFormats` for such labels, e.g. for month start.\n\t *\n\t * @default true\n\t */\n\tmarkUnitChange?: boolean;\n\n\t/**\n\t * Date formats used for intermediate labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tdateFormats?: { [index: string]: string };\n\n\t/**\n\t * Date formats used for \"period change\" labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tperiodChangeDateFormats?: { [index: string]: string };\n\n\t/**\n\t * A date format to use for axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\n\t */\n\ttooltipDateFormat?: string;\n\n}\n\nexport interface ICategoryDateAxisDataItem extends ICategoryAxisDataItem {\n}\n\nexport interface ICategoryDateAxisPrivate extends ICategoryAxisPrivate {\n\n\t/**\n\t * Current base interval.\n\t */\n\tbaseInterval: ITimeInterval;\n\n}\n\nexport interface ICategoryDateAxisEvents extends ICategoryAxisEvents {\n}\n\n\n/**\n * Category-based date axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-date-axis/} for more info\n * @important\n */\nexport class CategoryDateAxis<R extends AxisRenderer> extends CategoryAxis<R> {\n\tpublic static className: string = \"CategoryDateAxis\";\n\tpublic static classNames: Array<string> = CategoryAxis.classNames.concat([CategoryDateAxis.className]);\n\n\tdeclare public _settings: ICategoryDateAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryDateAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryDateAxisDataItem;\n\tdeclare public _events: ICategoryDateAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryDateAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\t// temp\n\t\tthis.setPrivateRaw(\"baseInterval\", this.get(\"baseInterval\"));\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\n\n\t\tlet frequency = Math.min(len, Math.ceil((endIndex - startIndex) / maxCount));\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis._toggleDataItem(this.dataItems[j], false);\n\t\t}\n\n\t\tlet startTime = Number(this.dataItems[startIndex].get(\"category\"));\n\t\tlet endTime = Number(this.dataItems[endIndex - 1].get(\"category\"));\n\t\tlet realDuration = (endTime - startTime);\n\t\tif (endIndex - startIndex < maxCount) {\n\t\t\trealDuration = (endTime - startTime) - ((endTime - startTime) / this.baseDuration() - (endIndex - startIndex)) * this.baseDuration();\n\t\t}\n\n\t\t// if all items are on axis\n\t\tlet gridInterval = $time.chooseInterval(0, realDuration, maxCount, this.get(\"gridIntervals\")!);\n\n\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\tif ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\n\t\t\tgridInterval = { ...baseInterval };\n\t\t}\n\n\t\tconst formats = this.get(\"dateFormats\")!;\n\n\t\tlet previousValue = -Infinity;\n\t\tlet previousIndex = -Infinity;\n\t\tlet previousUnitValue = -Infinity;\n\t\tlet format: string;\n\n\t\tlet selectedItems: Array<{ format: string, dataItem: DataItem<ICategoryDateAxisDataItem> }> = [];\n\t\tlet changed = false;\n\n\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\tlet dataItem = this.dataItems[i];\n\t\t\tlet index = dataItem.get(\"index\")!;\n\t\t\tlet skip = false;\n\n\t\t\tlet value = Number(dataItem.get(\"category\"));\n\t\t\tlet date = new Date(value);\n\t\t\tlet unitValue = $time.getUnitValue(date, gridInterval.timeUnit);\n\n\t\t\tformat = formats[gridInterval.timeUnit];\n\t\t\tlet added = false;\n\n\t\t\tif (gridInterval.timeUnit != \"year\" && gridInterval.timeUnit != \"week\") {\n\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\n\n\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc)) {\n\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\n\n\t\t\t\t\t\tif (index - frequency * 0.5 < previousIndex) {\n\t\t\t\t\t\t\tselectedItems.pop();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tselectedItems.push({ format: format, dataItem: dataItem });\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tadded = true;\n\t\t\t\t\t\tpreviousIndex = index;\n\t\t\t\t\t\tpreviousUnitValue = unitValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet shouldAdd = false;\n\t\t\tif (gridInterval.timeUnit === \"day\" || gridInterval.timeUnit === \"week\") {\n\t\t\t\tif (index - previousIndex >= frequency) {\n\t\t\t\t\tshouldAdd = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (unitValue % gridInterval.count === 0) {\n\t\t\t\t\tif (unitValue != previousUnitValue) {\n\t\t\t\t\t\tshouldAdd = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!added && shouldAdd) {\n\t\t\t\tif (index - frequency * 0.7 < previousIndex) {\n\t\t\t\t\tif (changed) {\n\t\t\t\t\t\tskip = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!skip) {\n\t\t\t\t\tselectedItems.push({ format: format, dataItem: dataItem });\n\t\t\t\t\tpreviousIndex = index;\n\t\t\t\t\tpreviousUnitValue = unitValue;\n\t\t\t\t}\n\t\t\t\tchanged = false;\n\n\t\t\t}\n\n\t\t\tpreviousValue = value;\n\n\t\t}\n\n\t\tif (selectedItems.length > 0) {\n\t\t\tlet f = selectedItems[0].dataItem.get(\"index\", 0);\n\n\t\t\t$array.each(selectedItems, (item) => {\n\t\t\t\tconst dataItem = item.dataItem;\n\t\t\t\tconst format = item.format;\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tthis._toggleDataItem(dataItem, true);\n\n\t\t\t\tlet value = Number(dataItem.get(\"category\"));\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\n\t\t\t\t}\n\t\t\t\tf++;\n\t\t\t\tthis._prepareDataItem(dataItem, f, frequency);\n\t\t\t})\n\n\t\t}\n\t}\n\n\t/**\n\t * Returns a duration of currently active `baseInterval` in milliseconds.\n\t *\n\t * @return Duration\n\t */\n\tpublic baseDuration(): number {\n\t\treturn $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\n\t}\n\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number, _adjustPosition?: boolean): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tlet dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\n\t\tif (dataItem) {\n\t\t\tlet format = this.get(\"dateFormats\")![this.getPrivate(\"baseInterval\").timeUnit];\n\t\t\treturn this._root.dateFormatter.format(new Date(dataItem.get(\"category\", 0)), this.get(\"tooltipDateFormat\", format));\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip.label.set(\"text\", this.getTooltipText(position));\n\t}\n\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { TimeUnit } from \"../../../core/util/Time\"\n\nimport { ValueAxis, IValueAxisSettings, IValueAxisPrivate, IValueAxisDataItem, IValueAxisEvents, IMinMaxStep } from \"./ValueAxis\";\n\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $math from \"../../../core/util/Math\";\n\nexport interface IDurationAxisSettings<R extends AxisRenderer> extends IValueAxisSettings<R> {\n\n\t/**\n\t * A base unit (granularity) of data.\n\t *\n\t * Used to indicate what are the base units of your data.\n\t *\n\t * Available options: `\"millisecond\"`, `\"second\"` (default), `\"minute\"`, `\"hour\"`, `\"day\"`, `\"week\"`, `\"month\"`, and `\"year\"`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-durations/#Base_unit} for more info\n\t * @default \"second\"\n\t */\n\tbaseUnit?: TimeUnit\n\n}\n\nexport interface IDurationAxisDataItem extends IValueAxisDataItem {\n}\n\nexport interface IDurationAxisPrivate extends IValueAxisPrivate {\n\n\t/**\n\t * A format to used by axis to format its labels.\n\t *\n\t * @readonly\n\t */\n\tdurationFormat: string;\n\n}\n\nexport interface IDurationAxisEvents extends IValueAxisEvents {\n}\n\n/**\n * Creates a duration axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/duration-axis/} for more info\n * @important\n */\nexport class DurationAxis<R extends AxisRenderer> extends ValueAxis<R> {\n\tpublic static className: string = \"DurationAxis\";\n\tpublic static classNames: Array<string> = ValueAxis.classNames.concat([DurationAxis.className]);\n\n\tdeclare public _settings: IDurationAxisSettings<R>;\n\tdeclare public _privateSettings: IDurationAxisPrivate;\n\tdeclare public _dataItemSettings: IDurationAxisDataItem;\n\tdeclare public _events: IDurationAxisEvents;\n\n\tprotected _dataGrouped: boolean = false;\n\tprotected _groupingCalculated: boolean = false;\n\tprotected _intervalDuration: number = 1;\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\n\t\tlet minMaxStep: IMinMaxStep;\n\n\t\tconst durationFormatter = this.getDurationFormatter();\n\t\tconst baseUnit = this.get(\"baseUnit\");\n\t\t// we don't allow to go to smaller units, setting so to avoid invalidation\n\t\tthis.setRaw(\"maxPrecision\", 0);\n\n\t\tif (baseUnit == \"millisecond\" || baseUnit == \"second\" || baseUnit == \"minute\" || baseUnit == \"hour\") {\n\t\t\t// will fail if 0\n\t\t\tif (gridCount <= 1) {\n\t\t\t\tgridCount = 1;\n\t\t\t}\n\n\t\t\tgridCount = Math.round(gridCount);\n\n\t\t\t//let initialMin: number = min;\n\t\t\t//let initialMax: number = max;\n\n\t\t\tlet difference = max - min;\n\n\t\t\t// in case min and max is the same, use max\n\t\t\tif (difference === 0) {\n\t\t\t\tdifference = Math.abs(max);\n\t\t\t}\n\n\t\t\tlet step = difference / gridCount;\n\n\t\t\tlet divisors = [60, 30, 20, 15, 10, 2, 1];\n\t\t\tlet realDivisor = 1;\n\n\t\t\tif (baseUnit == \"hour\") {\n\t\t\t\tdivisors = [24, 12, 6, 4, 2, 1];\n\t\t\t}\n\n\t\t\tfor (let divisor of divisors) {\n\t\t\t\tif (difference / divisor > gridCount) {\n\t\t\t\t\trealDivisor = divisor;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet count = Math.ceil(((max - min) / realDivisor) / gridCount);\n\n\t\t\tlet exponent: number = Math.log(Math.abs(count)) * Math.LOG10E;\n\t\t\tlet power = Math.pow(10, Math.floor(exponent)) / 10;\n\t\t\tlet reducedCount = count / power;\n\n\t\t\t// find closest to divisor\n\t\t\tlet closest = $math.closest(divisors, reducedCount);\n\t\t\tcount = closest * power;\n\n\t\t\tstep = realDivisor * count;\n\n\t\t\tmin = Math.floor(min / step) * step;\n\t\t\tmax = Math.ceil(max / step) * step;\n\n\t\t\t/*\n\t\t\tcausese SO with seconds\n\t\t\tif (strictMode) {\n\t\t\t\tmin -= step;\n\t\t\t\tif (min < 0 && initialMin >= 0) {\n\t\t\t\t\tmin = 0;\n\t\t\t\t}\n\t\t\t\tmax += step;\n\n\t\t\t\tif (max > 0 && initialMax <= 0) {\n\t\t\t\t\tmax = 0;\n\t\t\t\t}\n\t\t\t}*/\n\t\t\tminMaxStep = { min: min, max: max, step: step };\n\t\t}\n\t\telse {\n\t\t\tminMaxStep = super._adjustMinMax(min, max, gridCount, strictMode);\n\t\t}\n\n\t\t// choose duration formatter based on step\n\t\tthis.setPrivateRaw(\"durationFormat\", durationFormatter.getFormat(minMaxStep.step, minMaxStep.max, baseUnit));\n\n\t\treturn minMaxStep;\n\t}\n\n\tprotected _formatText(value: number) {\n\t\tconst formatter = this.getDurationFormatter();\n\t\treturn formatter.format(value, this.getPrivate(\"durationFormat\"), this.get(\"baseUnit\"));\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number, _adjustPosition?: boolean): string | undefined {\n\t\tconst formatter = this.getDurationFormatter();\n\t\tconst extraDecimals = this.get(\"extraTooltipPrecision\", 0);\n\t\tconst decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\n\t\tconst value = $math.round(this.positionToValue(position), decimals);\n\n\t\treturn formatter.format(value, this.getPrivate(\"durationFormat\"), this.get(\"baseUnit\"));\n\t}\n}\n","import { Candlestick, ICandlestickSettings, ICandlestickPrivate } from \"./Candlestick\";\n\n\nexport interface IOHLCSettings extends ICandlestickSettings {\n}\n\nexport interface IOHLCPrivate extends ICandlestickPrivate {\n}\n\nexport class OHLC extends Candlestick {\n\n\tdeclare public _settings: IOHLCSettings;\n\tdeclare public _privateSettings: IOHLCPrivate;\n\n\tpublic static className: string = \"OHLC\";\n\tpublic static classNames: Array<string> = Candlestick.classNames.concat([OHLC.className]);\n\n\tpublic _draw() {\n\n\t\tconst display = this._display;\n\n\t\tdisplay.moveTo(this.get(\"lowX1\", 0), this.get(\"lowY1\", 0));\n\t\tdisplay.lineTo(this.get(\"highX1\", 0), this.get(\"highY1\", 0));\n\n\t\tlet w = this.width();\n\t\tlet h = this.height();\n\n\t\tif (this.get(\"orientation\") == \"vertical\") {\n\n\t\t\tlet lY = h;\n\t\t\tlet hY = 0;\n\t\t\tdisplay.moveTo(0, lY);\n\t\t\tdisplay.lineTo(w / 2, lY);\n\n\t\t\tdisplay.moveTo(w / 2, hY);\n\t\t\tdisplay.lineTo(w, hY);\n\t\t}\n\t\telse {\n\t\t\tlet lX = 0;\n\t\t\tlet hX = w;\n\n\t\t\tdisplay.moveTo(lX, 0);\n\t\t\tdisplay.lineTo(lX, h / 2);\n\n\t\t\tdisplay.moveTo(hX, h / 2);\n\t\t\tdisplay.lineTo(hX, h);\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\n\nimport { CandlestickSeries, ICandlestickSeriesPrivate, ICandlestickSeriesSettings, ICandlestickSeriesDataItem, ICandlestickSeriesAxisRange } from \"./CandlestickSeries\";\nimport { OHLC } from \"./OHLC\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\n\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IOHLCSeriesDataItem extends ICandlestickSeriesDataItem {\n}\n\nexport interface IOHLCSeriesSettings extends ICandlestickSeriesSettings {\n}\n\nexport interface IOHLCSeriesPrivate extends ICandlestickSeriesPrivate {\n}\n\nexport interface IOHLCSeriesAxisRange extends ICandlestickSeriesAxisRange {\n\n\t/**\n\t * List of [[OHLC]] columns in a range.\n\t */\n\tcolumns: ListTemplate<OHLC>\n\n}\n\n/**\n * OHLC series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n * @important\n */\nexport class OHLCSeries extends CandlestickSeries {\n\n\tdeclare public _settings: IOHLCSeriesSettings;\n\tdeclare public _privateSettings: IOHLCSeriesPrivate;\n\tdeclare public _dataItemSettings: IOHLCSeriesDataItem;\n\tdeclare public _axisRangeType: IOHLCSeriesAxisRange;\n\n\tpublic static className: string = \"OHLCSeries\";\n\tpublic static classNames: Array<string> = CandlestickSeries.classNames.concat([OHLCSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<OHLC>): OHLC {\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\n\t\tcolumn._setDataItem(dataItem);\n\t\tlistTemplate.push(column);\n\t\treturn column;\n\t}\n\n\t/**\n\t * A list of OHLC bars in the series.\n\t *\n\t * `columns.template` can be used to configure OHLC bars.\n\t *\n\t * @default new ListTemplate<OHLC>\n\t */\n\tpublic readonly columns: ListTemplate<OHLC> = this.addDisposer(new ListTemplate(\n\t\tTemplate.new({\n\t\t\tthemeTags: [\"autocolor\"]\n\t\t}),\n\t\t() => OHLC._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"ohlc\", \"series\", \"column\"])\n\t\t}, [this.columns.template])\n\t));\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.columns = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => OHLC._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"ohlc\", \"series\", \"column\"]),\n\t\t\t}, [this.columns.template, axisRange.columns.template])\n\t\t);\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveMonotoneYTension } from \"../../../core/render/MonotoneYTension\";\n\nexport interface ISmoothedYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedYLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n}\n\nexport interface ISmoothedYLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for vertical plots.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedYLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedYLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedYLineSeries.className]);\n\n\tdeclare public _settings: ISmoothedYLineSeriesSettings;\n\tdeclare public _privateSettings: ISmoothedYLineSeriesPrivate;\n\tdeclare public _dataItemSettings: ISmoothedYLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)) as any);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveMonotoneXTension } from \"../../../core/render/MonotoneXTension\";\n\n\nexport interface ISmoothedXLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedXLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n}\n\nexport interface ISmoothedXLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for horizontal plots.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedXLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedXLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedXLineSeries.className]);\n\n\tdeclare public _settings: ISmoothedXLineSeriesSettings;\n\tdeclare public _privateSettings: ISmoothedXLineSeriesPrivate;\n\tdeclare public _dataItemSettings: ISmoothedXLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)) as any);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveCardinal, CurveCardinalFactory } from \"d3-shape\";\n\nexport interface SmoothedXYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedXYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface SmoothedXYLineSeriesProperties extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n\t/**\n\t * @ignore\n\t*/\n\tcurveFactory?: CurveCardinalFactory\n\n}\n\nexport interface SmoothedXYLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for XY (scatter) charts\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedXYLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedXYLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedXYLineSeries.className]);\n\n\tdeclare public _settings: SmoothedXYLineSeriesProperties;\n\tdeclare public _privateSettings: SmoothedXYLineSeriesPrivate;\n\tdeclare public _dataItemSettings: SmoothedXYLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveCardinal.tension(this.get(\"tension\", 0.5)));\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveCardinal.tension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // falls through\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport type { Axis } from \"../axes/Axis\";\nimport { Percent, p100 } from \"../../../core/util/Percent\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport { curveStepAfter } from \"d3-shape\";\n\nexport interface IStepLineSeriesDataItem extends ILineSeriesDataItem {\n}\n\nexport interface IStepLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * Width of the step in percent relative to the cell width.\n\t *\n\t * NOTE: setting this to less than 100% makes sense only when risers are\n\t * disabled: `noRisers: true`\n\t *\n\t * @default 100%\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/step-line-series/#Step_width} for more info\n\t */\n\tstepWidth?: Percent;\n\n\t/**\n\t * Disables vertical connecting lines for the steps.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/step-line-series/#Disabling_risers} for more info\n\t */\n\tnoRisers?: boolean;\n\n}\n\nexport interface IStepLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\nexport class StepLineSeries extends LineSeries {\n\tpublic static className: string = \"StepLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([StepLineSeries.className]);\n\n\tdeclare public _settings: IStepLineSeriesSettings;\n\tdeclare public _privateSettings: IStepLineSeriesPrivate;\n\tdeclare public _dataItemSettings: IStepLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveStepAfter);\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _getPoints(dataItem: DataItem<this[\"_dataItemSettings\"]>, o: { points: Array<Array<number>>, segments: number[][][], stacked: boolean | undefined, getOpen: boolean, basePosX: number, basePosY: number, fillVisible: boolean | undefined, xField: string, yField: string, xOpenField: string, yOpenField: string, vcx: number, vcy: number, baseAxis: Axis<AxisRenderer>, xAxis: Axis<AxisRenderer>, yAxis: Axis<AxisRenderer>, locationX: number, locationY: number, openLocationX: number, openLocationY: number }) {\n\t\tlet points = o.points;\n\n\t\tlet width = this.get(\"stepWidth\", p100).value / 2;\n\n\t\tlet itemLocationX0 = dataItem.get(\"locationX\", o.locationX);\n\t\tlet itemLocationY0 = dataItem.get(\"locationY\", o.locationY);\n\t\tlet itemLocationX1 = itemLocationX0;\n\t\tlet itemLocationY1 = itemLocationY0;\n\n\t\tif (o.baseAxis === o.xAxis) {\n\t\t\titemLocationX0 -= width;\n\t\t\titemLocationX1 += width;\n\t\t}\n\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\titemLocationY0 -= width;\n\t\t\titemLocationY1 += width;\n\t\t}\n\n\t\tlet xPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX0, o.vcx);\n\t\tlet yPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY0, o.vcy);\n\n\t\tlet xPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX1, o.vcx);\n\t\tlet yPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY1, o.vcy);\n\n\t\tif (this._shouldInclude(xPos0)) {\n\n\t\t\tconst iPoint0 = this.getPoint(xPos0, yPos0);\n\t\t\tconst point0 = [iPoint0.x, iPoint0.y];\n\n\t\t\tconst iPoint1 = this.getPoint(xPos1, yPos1);\n\t\t\tconst point1 = [iPoint1.x, iPoint1.y];\n\n\t\t\tif (o.fillVisible) {\n\t\t\t\tlet xOpenPos0: number = xPos0;\n\t\t\t\tlet yOpenPos0: number = yPos0;\n\t\t\t\tlet xOpenPos1: number = xPos1;\n\t\t\t\tlet yOpenPos1: number = yPos1;\n\n\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\tyOpenPos0 = o.basePosY;\n\t\t\t\t\tyOpenPos1 = o.basePosY;\n\t\t\t\t}\n\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\txOpenPos0 = o.basePosX;\n\t\t\t\t\txOpenPos1 = o.basePosX;\n\t\t\t\t}\n\n\t\t\t\tif (o.getOpen) {\n\t\t\t\t\tlet valueX = dataItem.get(o.xOpenField as any);\n\t\t\t\t\tlet valueY = dataItem.get(o.yOpenField as any);\n\n\t\t\t\t\tif (valueX != null && valueY != null) {\n\t\t\t\t\t\titemLocationX0 = dataItem.get(\"openLocationX\", o.openLocationX);\n\t\t\t\t\t\titemLocationY0 = dataItem.get(\"openLocationY\", o.openLocationY);\n\n\t\t\t\t\t\titemLocationX1 = itemLocationX0;\n\t\t\t\t\t\titemLocationY1 = itemLocationY0;\n\n\t\t\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\t\t\titemLocationX0 -= width;\n\t\t\t\t\t\t\titemLocationX1 += width;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\titemLocationY0 -= width;\n\t\t\t\t\t\t\titemLocationY1 += width;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (o.stacked) {\n\t\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\n\t\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX0, (stackToItemX.component as StepLineSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX1, (stackToItemX.component as StepLineSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.yAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\txOpenPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t\txOpenPos1 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX0, o.vcx);\n\t\t\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX1, o.vcx);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY0, (stackToItemY.component as StepLineSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY1, (stackToItemY.component as StepLineSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.xAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\tyOpenPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t\tyOpenPos1 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY0, o.vcy);\n\t\t\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY1, o.vcy);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX0, o.vcx);\n\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY0, o.vcy);\n\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX1, o.vcx);\n\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY1, o.vcy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet closeIPoint0 = this.getPoint(xOpenPos0, yOpenPos0);\n\t\t\t\tlet closeIPoint1 = this.getPoint(xOpenPos1, yOpenPos1);\n\n\t\t\t\tpoint0[2] = closeIPoint0.x;\n\t\t\t\tpoint0[3] = closeIPoint0.y;\n\n\t\t\t\tpoint1[2] = closeIPoint1.x;\n\t\t\t\tpoint1[3] = closeIPoint1.y;\n\t\t\t}\n\n\t\t\tpoints.push(point0);\n\t\t\tpoints.push(point1);\n\n\t\t\tdataItem.set(\"point\", {x:point0[0] + (point1[0] - point0[0]) / 2, y:point0[1] + (point1[1] - point0[1]) / 2 });\n\t\t}\n\n\t\tif (this.get(\"noRisers\")) {\n\t\t\to.points = [];\n\t\t\to.segments.push(points);\n\t\t}\n\t}\n}\n","import * as m from \"./../../dist/es2015/xy.js\";\nexport const am5xy = m;","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // falls through\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n"],"names":["Axis","this","children","push","new","_root","width","height","isMeasured","position","themeTags","background","fill","interfaceColors","get","_dispose","gridContainer","dispose","topGridContainer","bulletsContainer","labelsContainer","axisHeader","super","_afterNew","setPrivate","_disposers","axisRanges","events","onAll","change","type","oldValues","dataItem","_processAxisRange","newValue","disposeDataItem","oldValue","Error","value","renderer","axis","processAxis","ghostLabel","makeLabel","undefined","adapters","disable","setAll","opacity","tooltipText","tooltipHTML","interactive","_updateFinals","_start","_end","zoom","start","end","duration","priority","sAnimation","_sAnimation","eAnimation","_eAnimation","maxDeviation","Math","min","maxZoomFactor","getPrivate","maxZoomFactorReal","minZoomCount","maxZoomCount","Infinity","minZoomFactor","chart","_handleAxisSelection","playing","to","easing","animate","key","set","stop","series","_series","setRaw","_createAssets","_rangesDirty","_prepareDataItem","above","container","grid","moveValue","_dataItem","_index","markDirtyExtremes","markDirtySelectionExtremes","_calculateTotals","_updateAxisRanges","_bullets","each","axisRange","_seriesAxisRanges","_prepareChildren","isDirty","_updateCursor","delta","_inversed","_axisLength","axisLength","_updateLC","tooltip","rendererTags","addTag","className","toLowerCase","_applyThemes","label","_updateTooltipBounds","updateTooltipBounds","_updateBounds","processChart","axisHeadersContainer","on","plotContainer","onPrivate","markDirtySize","hideDataItem","_toggleFHDataItem","showDataItem","forceHidden","fh","tick","axisFill","bullet","sprite","_toggleDataItem","visible","v","tags","minor","m","remove","indexOf","parent","removeValue","labels","makeGrid","makeTick","ticks","makeAxisFill","_processBullet","axisBullet","_setDataItem","_afterChanged","_updateChartLayout","_updatePositions","_seriesAdded","axisFills","_updateGhost","getCellWidthPosition","isHidden","bounds","localBounds","gWidth","ceil","right","left","text","dataItems","_getText","updateLabel","_handleCursorPosition","snapToSeries","toAxisPosition","_cursorPosition","_snapToSeries","updateTooltip","getSeriesItem","updateLegendMarker","updateLegendValue","_settings","tooltipDataItem","showDataItemTooltip","roundAxisPosition","setPrivateRaw","hide","_updateTooltipText","positionTooltip","show","getTooltipText","_location","_handleSeriesRemoved","handleCursorShow","handleCursorHide","processSeriesDataItem","_fields","_clearDirty","_sizeDirty","coordinateToPosition","coordinate","toGlobalPosition","fixPosition","shouldGap","_nextItem","_autoGapCount","_fieldName","createAxisRange","axisDataItem","_groupSeriesData","classNames","concat","AxisBullet","_beforeChanged","role","uid","AxisRendererX","gridTemplate","template","display","graphics","moveTo","lineTo","_changed","opposite","inside","axisChildren","removeTag","topAxesContainer","insertIndex","bottomAxesContainer","root","_markDirtyRedraw","thumb","_getPan","point1","point2","x","_ls","_lc","w","innerWidth","y","length","verticalLayout","layout","positionToPoint","positionToCoordinate","updateTick","endPosition","count","location","toggleVisibility","updateGrid","updateBullet","bulletPosition","previousBullet","d","previousSprite","updateFill","x0","x1","fillDrawMethod","h","_positionTooltip","num","global","_display","toGlobal","pointerOrientation","top","bottom","oldBounds","AxisRendererY","rightAxesContainer","leftAxesContainer","horizontalLayout","innerHeight","y0","y1","DateAxis","_setBaseInterval","interval","_baseDuration","_fixZoomFactor","round","baseMainDuration","_groupData","max","groupInterval","_handleRangeChange","_dataGrouped","baseInterval","mainDataSetId","timeUnit","setDataSet","resetGrouping","_seriesDataGrouped","intervals","baseDuration","groupIntervals","_dataSets","fields","baseAxis","_valueYFields","_valueXFields","_mainDataItems","groupCallback","groupOriginals","newDataItem","previousTime","dataSetId","sum","groupFieldValues","workingFields","field","firstTime","prevNewDataItem","intervalDuration","dataContext","time","roundedTime","_makeDataItem","groupKey","currentValue","average","abs","_dataSetId","once","_groupingCalculated","getGroupInterval","getIntervalMax","_intervalMax","getIntervalMin","_intervalMin","selectionMin","selectionMax","current","modifiedDifference","newId","isEnabled","dispatch","target","fieldName","startIndex","index","endIndex","endIndex2","firstDataItem","lastDataItem","lastDate","firstDate","outOfSelection","_adjustStartIndex","_markDirtyPrivateKey","_adjustMinMax","gridCount","_strictMode","step","_intervalDuration","_saveMinMax","id","_getM","_getMinorInterval","minorGridInterval","_prepareAxisItems","i","gridInterval","nextGridUnit","utc","timezone","format","previousValue","formats","minorLabelsEnabled","minorGridEnabled","minorDuration","_dataItems","processDataItem","endValue","date","Date","dateFormatter","labelEndValue","minorTimeUnit","minorCount","mmm","previousMinorValue","minorValue","minorFormats","minorDataItem","minorDataItems","minorEndValue","minorLabel","j","inited","_markDirtyAxes","positionToValue","_getDelta","_deltaMinMax","_fixMin","startTime","endTime","_fixMax","_updateDates","_date","open","close","component","_handleSizeDirty","getDataItemPositionX","cellLocation","axisLocation","openValue","closeValue","_baseValue","valueToPosition","getDataItemCoordinateX","getDataItemPositionY","getDataItemCoordinateY","firstDay","locale","firstDayOfWeek","NaN","adjustPosition","snap","result","diValue","first","second","nextItem","autoGapCount","value1","zoomToDates","zoomToValues","getTime","futureGroupInterval","baseMin","baseMax","futureMin","futureMax","s","e","positionToDate","dateToPosition","nextPosition","dtime","tooltipValue","_nextTime","GaplessDateAxis","valueFields","_getDates","_customDates","_dates","dates","found","_updateAllDates","extraMax","extraMin","len","baseCount","extra","unshift","startLocation","endLocation","itemValue","nextDate","nextItemValue","valueToIndex","findex","floor","startValue","_seriesValuesDirty","maxCount","Number","MAX_SAFE_INTEGER","frequency","_frequency","realDuration","now","previousDataItem","selectedItems","_getIndexes","_m","_addMinorGrid","minDistance","timeUnit2","next","previousLabel","worse","_pickWorse","dataItemA","dataItemB","valueA","valueB","getDate","mTimeUnit","maxValue","minorSelectedItems","firstValue","items","c","fullDuration","originalValue","realValue","_hasDate","_baseInterval","ValueAxis","_dirtyExtremes","markDirty","_dirtySelectionExtremes","_prevSettings","syncWithAxis","_syncDp","someDirty","_valuesDirty","isPrivateDirty","_getMinMax","_isPanning","getMM","letter","xAxes","yAxes","_getSelectionMinMax","baseValue","_dseHandled","_formatText","numberFormat","formatter","getNumberFormatter","logarithmic","differencePower","minLog","_minLogAdjusted","_minRealLog","pow","log","LOG10E","stepPower","stepAdjusted","minorGridCount","minorStep","previous","nextValue","decCount","fillEndPosition","labelEndPosition","hasTag","fillRule","minMaxStep","stepDecimalPlaces","E","treatZeroAs","valueToFinalPosition","getX","getY","_cellLocation","getStackedXValueWorking","getStackedYValueWorking","basePosition","cellEndValue","fixSmallStep","vc","fieldWorking","total","minDefined","maxDefined","selectionStrictMinMax","strictMinMax","seriesMin","seriesMax","minX","maxX","minY","maxY","isShowing","range","_minReal","_maxReal","smin","minMaxStep2","selectionMinReal","selectionMaxReal","_syncAxes","LN10","minDiff","diff","initialMin","initialMax","minAdapted","fold","maxAdapted","strictMinMaxSelection","strict","animatePrivate","exponent","power","_min","_max","strictMode","difference","stepDivisor","maxPrecision","ceiledStep","MAX_VALUE","minCount","_adjustPosition","extraDecimals","decimals","oldDiff","syncMin","syncMax","syncStep","currentCount","synced","omin","omax","ostep","_checkSync","Candlestick","_clear","_draw","CandlestickSeries","addDisposer","_new","columns","makeColumn","listTemplate","column","mainContainer","make","_updateGraphics","xAxis","getRaw","yAxis","lx0","lx1","ly0","ly1","hx0","hx1","hy0","hy1","orientation","vcy","vcx","locationX","locationY","openLocationX","openLocationY","_xOpenField","_xField","_xLowField","_xHighField","_aLocationY0","_aLocationY1","_yField","_yOpenField","_yLowField","_yHighField","_aLocationX0","_aLocationX1","_updateCandleGraphics","pl0","getPoint","pl1","ph0","ph1","rangeGraphics","ColumnSeries","XYChartScrollbar","Scrollbar","XYChart","interactiveChildren","panX","panY","wheelX","wheelY","Graphics","_addOrientationClass","startGrip","endGrip","states","create","zoomOutButton","_updateThumb","overlay","CategoryAxis","_itemMap","startCategory","endCategory","openKey","otherAxis","startDataItem","endDataItem","hasValue","__valueXShowFields","__valueYShowFields","f","fillIndex","categoryLocation","endCategoryLocation","categoryToIndex","indexToPosition","fillEndIndex","_axisLocation","category","dataItemToPosition","axisPositionToIndex","markDirtyText","seriesDataItem","zoomToIndexes","zoomToCategories","CategoryDateAxis","previousIndex","previousUnitValue","changed","skip","unitValue","added","pop","shouldAdd","item","DurationAxis","durationFormatter","getDurationFormatter","baseUnit","divisors","realDivisor","divisor","reducedCount","getFormat","OHLC","lY","hY","lX","hX","OHLCSeries","List","Template","SmoothedYLineSeries","LineSeries","_setDefault","_updateChildren","SmoothedXLineSeries","SmoothedXYLineSeries","tension","Step","context","t","_context","_t","stepAfter","prototype","areaStart","_line","areaEnd","lineStart","_x","_y","_point","lineEnd","closePath","point","StepLineSeries","_getPoints","o","points","itemLocationX0","itemLocationY0","itemLocationX1","itemLocationY1","xPos0","xField","yPos0","yField","xPos1","yPos1","_shouldInclude","iPoint0","point0","iPoint1","fillVisible","xOpenPos0","yOpenPos0","xOpenPos1","yOpenPos1","basePosY","basePosX","getOpen","valueX","xOpenField","valueY","yOpenField","stacked","stackToItemX","stackToItemY","closeIPoint0","closeIPoint1","segments","am5xy","that","bezierCurveTo","_x1","_k","_x2","_x0","_y1","_y2","_y0","Cardinal","custom","cardinal"],"sourceRoot":""}